{"version":3,"sources":["app/views/parts/PartsService.js","app/views/parts_type/PartsTypeService.js","../node_modules/@material-ui/core/esm/utils/unstable_useId.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","app/views/product_category/CategoryService.js","app/views/product_variation/VariationService.js","app/views/freight/FreightService.js","app/views/storage/StorageService.js","app/views/fullfillment/FullfillmentService.js","app/views/product/ProductService.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","app/views/product/CustomSelect.jsx","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","app/views/product/AddNewProduct.jsx"],"names":["getAllParts","axios","get","getPartsById","id","deleteParts","post","addNewParts","NewParts","updateParts","updatePartsList","PartsList","getAllPartsType","getPartsTypeById","deletePartsType","addNewPartsType","NewPartsType","updatePartsType","useId","idOverride","_React$useState","React","defaultId","setDefaultId","concat","Math","round","random","RadioGroupContext","useRadioGroup","getAllCategories","getCategoryById","deleteCategory","addNewCategory","NewCategory","updateCategory","getAllVariation","getVariationById","deleteVariation","addNewVariation","NewVariation","updateVariation","getAllVariationType","getAllVariationValue","type","getAllFreight","getFreightById","deleteFreight","addNewFreight","NewFreight","updateFreight","getAllStorage","getStorageById","deleteStorage","addNewStorage","NewStorage","updateStorage","getAllFullfillment","getFullfillmentById","deleteFullfillment","addNewFullfillment","NewFullfillment","updateFullfillment","getAllProducts","getProductById","deleteProduct","addNewProduct","newFormData","config","updateProduct","NewProduct","FormGroup","props","ref","classes","className","_props$row","row","other","_objectWithoutProperties","_extends","clsx","root","withStyles","display","flexDirection","flexWrap","name","RadioGroup","actions","children","nameProp","valueProp","value","onChange","rootRef","_useControlled","useControlled","controlled","default","defaultValue","_useControlled2","_slicedToArray","setValue","focus","input","current","querySelector","handleRef","useForkRef","Provider","event","target","role","useStyles","label","map","suggestion","makeStyles","theme","flexGrow","height","padding","valueContainer","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","components","Control","innerProps","innerRef","selectProps","TextFieldProps","fullWidth","InputProps","inputProps","Menu","square","MultiValue","tabIndex","isFocused","onDelete","removeProps","onClick","deleteIcon","NoOptionsMessage","color","Option","selected","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","CustomSelect","handleChange","selectedValue","textFieldProps","isMulti","options","useTheme","selectStyles","base","text","primary","font","styles","inputId","createSvgIcon","d","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","easeIn","checked","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","checkedProp","_props$color","onChangeProp","_props$size","size","radioGroup","createChainedFunction","SwitchBase","icon","checkedIcon","capitalize","disabled","secondary","colorPrimary","main","fade","action","hoverOpacity","colorSecondary","NumberFormatPrefixCustom","getInputRef","onValueChange","values","thousandSeparator","prefix","NumberFormatCustom","textAlign","AddNewProduct","state","product_image","image_file","SKU","UPC","ASIN","selectedParentCategory","selectedCategoryList","retailPrice","selectedFFAmazon","selectedFFThirdParty","selectedFFUs","productWidth","productHeight","productDepth","productGrams","packagedWidth","packagedHeight","packagedDepth","packagedGrams","selectedFreight","selectedParts","partsIDCode","notes","selectedStorage","fullfillmentType","storageDuration","freightQty","selectedVariationType","selectedVariationValue","variationTypeList","variationValueList","categoryList","freightList","partsList","storageList","fullfillmentList","handleSubmit","fulfillmentFBAFee","parts","part","push","newProduct","ID","generateRandomId","sku","upc","asin","variation_type","variation_value","parent_category","categories","a","retail_price","parseFloat","toFixed","fullfillment_amazon","fullfillment_thirdparty","fullfillment_us","product_width","product_height","product_depth","product_grams","packaged_width","packaged_height","packaged_depth","packaged_grams","freight","freight_qty","storage","storage_duration","fullfillment_fba_fee","fullfillment_type","formData","FormData","append","JSON","stringify","headers","then","res","history","catch","err","persist","setState","handleSelectVType","data","item","_id","handleSearchParts","e","index","obj","find","o","handleSelectParts","console","log","addNewPart","handleSelectFreight","UM","handleChangeMetric","items","category","costUSD","cost_usd","short_name","this","oem","routeSegments","onSubmit","onError","errors","variant","container","lg","md","sm","xs","src","width","htmlFor","URL","createObjectURL","files","validators","errorMessages","border","colSpan","align","InputLabelProps","shrink","control","labelPlacement","min","readOnly","rate","aria-label","qty","idCode","key","multiline","rows","Component"],"mappings":"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","file":"static/js/11.eea72282.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getAllParts = () => {\r\n  return axios.get(\"/api/parts/list\");\r\n};\r\nexport const getPartsById = id => {\r\n  return axios.get(`/api/parts/get?_id=${id}`);\r\n};\r\nexport const deleteParts = id => {\r\n  return axios.post(`/api/parts/delete?_id=${id}`);\r\n};\r\nexport const addNewParts = NewParts => {\r\n  return axios.post(\"/api/parts/add\", NewParts);\r\n};\r\nexport const updateParts = NewParts => {\r\n  return axios.post(\"/api/parts/update\", NewParts);\r\n};\r\nexport const updatePartsList = PartsList => {\r\n  return axios.post(\"/api/parts/update-list\", PartsList);\r\n}","import axios from \"axios\";\r\n\r\nexport const getAllPartsType = () => {\r\n  return axios.get(\"/api/parts-type/list\");\r\n};\r\nexport const getPartsTypeById = id => {\r\n  return axios.get(`/api/parts-type/get?_id=${id}`);\r\n};\r\nexport const deletePartsType = id => {\r\n  return axios.post(`/api/parts-type/delete?_id=${id}`);\r\n};\r\nexport const addNewPartsType = NewPartsType => {\r\n  return axios.post(\"/api/parts-type/add\", NewPartsType);\r\n};\r\nexport const updatePartsType = NewPartsType => {\r\n  return axios.post(\"/api/parts-type/update\", NewPartsType);\r\n};\r\n","import * as React from 'react';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function useId(idOverride) {\n  var _React$useState = React.useState(idOverride),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idOverride || defaultId;\n  React.useEffect(function () {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(\"mui-\".concat(Math.round(Math.random() * 1e5)));\n    }\n  }, [defaultId]);\n  return id;\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import axios from \"axios\";\r\n\r\nexport const getAllCategories = () => {\r\n  return axios.get(\"/api/product-category/list\");\r\n};\r\nexport const getCategoryById = id => {\r\n  return axios.get(`/api/product-category/get?uid=${id}`);\r\n};\r\nexport const deleteCategory = id => {\r\n  return axios.post(`/api/product-category/delete?uid=${id}`);\r\n};\r\nexport const addNewCategory = NewCategory => {\r\n  return axios.post(\"/api/product-category/add\", NewCategory);\r\n};\r\nexport const updateCategory = NewCategory => {\r\n  return axios.post(\"/api/product-category/update\", NewCategory);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllVariation = () => {\r\n  return axios.get(\"/api/product-variation/list\");\r\n};\r\nexport const getVariationById = id => {\r\n  return axios.get(`/api/product-variation/get?_id=${id}`);\r\n};\r\nexport const deleteVariation = id => {\r\n  return axios.post(`/api/product-variation/delete?_id=${id}`);\r\n};\r\nexport const addNewVariation = NewVariation => {\r\n  return axios.post(\"/api/product-variation/add\", NewVariation);\r\n};\r\nexport const updateVariation = NewVariation => {\r\n  return axios.post(\"/api/product-variation/update\", NewVariation);\r\n};\r\nexport const getAllVariationType = () => {\r\n  return axios.get(\"/api/product-variation/type_list\");\r\n}\r\nexport const getAllVariationValue = (type) => {\r\n  return axios.get(`/api/product-variation/value_list?type=${type}`);\r\n}","import axios from \"axios\";\r\n\r\nexport const getAllFreight = () => {\r\n  return axios.get(\"/api/freight/list\");\r\n};\r\nexport const getFreightById = id => {\r\n  return axios.get(`/api/freight/get?_id=${id}`);\r\n};\r\nexport const deleteFreight = id => {\r\n  return axios.post(`/api/freight/delete?_id=${id}`);\r\n};\r\nexport const addNewFreight = NewFreight => {\r\n  return axios.post(\"/api/freight/add\", NewFreight);\r\n};\r\nexport const updateFreight = NewFreight => {\r\n  return axios.post(\"/api/freight/update\", NewFreight);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllStorage = () => {\r\n  return axios.get(\"/api/storage/list\");\r\n};\r\nexport const getStorageById = id => {\r\n  return axios.get(`/api/storage/get?_id=${id}`);\r\n};\r\nexport const deleteStorage = id => {\r\n  return axios.post(`/api/storage/delete?_id=${id}`);\r\n};\r\nexport const addNewStorage = NewStorage => {\r\n  return axios.post(\"/api/storage/add\", NewStorage);\r\n};\r\nexport const updateStorage = NewStorage => {\r\n  return axios.post(\"/api/storage/update\", NewStorage);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllFullfillment = () => {\r\n  return axios.get(\"/api/fullfillment/list\");\r\n};\r\nexport const getFullfillmentById = id => {\r\n  return axios.get(`/api/fullfillment/get?_id=${id}`);\r\n};\r\nexport const deleteFullfillment = id => {\r\n  return axios.post(`/api/fullfillment/delete?_id=${id}`);\r\n};\r\nexport const addNewFullfillment = NewFullfillment => {\r\n  return axios.post(\"/api/fullfillment/add\", NewFullfillment);\r\n};\r\nexport const updateFullfillment = NewFullfillment => {\r\n  return axios.post(\"/api/fullfillment/update\", NewFullfillment);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllProducts = () => {\r\n  return axios.get(\"/api/products/list\");\r\n};\r\nexport const getProductById = id => {\r\n  return axios.get(`/api/products/get?_id=${id}`);\r\n};\r\nexport const deleteProduct = id => {\r\n  return axios.post(`/api/products/delete?_id=${id}`);\r\n};\r\nexport const addNewProduct = (newFormData, config) => {\r\n  return axios.post(\"/api/products/add\", newFormData, config);\r\n};\r\nexport const updateProduct = NewProduct => {\r\n  return axios.post(\"/api/products/update\", NewProduct);\r\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst suggestions = [\r\n  { label: \"Afghanistan\" },\r\n  { label: \"Aland Islands\" },\r\n  { label: \"Albania\" },\r\n  { label: \"Algeria\" },\r\n  { label: \"American Samoa\" },\r\n  { label: \"Andorra\" },\r\n  { label: \"Angola\" },\r\n  { label: \"Anguilla\" },\r\n  { label: \"Antarctica\" },\r\n  { label: \"Antigua and Barbuda\" },\r\n  { label: \"Argentina\" },\r\n  { label: \"Armenia\" },\r\n  { label: \"Aruba\" },\r\n  { label: \"Australia\" },\r\n  { label: \"Austria\" },\r\n  { label: \"Azerbaijan\" },\r\n  { label: \"Bahamas\" },\r\n  { label: \"Bahrain\" },\r\n  { label: \"Bangladesh\" },\r\n  { label: \"Barbados\" },\r\n  { label: \"Belarus\" },\r\n  { label: \"Belgium\" },\r\n  { label: \"Belize\" },\r\n  { label: \"Benin\" },\r\n  { label: \"Bermuda\" },\r\n  { label: \"Bhutan\" },\r\n  { label: \"Bolivia, Plurinational State of\" },\r\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\r\n  { label: \"Bosnia and Herzegovina\" },\r\n  { label: \"Botswana\" },\r\n  { label: \"Bouvet Island\" },\r\n  { label: \"Brazil\" },\r\n  { label: \"British Indian Ocean Territory\" },\r\n  { label: \"Brunei Darussalam\" }\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label\r\n}));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nexport default function CustomSelect({handleChange, selectedValue, textFieldProps, isMulti, options}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          options={options}\r\n          components={components}\r\n          TextFieldProps={textFieldProps}\r\n          value={selectedValue}\r\n          onChange={handleChange}\r\n          isMulti={isMulti}\r\n        />\r\n      </NoSsr>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import React, { Component } from \"react\";\r\nimport {\r\n  Fab,\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { Breadcrumb, SimpleCard } from \"egret\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport { getAllCategories } from \"../product_category/CategoryService\";\r\nimport { getAllVariationType, getAllVariationValue } from \"../product_variation/VariationService\";\r\nimport { getAllFreight } from \"../freight/FreightService\";\r\nimport { getAllParts } from \"../parts/PartsService\";\r\nimport { addNewProduct } from \"../product/ProductService\"\r\nimport NumberFormat from \"react-number-format\";\r\nimport { generateRandomId } from \"utils\";\r\nimport { addNewPartsType } from \"../parts_type/PartsTypeService\";\r\nimport { getAllStorage } from \"../storage/StorageService\";\r\nimport { getAllFullfillment } from \"../fullfillment/FullfillmentService\";\r\n\r\nfunction NumberFormatPrefixCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value\r\n          }\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      style={{textAlign: 'center'}}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value\r\n          }\r\n        });\r\n      }}\r\n      thousandSeparator\r\n    />\r\n  );\r\n}\r\n\r\nclass AddNewProduct extends Component {\r\n  state = {\r\n    product_image: null,\r\n    image_file: null,\r\n    name: \"\",\r\n    SKU: \"\",\r\n    UPC: \"\",\r\n    ASIN: \"\",\r\n    selectedParentCategory: \"\",\r\n    selectedCategoryList: [],\r\n    retailPrice: 0,\r\n    selectedFFAmazon: null,\r\n    selectedFFThirdParty: null,\r\n    selectedFFUs: null,\r\n    productWidth: 0,\r\n    productHeight: 0,\r\n    productDepth: 0,\r\n    productGrams: 0,\r\n    packagedWidth: 0,\r\n    packagedHeight: 0,\r\n    packagedDepth: 0,\r\n    packagedGrams: 0,\r\n    selectedFreight: null,\r\n    selectedParts: [],\r\n    partsIDCode: [],\r\n    notes: \"\",\r\n    selectedStorage: null,\r\n    fullfillmentType: \"Amazon\",\r\n    storageDuration: 0,\r\n    freightQty: 0,\r\n\r\n    selectedVariationType: \"\",\r\n    selectedVariationValue: \"\",\r\n    variationTypeList: [],\r\n    variationValueList: [],\r\n    categoryList: [],\r\n    freightList: [],\r\n    partsList: [],\r\n    storageList: [],\r\n    fullfillmentList: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    getAllCategories().then((res) => {\r\n      let items = res.data.map(item => ({\r\n        value: item._id,\r\n        label: item.category,\r\n      }));\r\n      this.setState({ categoryList: items });\r\n    });\r\n    getAllVariationType().then((res) => {\r\n      this.setState({ variationTypeList: res.data.map(item => ({value: item._id, label: item._id})) });\r\n    });\r\n    getAllFreight().then((res) => {\r\n      this.setState({ freightList: res.data.map(item => ({value: item._id, label: item.name, costUSD: item.cost_usd, UM: item.UM.short_name})) });\r\n    });\r\n    getAllParts().then((res) => {\r\n      this.setState({ partsList: res.data.map(item => ({ ...item, value: item._id, label: item.name })) }, () => {\r\n      });\r\n    });\r\n    getAllStorage().then((res) => {\r\n      this.setState({ storageList: res.data.map(item => ({ ...item, value: item._id, label: item.name, UM: item.UM.short_name })) });\r\n    });\r\n    getAllFullfillment().then((res) => {\r\n      this.setState({ fullfillmentList: res.data.map(item => ({ ...item, value: item._id, label: item.name })) });\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    let fulfillmentFBAFee = this.state.selectedFFAmazon.value;\r\n    if (this.state.fullfillmentType == 'ThirdPary')\r\n      fulfillmentFBAFee = this.state.selectedFFThirdParty.value;\r\n    else if (this.state.fullfillmentType == 'US')\r\n      fulfillmentFBAFee = this.state.selectedFFUs.value;\r\n    let parts = [];\r\n    this.state.selectedParts.map((part) => {\r\n      if (part && part.value)\r\n        parts.push(part.value);\r\n    });\r\n    const newProduct = {\r\n      ID: 'P' + generateRandomId(),\r\n      name: this.state.name,\r\n      sku: this.state.SKU,\r\n      upc: this.state.UPC,\r\n      asin: this.state.ASIN,\r\n      variation_type: this.state.selectedVariationType.value,\r\n      variation_value: this.state.selectedVariationValue.value,\r\n      parent_category: this.state.selectedParentCategory.value,\r\n      categories: this.state.selectedCategoryList.map(a => a.value),\r\n      retail_price: parseFloat(this.state.retailPrice).toFixed(2),\r\n      fullfillment_amazon: this.state.selectedFFAmazon.value,\r\n      fullfillment_thirdparty: this.state.selectedFFThirdParty.value,\r\n      fullfillment_us: this.state.selectedFFUs.value,\r\n      product_width: this.state.productWidth,\r\n      product_height: this.state.productHeight,\r\n      product_depth: this.state.productDepth,\r\n      product_grams: this.state.productGrams,\r\n      packaged_width: this.state.packagedWidth,\r\n      packaged_height: this.state.packagedHeight,\r\n      packaged_depth: this.state.packagedDepth,\r\n      packaged_grams: this.state.packagedGrams,\r\n      freight: this.state.selectedFreight.value,\r\n      freight_qty: this.state.freightQty,\r\n      storage: this.state.selectedStorage.value,\r\n      storage_duration: this.state.storageDuration,\r\n      notes: this.state.notes,\r\n      parts: parts,\r\n      fullfillment_fba_fee: fulfillmentFBAFee,\r\n      fullfillment_type: this.state.fullfillmentType,\r\n    };\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n    };\r\n    const formData = new FormData();\r\n    formData.append('file', this.state.image_file);\r\n    formData.append('new_product', JSON.stringify(newProduct));\r\n    addNewProduct(formData, config).then((res) => {\r\n      this.props.history.push('/product/list');\r\n    }).catch((err) => {\r\n\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.persist();\r\n    this.setState({\r\n    [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectVType = (data) => {\r\n    this.setState({selectedVariationType: data});\r\n    getAllVariationValue(data.value).then((res) => {\r\n      this.setState({ variationValueList: res.data.map(item => ({value: item._id, label: item._id})) });\r\n    });\r\n  }\r\n\r\n  handleSearchParts = (e, index) => {\r\n    e.persist();\r\n    let {partsIDCode, selectedParts} = this.state;\r\n    partsIDCode[index] = e.target.value;\r\n    let obj = this.state.partsList.find(o => o.ID === e.target.value);\r\n    if (obj)\r\n      selectedParts[index] = obj;\r\n    else\r\n      selectedParts[index] = null;\r\n    this.setState({selectedParts: selectedParts, partsIDCode: partsIDCode});\r\n  }\r\n\r\n  handleSelectParts = (data, index) => {\r\n    let {partsIDCode, selectedParts} = this.state;\r\n    console.log(data);\r\n    partsIDCode[index] = data.ID;\r\n    selectedParts[index] = data;\r\n    console.log(partsIDCode, selectedParts);\r\n    this.setState({selectedParts: selectedParts, partsIDCode: partsIDCode});\r\n  }\r\n  \r\n  addNewPart = () => {\r\n    let { selectedParts, partsIDCode } = this.state;\r\n    partsIDCode.push(\"\");\r\n    selectedParts.push(null);\r\n    this.setState({partsIDCode, selectedParts}, () => {\r\n      console.log(this.state);\r\n    });\r\n  }\r\n\r\n  handleSelectFreight = (data) => {\r\n    let freightQty = 0;\r\n    if (data.UM == 'CBM')\r\n      freightQty = parseFloat(this.state.productWidth * this.state.productHeight * this.state.productDepth);\r\n    else if (data.UM == 'KG')\r\n      freightQty = parseFloat(this.state.productGrams / 1000);\r\n    else if (data.UM == 'LB')\r\n      freightQty = parseFloat(this.state.productGrams / 1000 * 2.20462);\r\n    else\r\n      freightQty = 0;\r\n    this.setState({freightQty: freightQty, selectedFreight: data});\r\n  }\r\n\r\n  handleChangeMetric = (e, name) => {\r\n    this.setState({\r\n      [name]: e.target.value\r\n    }, () => {\r\n      let freightQty = 0;\r\n      if (this.state.selectedFreight) {\r\n        if (this.state.selectedFreight.UM == 'CBM')\r\n          freightQty = parseFloat(this.state.productWidth * this.state.productHeight * this.state.productDepth);\r\n        else if (this.state.selectedFreight.UM == 'KG')\r\n          freightQty = parseFloat(this.state.productGrams / 1000);\r\n        else if (this.state.selectedFreight.UM == 'LB')\r\n          freightQty = parseFloat(this.state.productGrams / 1000 * 2.20462);\r\n        else\r\n          freightQty = 0;\r\n        this.setState({freightQty});\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    let { \r\n      name,\r\n      SKU,\r\n      UPC,\r\n      ASIN,\r\n      retailPrice,\r\n      selectedFFAmazon,\r\n      selectedFFUs,\r\n      selectedFFThirdParty,\r\n      variationTypeList,\r\n      selectedVariationType,\r\n      variationValueList,\r\n      selectedVariationValue,\r\n      categoryList,\r\n      selectedParentCategory,\r\n      selectedCategoryList,\r\n      productWidth,\r\n      productHeight,\r\n      productDepth,\r\n      productGrams,\r\n      packagedWidth,\r\n      packagedHeight,\r\n      packagedDepth,\r\n      packagedGrams,\r\n      freightList,\r\n      selectedFreight,\r\n      freightQty,\r\n      partsList,\r\n      selectedParts,\r\n      partsIDCode,\r\n      notes,\r\n      storageList,\r\n      fullfillmentList,\r\n      selectedStorage,\r\n      storageDuration,\r\n      fullfillmentType,\r\n    } = this.state;\r\n    let oem = 0;\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: \"Add New Product\" }]} />\r\n        </div>\r\n        <SimpleCard>\r\n          <ValidatorForm\r\n            ref=\"form\"\r\n            onSubmit={this.handleSubmit}\r\n            onError={(errors) => null}\r\n          >\r\n            <div className=\"viewer_actions px-16 flex flex-end\">\r\n              <div className=\"mb-24\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"py-8\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Grid container spacing={6}>\r\n              <Grid item lg={6} md={6} sm={12} xs={12} className=\"text-center\">\r\n                <img className=\"border-radius-4 mb-16\" src={this.state.product_image} width=\"300\"/>\r\n                <div className=\"\">\r\n                <label htmlFor=\"upload-single-file\">\r\n                  <Fab\r\n                    className=\"capitalize\"\r\n                    color=\"primary\"\r\n                    component=\"span\"\r\n                    variant=\"extended\"\r\n                  >\r\n                    <div className=\"flex flex-middle\">\r\n                      <Icon className=\"pr-8\">cloud_upload</Icon>\r\n                      <span>Upload Product Image</span>\r\n                    </div>\r\n                  </Fab>\r\n                </label>\r\n                <input\r\n                  className=\"display-none\"\r\n                  onChange={(e) => this.setState({product_image: URL.createObjectURL(e.target.files[0]), image_file: e.target.files[0]})}\r\n                  id=\"upload-single-file\"\r\n                  type=\"file\"\r\n                />\r\n                </div>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Name\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"SKU\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"SKU\"\r\n                  value={SKU}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"UPC\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"UPC\"\r\n                  value={UPC}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"ASIN\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"ASIN\"\r\n                  value={ASIN}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Table style={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell colSpan={2} align='center' className=\"bg-light-green\">\r\n                          Variation Qualities\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Type</TableCell>\r\n                      <TableCell align=\"center\">Value</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell className=\"px-10\">\r\n                        <CustomSelect\r\n                          textFieldProps={{\r\n                            InputLabelProps: {\r\n                              htmlFor: \"react-select-single\",\r\n                              shrink: true,\r\n                            },\r\n                            placeholder: \"\",\r\n                          }}\r\n                          options={variationTypeList}\r\n                          handleChange={this.handleSelectVType}\r\n                          selectedValue={selectedVariationType}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell className=\"px-10\">\r\n                        <CustomSelect\r\n                          textFieldProps={{\r\n                            InputLabelProps: {\r\n                              htmlFor: \"react-select-single\",\r\n                              shrink: true,\r\n                            },\r\n                            placeholder: \"\",\r\n                          }}\r\n                          options={variationValueList}\r\n                          handleChange={(data) => {this.setState({selectedVariationValue: data})}}\r\n                          selectedValue={selectedVariationValue}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: 'Parent Categroy',\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={categoryList}\r\n                  handleChange={(data) => {this.setState({selectedParentCategory: data})}}\r\n                  selectedValue={selectedParentCategory}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: \"Categories\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={categoryList}\r\n                  handleChange={(data) => {this.setState({selectedCategoryList: data})}}\r\n                  selectedValue={selectedCategoryList}\r\n                  isMulti={true}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextField\r\n                  value={retailPrice}\r\n                  className=\"w-100 mb-16\"\r\n                  onChange={(e) => this.setState({\r\n                      retailPrice: e.target.value\r\n                  })}\r\n                  name=\"retailPrice\"\r\n                  label=\"Retail Price\"\r\n                  InputProps={{\r\n                    inputComponent: NumberFormatPrefixCustom,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <RadioGroup\r\n                  className=\"mb-16\"\r\n                  value={fullfillmentType}\r\n                  name=\"fullfillmentType\"\r\n                  onChange={this.handleChange}\r\n                  row\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"Amazon\"\r\n                    control={<Radio color=\"secondary\" />}\r\n                    label=\"Fullfillment Amazon\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                  <FormControlLabel\r\n                    label=\"Fullfillment Third Party\"\r\n                    control={<Radio color=\"secondary\" />}\r\n                    value=\"ThirdParty\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                  <FormControlLabel\r\n                    label=\"Fullfillment By US\"\r\n                    control={<Radio color=\"secondary\" />}\r\n                    value=\"US\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                </RadioGroup>\r\n                <CustomSelect\r\n                  className=\"mb-16\"\r\n                  textFieldProps={{\r\n                    label: \"Fullfillment Amazon\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={fullfillmentList}\r\n                  handleChange={(data) => {this.setState({selectedFFAmazon: data})}}\r\n                  selectedValue={selectedFFAmazon}\r\n                />\r\n                <div className=\"pb-16\"></div>\r\n                <CustomSelect\r\n                  className=\"mb-16\"\r\n                  textFieldProps={{\r\n                    label: \"Fullfillment By Third Party\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={fullfillmentList}\r\n                  handleChange={(data) => {this.setState({selectedFFThirdParty: data})}}\r\n                  selectedValue={selectedFFThirdParty}\r\n                />\r\n                <div className=\"pb-16\"></div>\r\n                <CustomSelect\r\n                  className=\"mb-16\"\r\n                  textFieldProps={{\r\n                    label: \"Fullfillment By US\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={fullfillmentList}\r\n                  handleChange={(data) => {this.setState({selectedFFUs: data})}}\r\n                  selectedValue={selectedFFUs}\r\n                />\r\n                <div className=\"pb-16\"></div>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Table style={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className=\"bg-light-green\">\r\n                                METRIC\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className=\"bg-default text-green\">\r\n                                PRODUCT\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Width</TableCell>\r\n                            <TableCell align=\"center\">Height</TableCell>\r\n                            <TableCell align=\"center\">Depth</TableCell>\r\n                            <TableCell align=\"center\">CBM</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"productWidth\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                      min: 0,\r\n                                      style: { textAlign: 'center' }\r\n                                    }}\r\n                                    name=\"productWidth\"\r\n                                    value={productWidth}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"productHeight\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"productHeight\"\r\n                                    value={productHeight}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"productDepth\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"productDepth\"\r\n                                    value={productDepth}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                {parseFloat(productWidth * productHeight * productDepth).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                                Grams\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                                Kilo\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"productGrams\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"productGrams\"\r\n                                    value={productGrams}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                                {parseFloat(productGrams / 1000).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className='bg-default text-green font-weight-500'>\r\n                                PACKAGED\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Width\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Height\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Depth\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                CBM\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"packagedWidth\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"packagedWidth\"\r\n                                    value={packagedWidth}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"packagedHeight\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"packagedHeight\"\r\n                                    value={packagedHeight}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"packagedDepth\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"packagedDepth\"\r\n                                    value={packagedDepth}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedWidth * packagedHeight * packagedDepth).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                                Grams\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                                Kilo\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"packagedGrams\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"packagedGrams\"\r\n                                    value={packagedGrams}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedGrams / 1000).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Table style={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className=\"bg-light-green\">\r\n                                ENGLISH\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className=\"bg-default text-green\">\r\n                                PRODUCT\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Width</TableCell>\r\n                            <TableCell align=\"center\">Height</TableCell>\r\n                            <TableCell align=\"center\">Depth</TableCell>\r\n                            <TableCell align=\"center\">CBM</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productWidth * 1.0936).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productHeight * 1.0936).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productDepth * 1.0936).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productWidth * productHeight * productDepth * 1.3080).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                              Ounzes\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                              Pounds\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productGrams * 0.0353).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productGrams / 1000 * 2.20462).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className='bg-default text-green font-weight-500'>\r\n                                PACKAGED\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Width\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Height\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Depth\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                CBM\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedWidth * 1.0936).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedHeight * 1.0936).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedDepth * 1.0936).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedWidth * packagedHeight * packagedDepth * 1.3080).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                              Ounzes\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                              Pounds\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedGrams * 0.0353).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedGrams / 1000 * 2.20462).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={6} xs={6}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: 'Freight',\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={freightList}\r\n                  selectedValue={selectedFreight}\r\n                  handleChange={this.handleSelectFreight}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={6} xs={6}>\r\n                <TextField \r\n                  type=\"text\"\r\n                  label='QTY'\r\n                  name=\"freightQty\"\r\n                  value={freightQty}\r\n                  readOnly\r\n                  />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={6} xs={6}>\r\n                {selectedFreight && (\r\n                  <TextField \r\n                    label='UM'\r\n                    type=\"text\"\r\n                    value={selectedFreight.UM}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={6} xs={6}>\r\n                {selectedFreight && (\r\n                  <TextField \r\n                    label='Cost USD'\r\n                    type=\"text\"\r\n                    value={'$ ' + parseFloat(selectedFreight.costUSD * freightQty).toFixed(2)}\r\n                    readOnly />\r\n                )}\r\n                \r\n              </Grid>\r\n              \r\n              <Grid item lg={3} md={3} sm={6} xs={6}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: 'Storage',\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={storageList}\r\n                  selectedValue={selectedStorage}\r\n                  handleChange={(data) => this.setState({selectedStorage: data, storageDuration: 1})}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={6} xs={6}>\r\n                <TextField \r\n                  label='Duration'\r\n                  type=\"number\"\r\n                  name=\"storageDuration\"\r\n                  value={storageDuration}\r\n                  onChange={this.handleChange} />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={6} xs={6}>\r\n                {selectedStorage && (\r\n                  <TextField \r\n                    label='UM'\r\n                    type=\"text\"\r\n                    value={selectedStorage.UM}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={6} xs={6}>\r\n                {selectedStorage && (\r\n                  <TextField \r\n                    label='Rate'\r\n                    type=\"text\"\r\n                    value={'$ ' + parseFloat(selectedStorage.rate * storageDuration).toFixed(2)}\r\n                    readOnly />\r\n                )}\r\n                \r\n              </Grid>\r\n\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <Table style={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                    <colgroup>\r\n                        <col style={{width:'10%'}}/>\r\n                        <col style={{width:'40%'}}/>\r\n                        <col style={{width:'10%'}}/>\r\n                        <col style={{width:'10%'}}/>\r\n                        <col style={{width:'10%'}}/>\r\n                        <col style={{width:'10%'}}/>\r\n                        <col style={{width:'10%'}}/>\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell colSpan={1} align='center' className=\"bg-light-green\">\r\n                              <Fab color=\"primary\" aria-label=\"Add\" onClick={this.addNewPart}>\r\n                                <Icon>add</Icon>\r\n                              </Fab>\r\n                            </TableCell>\r\n                            <TableCell colSpan={6} align='center' className=\"bg-light-green\">\r\n                                PARTS\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={6} align='right'>\r\n                              OEM:\r\n                            </TableCell>\r\n                            <TableCell colSpan={1}>\r\n                              {\r\n                                selectedParts.map((part) => {\r\n                                  if (part && part.cost_usd && part.qty)\r\n                                    oem += parseFloat(part.cost_usd) * parseFloat(part.qty);\r\n                                })\r\n                              }\r\n                              $ {oem}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">ID Code</TableCell>\r\n                            <TableCell align=\"center\">Name</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">UM</TableCell>\r\n                            <TableCell align=\"center\">UPrice</TableCell>\r\n                            <TableCell align=\"center\">Qty</TableCell>\r\n                            <TableCell align=\"center\">Total</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {\r\n                        partsIDCode && partsIDCode.map((idCode, index) => {\r\n                          return (\r\n                            <TableRow key={index}>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextValidator\r\n                                    onChange={(e) => this.handleSearchParts(e, index)}\r\n                                    type=\"text\"\r\n                                    readOnly\r\n                                    value={idCode}\r\n                                    inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell align='center' className=\"pr-10\">\r\n                                <CustomSelect\r\n                                  textFieldProps={{\r\n                                    InputLabelProps: {\r\n                                      htmlFor: \"react-select-single\",\r\n                                      shrink: true,\r\n                                    },\r\n                                    placeholder: \"\",\r\n                                  }}\r\n                                  handleChange={(data) => this.handleSelectParts(data, index)}\r\n                                  selectedValue={selectedParts[index] && selectedParts[index]}\r\n                                  options={partsList}\r\n                                />\r\n                              </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {selectedParts[index] && selectedParts[index].type.name}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {selectedParts[index] && selectedParts[index].UM.short_name}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              $ {selectedParts[index] && selectedParts[index].cost_usd}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {selectedParts[index] && selectedParts[index].qty}\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              $ {selectedParts[index] && parseFloat(selectedParts[index].qty * selectedParts[index].cost_usd).toFixed(2)}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          )\r\n                          \r\n                        })\r\n                      }\r\n                        \r\n                    </TableBody>\r\n                </Table>\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextField\r\n                    label=\"Notes\"\r\n                    fullWidth\r\n                    multiline={true}\r\n                    rows={5}\r\n                    name=\"notes\"\r\n                    onChange={this.handleChange}\r\n                    value={notes}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </ValidatorForm>\r\n        </SimpleCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewProduct;\r\n"],"sourceRoot":""}