{"version":3,"sources":["app/views/parts_um/PartsUMService.js","app/views/parts/PartsService.js","app/views/parts_type/PartsTypeService.js","app/views/supplier_type/SupplierTypeService.js","app/views/supplier/SupplierService.js","app/views/supplier/CustomSelect.jsx","../node_modules/@material-ui/core/esm/Fab/Fab.js","app/views/supplier/EditSupplier.jsx"],"names":["getAllPartsUM","axios","get","getPartsUMById","id","deletePartsUM","post","addNewPartsUM","NewPartsUM","updatePartsUM","getAllParts","getPartsById","deleteParts","addNewParts","NewParts","updateParts","updatePartsList","PartsList","getAllPartsType","getPartsTypeById","deletePartsType","addNewPartsType","NewPartsType","updatePartsType","getAllSupplierTypes","getSupplierTypeById","deleteSupplierType","addNewSupplierType","NewSupplierType","updateSupplierType","getAllSuppliers","getSupplierById","deleteSupplier","mid","addNewSupplier","NewSupplier","updateSupplier","useStyles","makeStyles","theme","root","flexGrow","height","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","props","ref","components","Control","children","innerProps","innerRef","selectProps","classes","TextFieldProps","fullWidth","InputProps","inputProps","className","Menu","square","MultiValue","tabIndex","label","clsx","isFocused","onDelete","removeProps","onClick","deleteIcon","NoOptionsMessage","color","Option","selected","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","CustomSelect","handleChange","selectedValue","textFieldProps","isMulti","options","useTheme","selectStyles","base","text","primary","font","styles","inputId","value","onChange","Fab","React","_props$color","_props$component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","ButtonBase","_extends","extended","concat","capitalize","secondary","colorInherit","focusRipple","focusVisible","withStyles","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","minWidth","width","boxShadow","shadows","getContrastText","A100","action","disabledBackground","textDecoration","justifyContent","contrastText","main","dark","sizeSmall","sizeMedium","name","countries","map","suggestion","NumberFormatCustom","getInputRef","onValueChange","values","target","thousandSeparator","prefix","EditSupplier","state","_id","ID","start_date","Date","country","contact","skype","wechat","whatsapp","mobile","office","email","main_products_services","address","notes","selectedSupplierType","selectedCountry","loading","supplierTypeList","partsUMList","partsTypeList","supplierList","parts","handleSubmit","event","then","res","legnth","newParts","part","push","IDCode","selectedType","cost_usd","UPrice","UM","selectedUM","qty","supplier_id","updatedParts","res1","history","source","persist","setState","addNewPart","newPart","generateRandomId","handleSelectPartsType","data","index","handleSelectPartsUM","handleChangePartsQty","e","handleChangeUPrice","handleChangePartName","types","item","short_name","this","match","params","supplier","curParts","routeSegments","onSubmit","onError","errors","container","lg","md","sm","xs","readOnly","validators","errorMessages","utils","DateFnsUtils","inputVariant","autoOk","date","KeyboardButtonProps","InputLabelProps","htmlFor","shrink","multiline","rows","paddingBottom","border","whiteSpace","colSpan","align","aria-label","key","min","textAlign","parseFloat","toFixed","Component"],"mappings":"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","file":"static/js/28.af89462c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getAllPartsUM = () => {\r\n  return axios.get(\"/api/parts-um/list\");\r\n};\r\nexport const getPartsUMById = id => {\r\n  return axios.get(`/api/parts-um/get?_id=${id}`);\r\n};\r\nexport const deletePartsUM = id => {\r\n  return axios.post(`/api/parts-um/delete?_id=${id}`);\r\n};\r\nexport const addNewPartsUM = NewPartsUM => {\r\n  return axios.post(\"/api/parts-um/add\", NewPartsUM);\r\n};\r\nexport const updatePartsUM = NewPartsUM => {\r\n  return axios.post(\"/api/parts-um/update\", NewPartsUM);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllParts = () => {\r\n  return axios.get(\"/api/parts/list\");\r\n};\r\nexport const getPartsById = id => {\r\n  return axios.get(`/api/parts/get?_id=${id}`);\r\n};\r\nexport const deleteParts = id => {\r\n  return axios.post(`/api/parts/delete?_id=${id}`);\r\n};\r\nexport const addNewParts = NewParts => {\r\n  return axios.post(\"/api/parts/add\", NewParts);\r\n};\r\nexport const updateParts = NewParts => {\r\n  return axios.post(\"/api/parts/update\", NewParts);\r\n};\r\nexport const updatePartsList = PartsList => {\r\n  return axios.post(\"/api/parts/update-list\", PartsList);\r\n}","import axios from \"axios\";\r\n\r\nexport const getAllPartsType = () => {\r\n  return axios.get(\"/api/parts-type/list\");\r\n};\r\nexport const getPartsTypeById = id => {\r\n  return axios.get(`/api/parts-type/get?_id=${id}`);\r\n};\r\nexport const deletePartsType = id => {\r\n  return axios.post(`/api/parts-type/delete?_id=${id}`);\r\n};\r\nexport const addNewPartsType = NewPartsType => {\r\n  return axios.post(\"/api/parts-type/add\", NewPartsType);\r\n};\r\nexport const updatePartsType = NewPartsType => {\r\n  return axios.post(\"/api/parts-type/update\", NewPartsType);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllSupplierTypes = () => {\r\n  return axios.get(\"/api/supplier-type/list\");\r\n};\r\nexport const getSupplierTypeById = id => {\r\n  return axios.get(`/api/supplier-type/get?uid=${id}`);\r\n};\r\nexport const deleteSupplierType = id => {\r\n  return axios.post(`/api/supplier-type/delete?uid=${id}`);\r\n};\r\nexport const addNewSupplierType = NewSupplierType => {\r\n  return axios.post(\"/api/supplier-type/add\", NewSupplierType);\r\n};\r\nexport const updateSupplierType = NewSupplierType => {\r\n  return axios.post(\"/api/supplier-type/update\", NewSupplierType);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllSuppliers = () => {\r\n  return axios.get(\"/api/suppliers/list\");\r\n};\r\nexport const getSupplierById = id => {\r\n  return axios.get(`/api/suppliers/get?uid=${id}`);\r\n};\r\nexport const deleteSupplier = mid => {\r\n  return axios.post(`/api/suppliers/delete?uid=${mid}`);\r\n};\r\nexport const addNewSupplier = NewSupplier => {\r\n  return axios.post(\"/api/suppliers/add\", NewSupplier);\r\n};\r\nexport const updateSupplier = NewSupplier => {\r\n  return axios.post(\"/api/suppliers/update\", NewSupplier);\r\n};\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nexport default function CustomSelect({handleChange, selectedValue, textFieldProps, isMulti, options}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          options={options}\r\n          components={components}\r\n          TextFieldProps={textFieldProps}\r\n          value={selectedValue}\r\n          onChange={handleChange}\r\n          isMulti={isMulti}\r\n        />\r\n      </NoSsr>\r\n  );\r\n}\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\nvar Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'large' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'round' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, variant !== \"round\" && classes.extended, size !== 'large' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['extended', 'round'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, SimpleCard } from \"egret\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport { updateSupplier, getAllSuppliers, getSupplierById } from \"./SupplierService\";\r\nimport { getAllSupplierTypes } from \"../supplier_type/SupplierTypeService\";\r\nimport { getAllPartsUM } from \"../parts_um/PartsUMService\";\r\nimport { getAllPartsType, addNewPartsType } from \"../parts_type/PartsTypeService\";\r\nimport { addNewParts, updateParts, updatePartsList } from \"../parts/PartsService\";\r\nimport { generateRandomId } from \"utils\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst countries = [\r\n  { label: \"Afghanistan\" },\r\n  { label: \"Aland Islands\" },\r\n  { label: \"Albania\" },\r\n  { label: \"Algeria\" },\r\n  { label: \"American Samoa\" },\r\n  { label: \"Andorra\" },\r\n  { label: \"Angola\" },\r\n  { label: \"Anguilla\" },\r\n  { label: \"Antarctica\" },\r\n  { label: \"Antigua and Barbuda\" },\r\n  { label: \"Argentina\" },\r\n  { label: \"Armenia\" },\r\n  { label: \"Aruba\" },\r\n  { label: \"Australia\" },\r\n  { label: \"Austria\" },\r\n  { label: \"Azerbaijan\" },\r\n  { label: \"Bahamas\" },\r\n  { label: \"Bahrain\" },\r\n  { label: \"Bangladesh\" },\r\n  { label: \"Barbados\" },\r\n  { label: \"Belarus\" },\r\n  { label: \"Belgium\" },\r\n  { label: \"Belize\" },\r\n  { label: \"Benin\" },\r\n  { label: \"Bermuda\" },\r\n  { label: \"Bhutan\" },\r\n  { label: \"Bolivia, Plurinational State of\" },\r\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\r\n  { label: \"Bosnia and Herzegovina\" },\r\n  { label: \"Botswana\" },\r\n  { label: \"Bouvet Island\" },\r\n  { label: \"Brazil\" },\r\n  { label: \"British Indian Ocean Territory\" },\r\n  { label: \"Brunei Darussalam\" }\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value\r\n          }\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nclass EditSupplier extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    ID: \"\",\r\n    start_date: new Date(),\r\n    type: \"\",\r\n    country: \"\",\r\n    name: \"\",\r\n    contact: \"\",\r\n    skype: \"\",\r\n    wechat: \"\",\r\n    whatsapp: \"\",\r\n    mobile: \"\",\r\n    office: \"\",\r\n    email: \"\",\r\n    main_products_services: \"\",\r\n    address: \"\",\r\n    notes: \"\",\r\n    selectedSupplierType: null,\r\n    selectedCountry: null,\r\n    loading: false,\r\n    supplierTypeList: [],\r\n    partsUMList: [],\r\n    partsTypeList: [],\r\n    supplierList: [],\r\n    parts: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    getAllSupplierTypes().then((res) => {\r\n      let types = res.data.map(item => ({\r\n        value: item._id,\r\n        label: item.name,\r\n      }));\r\n      this.setState({ supplierTypeList: types });\r\n    });\r\n    getAllPartsType().then((res) => {\r\n      this.setState({ partsTypeList: res.data.map(item => ({value: item._id, label: item.name})) });\r\n    });\r\n    getAllPartsUM().then((res) => {\r\n      this.setState({ partsUMList: res.data.map(item => ({value: item._id, label: item.short_name})) });\r\n    });\r\n\r\n    getSupplierById(this.props.match.params.id).then((res) => {\r\n      let supplier = res.data.supplier;\r\n      let parts = res.data.parts;\r\n      supplier.selectedSupplierType = {value: supplier.type._id, label:supplier.type.name};\r\n      supplier.type = supplier.type._id;\r\n      supplier.selectedCountry = {value: supplier.country, label: supplier.country};\r\n      let curParts = parts.map((part) => {\r\n        return {\r\n          _id: part._id,\r\n          name: part.name,\r\n          selectedUM: {value: part.UM._id, label: part.UM.short_name},\r\n          selectedType: {value: part.type._id, label: part.type.name},\r\n          IDCode: part.ID,\r\n          qty: part.qty,\r\n          UPrice: part.cost_usd,  \r\n        }\r\n      });\r\n      this.setState({\r\n        ...supplier,\r\n        parts: curParts\r\n      }, () => {\r\n      });\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    updateSupplier(this.state).then((res) => {\r\n      if (this.state.parts.legnth != 0) {\r\n        let {parts} = this.state;\r\n        let newParts = [];\r\n        parts.map((part) => {\r\n          if (!part._id) {\r\n            newParts.push({\r\n              ID: part.IDCode,\r\n              name: part.name,\r\n              type: part.selectedType.value,\r\n              cost_usd: part.UPrice,\r\n              UM: part.selectedUM.value,\r\n              qty: part.qty,\r\n              supplier_id: this.state._id,\r\n            })\r\n          }\r\n        });\r\n        let updatedParts = [];\r\n        parts.map((part) => {\r\n          if (part._id) {\r\n            updatedParts.push({\r\n              _id: part._id,\r\n              ID: part.IDCode,\r\n              name: part.name,\r\n              type: part.selectedType.value,\r\n              cost_usd: part.UPrice,\r\n              UM: part.selectedUM.value,\r\n              qty: part.qty,\r\n              supplier_id: this.state._id,\r\n            })\r\n          }\r\n        });\r\n        updatePartsList(updatedParts).then((res1) => {\r\n          addNewParts(newParts).then((res1) => {\r\n            this.props.history.push('/supplier/list');\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    this.setState({\r\n    [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  addNewPart = () => {\r\n    let newPart = {\r\n      IDCode: 'P' + generateRandomId(),\r\n      name: \"\",\r\n      selectedType: \"\",\r\n      selectedUM: \"\",\r\n      UPrice: 0,\r\n      qty: 0,\r\n    }\r\n    let {parts} = this.state;\r\n    parts.push(newPart);\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleSelectPartsType = (data, index) => {\r\n    let {parts} = this.state;\r\n    parts[index].selectedType = data;\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleSelectPartsUM = (data, index) => {\r\n    let {parts} = this.state;\r\n    parts[index].selectedUM = data;\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleChangePartsQty = (e, index) => {\r\n    let { parts } = this.state;\r\n    parts[index].qty = e.target.value;\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleChangeUPrice = (e, index) => {\r\n    let { parts } = this.state;\r\n    parts[index].UPrice = e.target.value;\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleChangePartName = (e, index) => {\r\n    let { parts } = this.state;\r\n    parts[index].name = e.target.value;\r\n    this.setState({parts});\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { \r\n      ID,\r\n      start_date,\r\n      type,\r\n      country,\r\n      name,\r\n      contact,\r\n      skype,\r\n      wechat,\r\n      whatsapp,\r\n      mobile,\r\n      office,\r\n      email,\r\n      main_products_services,\r\n      address,\r\n      notes,\r\n      loading,\r\n      supplierTypeList,\r\n      partsTypeList,\r\n      partsUMList,\r\n      supplierList,\r\n      selectedSupplierType,\r\n      selectedCountry,\r\n      parts } = this.state;\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: \"Add New Supplier\" }]} />\r\n        </div>\r\n        <SimpleCard>\r\n          <ValidatorForm\r\n            ref=\"form\"\r\n            onSubmit={this.handleSubmit}\r\n            onError={(errors) => null}\r\n          >\r\n            <div className=\"viewer_actions px-16 flex flex-end\">\r\n              <div className=\"mb-24\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"py-8\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Grid container spacing={6}>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"ID\"\r\n                  readOnly\r\n                  // onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"ID\"\r\n                  value={ID}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    className=\"mb-16 w-100\"\r\n                    margin=\"none\"\r\n                    id=\"mui-pickers-date\"\r\n                    label=\"Start Date\"\r\n                    inputVariant=\"standard\"\r\n                    type=\"text\"\r\n                    autoOk={true}\r\n                    value={start_date}\r\n                    onChange={(date) => this.setState({start_date: date})}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\"\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: \"Supplier Type\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  handleChange={(data) => this.setState({type: data.value, selectedSupplierType: data})}\r\n                  options={supplierTypeList}\r\n                  selectedValue={selectedSupplierType}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: \"Country\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  handleChange={(data) => this.setState({country: data.value, selectedCountry: data})}\r\n                  options={countries}\r\n                  selectedValue={selectedCountry}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Name\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Contact\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"contact\"\r\n                  value={contact}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Mobile\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"mobile\"\r\n                  value={mobile}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Office\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"office\"\r\n                  value={office}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Email\"\r\n                  onChange={this.handleChange}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <h5 className=\"text-primary\">CHAT</h5>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Skype\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"skype\"\r\n                  value={skype}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"WeChat\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"wechat\"\r\n                  value={wechat}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"WhatsApp\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"whatsapp\"\r\n                  value={whatsapp}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Main Products/Services\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"main_products_services\"\r\n                  value={main_products_services}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextField\r\n                    label=\"Address\"\r\n                    fullWidth\r\n                    multiline={true}\r\n                    rows={5}\r\n                    name=\"address\"\r\n                    value={address}\r\n                    onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextField\r\n                    label=\"Notes\"\r\n                    fullWidth\r\n                    multiline={true}\r\n                    rows={5}\r\n                    name=\"notes\"\r\n                    value={notes}\r\n                    onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12} style={{minHeight: '500px'}}>\r\n                <div className=\"w-100 overflow-auto\" style={{paddingBottom: '300px'}}>\r\n                  <Table style={{border: '1px solid rgba(224, 224, 224, 1)', whiteSpace: \"pre\"}}>\r\n                    <colgroup>\r\n                      <col style={{width:'100px'}}/>\r\n                      <col style={{width:'300px'}}/>\r\n                      <col style={{width:'150px'}}/>\r\n                      <col style={{width:'150px'}}/>\r\n                      <col style={{width:'100px'}}/>\r\n                      <col style={{width:'100px'}}/>\r\n                      <col style={{width:'100px'}}/>\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell colSpan={1} align='center' className=\"bg-light-green\">\r\n                              <Fab color=\"primary\" aria-label=\"Add\" onClick={this.addNewPart}>\r\n                                <Icon>add</Icon>\r\n                              </Fab>\r\n                            </TableCell>\r\n                            <TableCell colSpan={6} align='center' className=\"bg-light-green\">\r\n                                PARTS\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">ID Code</TableCell>\r\n                            <TableCell align=\"center\">Name</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">UM</TableCell>\r\n                            <TableCell align=\"center\">UPrice</TableCell>\r\n                            <TableCell align=\"center\">Qty</TableCell>\r\n                            <TableCell align=\"center\">Total</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {\r\n                        parts && parts.map((part, index) => {\r\n                          return (\r\n                            <TableRow key={index}>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                  <TextValidator\r\n                                      type=\"text\"\r\n                                      value={part.IDCode}\r\n                                      readOnly\r\n                                      inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                  />\r\n                              </TableCell>\r\n                              <TableCell align='center' className=\"pr-10\">\r\n                                <TextField name=\"name\" value={part.name} onChange={(e) => this.handleChangePartName(e, index)} fullWidth={true} />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <CustomSelect\r\n                                  textFieldProps={{\r\n                                    InputLabelProps: {\r\n                                      htmlFor: \"react-select-single\",\r\n                                      shrink: true,\r\n                                    },\r\n                                    placeholder: \"\",\r\n                                  }}\r\n                                  \r\n                                  handleChange={(data) => this.handleSelectPartsType(data, index)}\r\n                                  selectedValue={part.selectedType}\r\n                                  options={partsTypeList}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <CustomSelect\r\n                                  textFieldProps={{\r\n                                    InputLabelProps: {\r\n                                      htmlFor: \"react-select-single\",\r\n                                      shrink: true,\r\n                                    },\r\n                                    placeholder: \"\",\r\n                                  }}\r\n                                  handleChange={(data) => this.handleSelectPartsUM(data, index)}\r\n                                  selectedValue={part.selectedUM}\r\n                                  options={partsUMList}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                  <TextField\r\n                                    value={part.UPrice}\r\n                                    onChange={(e) => this.handleChangeUPrice(e, index)}\r\n                                    name=\"UPrice\"\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                      \r\n                                    }}\r\n                                    inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                  />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                  <TextValidator\r\n                                      onChange={(e) => this.handleChangePartsQty(e, index)}\r\n                                      type=\"text\"\r\n                                      name=\"qty\"\r\n                                      value={part.qty}\r\n                                      inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                  />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                  $ {parseFloat(part.UPrice * part.qty).toFixed(2)}\r\n                              </TableCell>\r\n                          </TableRow>\r\n                          )\r\n                          \r\n                        })\r\n                      }\r\n                        \r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </ValidatorForm>\r\n        </SimpleCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditSupplier;\r\n"],"sourceRoot":""}