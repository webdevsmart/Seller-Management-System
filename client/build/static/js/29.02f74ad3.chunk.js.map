{"version":3,"sources":["app/EgretLayout/Layout1/Layout1Topbar.jsx","app/EgretLayout/Layout1/Layout1Sidenav.jsx","app/EgretLayout/Layout1/Layout1.jsx"],"names":["Layout1Topbar","state","updateSidebarMode","sidebarSettings","props","settings","setLayoutSettings","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","handleSignOut","logoutUser","this","theme","topbarTheme","themes","topbar","className","style","backgroundColor","palette","primary","main","IconButton","onClick","Icon","menuButton","src","alt","MenuItem","minWidth","Component","withStyles","root","withTheme","withRouter","connect","PropTypes","func","isRequired","layout","Layout1Sidenav","padding","fontSize","sidenavToggleChecked","hidden","setDefaultSettings","updatedSettings","handleSidenavToggle","setState","renderLogoSwitch","Brand","Switch","onChange","checked","color","renderUser","user","name","unlistenRouteChange","history","listen","location","action","setTimeout","sidenavTheme","SidenavTheme","Sidenav","Layout1","classes","layoutClasses","activeLayout","type","fixed","Consumer","routes","classList","show","perfectScrollbar","renderRoutes","footer","Footer","secondarySidebar","SecondarySidebar","background","default"],"mappings":"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","file":"static/js/29.02f74ad3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Icon,\n  IconButton,\n  Badge,\n  MenuItem,\n  withStyles,\n  MuiThemeProvider\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { PropTypes } from \"prop-types\";\nimport { EgretMenu, EgretSearchBox } from \"egret\";\nimport { isMdScreen } from \"utils\";\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\nimport { Link } from \"react-router-dom\";\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  }\n});\n\nclass Layout1Topbar extends Component {\n  state = {};\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n\n    setLayoutSettings({\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  handleSidebarToggle = () => {\n    let { settings } = this.props;\n    let { layout1Settings } = settings;\n\n    let mode;\n    if (isMdScreen()) {\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\n    } else {\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\n    }\n    this.updateSidebarMode({ mode });\n  };\n\n  handleSignOut = () => {\n    this.props.logoutUser();\n  };\n\n  render() {\n    let { theme, settings } = this.props;\n    const topbarTheme =\n      settings.themes[settings.layout1Settings.topbar.theme] || theme;\n    return (\n      <MuiThemeProvider theme={topbarTheme}>\n        <div className=\"topbar\">\n          <div\n            className={`topbar-hold`}\n            style={{ backgroundColor: topbarTheme.palette.primary.main }}\n          >\n            <div className=\"flex flex-space-between flex-middle h-100\">\n              <div className=\"flex\">\n                <IconButton onClick={this.handleSidebarToggle}>\n                  <Icon>menu</Icon>\n                </IconButton>\n{/* \n                <div className=\"hide-on-mobile\">\n                  <IconButton>\n                    <Icon>mail_outline</Icon>\n                  </IconButton>\n\n                  <IconButton>\n                    <Icon>web_asset</Icon>\n                  </IconButton>\n\n                  <IconButton>\n                    <Icon>star_outline</Icon>\n                  </IconButton>\n                </div> */}\n              </div>\n              <div className=\"flex flex-middle\">\n                {/* <EgretSearchBox /> */}\n\n                {/* <NotificationBar /> */}\n\n                {/* <ShoppingCart></ShoppingCart> */}\n\n                <EgretMenu\n                  menuButton={\n                    <img\n                      className=\"mx-8 text-middle circular-image-small cursor-pointer\"\n                      src=\"/assets/images/avatar.png\"\n                      alt=\"user\"\n                    />\n                  }\n                >\n                  {/* <MenuItem style={{ minWidth: 185 }}>\n                    <Link className=\"flex flex-middle\" to=\"/\">\n                      <Icon> home </Icon>\n                      <span className=\"pl-16\"> Home </span>\n                    </Link>\n                  </MenuItem>\n                  <MenuItem style={{ minWidth: 185 }}>\n                    <Link\n                      className=\"flex flex-middle\"\n                      to=\"/page-layouts/user-profile\"\n                    >\n                      <Icon> person </Icon>\n                      <span className=\"pl-16\"> Profile </span>\n                    </Link>\n                  </MenuItem>\n                  <MenuItem\n                    className=\"flex flex-middle\"\n                    style={{ minWidth: 185 }}\n                  >\n                    <Icon> settings </Icon>\n                    <span className=\"pl-16\"> Settings </span>\n                  </MenuItem> */}\n                  <MenuItem\n                    onClick={this.handleSignOut}\n                    className=\"flex flex-middle\"\n                    style={{ minWidth: 185 }}\n                  >\n                    <Icon> power_settings_new </Icon>\n                    <span className=\"pl-16\"> Logout </span>\n                  </MenuItem>\n                </EgretMenu>\n              </div>\n            </div>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nLayout1Topbar.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(\n      mapStateToProps,\n      { setLayoutSettings, logoutUser }\n    )(Layout1Topbar)\n  )\n);\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Switch,\n  Icon,\n  withStyles,\n  MenuItem,\n  Tooltip,\n  IconButton,\n  MuiThemeProvider\n} from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { EgretMenu } from \"egret\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../EgretTheme/SidenavTheme\";\nimport { isMdScreen } from \"utils\";\n\nconst styles = theme => ({});\n\nconst IconButtonWhite = withStyles(theme => ({\n  root: {\n    // color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: \"transparent\",\n    padding: \"5px\"\n  }\n}))(IconButton);\n\nconst IconSmall = withStyles(() => ({\n  root: {\n    fontSize: \"1rem\"\n  }\n}))(Icon);\n\nclass Layout1Sidenav extends Component {\n  state = {\n    sidenavToggleChecked: false,\n    hidden: true\n  };\n\n  componentWillMount() {\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\n      if (isMdScreen()) {\n        this.updateSidebarMode({ mode: \"close\" });\n      }\n    });\n\n    setTimeout(() => {\n      this.setState({ hidden: false });\n    }, 400);\n  }\n\n  componentWillUnmount() {\n    this.unlistenRouteChange();\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\n    const updatedSettings = {\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    };\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  handleSidenavToggle = () => {\n    let { sidenavToggleChecked } = this.state;\n    let mode = sidenavToggleChecked ? \"full\" : \"compact\";\n    this.updateSidebarMode({ mode });\n    this.setState({ sidenavToggleChecked: !sidenavToggleChecked });\n  };\n\n  handleSignOut = () => {\n    this.props.logoutUser();\n  };\n\n  renderLogoSwitch = () => (\n    // Open Brand component file to replace logo and text\n    <Brand>\n      <Switch\n        className=\"sidenav__toggle hide-on-mobile\"\n        onChange={this.handleSidenavToggle}\n        checked={this.state.sidenavToggleChecked}\n        color=\"secondary\"\n      />\n    </Brand>\n  );\n\n  renderUser = () => {\n    let { user } = this.props;\n    return (\n      <div className=\"sidenav__user\">\n        <div className=\"username-photo\">\n          <img src='/assets/images/avatar.png' alt=\"user\" />\n          <span className=\"username\">\n            {/* <Icon>lock</Icon>  */}\n            {user.name}\n          </span>\n        </div>\n        <div className=\"user__menu\">\n          {/* <EgretMenu\n            menuButton={\n              <Tooltip title=\"Settings\">\n                <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\n                  <IconSmall> settings </IconSmall>\n                </IconButtonWhite>\n              </Tooltip>\n            }\n          >\n            <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\n              <Icon> home </Icon>\n              <span className=\"pl-16\"> Home </span>\n            </MenuItem>\n            <MenuItem className=\"flex flex-middle\" style={{ minWidth: 185 }}>\n              <Icon> settings </Icon>\n              <span className=\"pl-16\"> Account Setting </span>\n            </MenuItem>\n          </EgretMenu>\n\n          <Tooltip title=\"Profile\">\n            <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\n              <IconSmall>person</IconSmall>\n            </IconButtonWhite>\n          </Tooltip>\n          <Tooltip title=\"Sign out\">\n            <IconButtonWhite\n              aria-label=\"Delete\"\n              className=\"\"\n              size=\"small\"\n              onClick={this.handleSignOut}\n            >\n              <IconSmall>exit_to_app</IconSmall>\n            </IconButtonWhite>\n          </Tooltip> */}\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    let { theme, settings } = this.props;\n    const sidenavTheme =\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\n    return (\n      <MuiThemeProvider theme={sidenavTheme}>\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\n\n        <div className=\"sidenav\">\n          <div className=\"sidenav__hold\">\n            {!this.state.hidden && (\n              <Fragment>\n                {this.renderLogoSwitch()}\n                <Sidenav>{this.renderUser()}</Sidenav>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(\n      mapStateToProps,\n      {\n        setLayoutSettings,\n        setDefaultSettings,\n        logoutUser\n      }\n    )(Layout1Sidenav)\n  )\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles } from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { isMdScreen, classList } from \"utils\";\nimport { renderRoutes } from \"react-router-config\";\nimport Layout1Topbar from \"./Layout1Topbar\";\nimport Layout1Sidenav from \"./Layout1Sidenav\";\nimport Footer from \"../SharedCompoents/Footer\";\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar\";\nimport AppContext from \"app/appContext\";\n// import {EgretLoadable} from \"egret\";\n\n// const SecondarySidebar = EgretLoadable({\n//   loader: () => import(\"../SharedCompoents/SecondarySidebar\")\n// });\n\n// const Footer = EgretLoadable({\n//   loader: () => import(\"../SharedCompoents/Footer\")\n// });\n\n// const Layout1Topbar = EgretLoadable({\n//   loader: () => import(\"./Layout1Topbar\")\n// });\n\n// const Layout1Sidenav = EgretLoadable({\n//   loader: () => import(\"./Layout1Sidenav\")\n// });\n\nconst styles = theme => {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n\nclass Layout1 extends Component {\n  componentWillMount() {\n    if (isMdScreen()) {\n      this.updateSidebarMode({ mode: \"close\" });\n    }\n    // if (window) {\n    //   // SET DIRECTION\n    //   let { settings } = this.props;\n    //   document.body.setAttribute(\"dir\", settings.direction);\n    // }\n  }\n\n  componentWillUnmount() {\n    // if (window) {\n    //   document.body.removeAttribute(\"dir\");\n    // }\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n    setLayoutSettings({\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  render() {\n    let { settings, classes, theme } = this.props;\n\n    let { layout1Settings } = settings;\n    let layoutClasses = {\n      [classes.layout]: true,\n      [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\n      \"topbar-fixed\": layout1Settings.topbar.fixed\n    };\n    return (\n      <AppContext.Consumer>\n        {({ routes }) => (\n          <div className={classList(layoutClasses)}>\n            {layout1Settings.leftSidebar.show && <Layout1Sidenav />}\n\n            <div className=\"content-wrap position-relative\">\n              {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                <Layout1Topbar />\n              )}\n\n              {settings.perfectScrollbar && (\n                <Scrollbar className=\"scrollable-content\">\n                  {layout1Settings.topbar.show &&\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\n                  <div className=\"content\">{renderRoutes(routes)}</div>\n                  <div className=\"my-auto\" />\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\n                </Scrollbar>\n              )}\n\n              {!settings.perfectScrollbar && (\n                <div className=\"scrollable-content\">\n                  {layout1Settings.topbar.show &&\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\n                  <div className=\"content\">{renderRoutes(routes)}</div>\n                  <div className=\"my-auto\" />\n                  {settings.footer.show && !settings.footer.fixed && <Footer />}\n                </div>\n              )}\n\n              {settings.footer.show && settings.footer.fixed && <Footer />}\n            </div>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n          </div>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nLayout1.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { setLayoutSettings }\n  )(Layout1)\n);\n"],"sourceRoot":""}