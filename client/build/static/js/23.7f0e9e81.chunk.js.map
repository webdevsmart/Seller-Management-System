{"version":3,"sources":["app/components/Snackbar/Snackbar.js","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/Warning.js","../node_modules/@material-ui/icons/Error.js","../node_modules/@material-ui/icons/Info.js","app/views/supplier_type/SupplierTypeService.js","app/views/supplier_type/SupplierTypeEditorDialog.jsx","app/views/supplier_type/SupplierTypeList.jsx"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","clsx","aria-describedby","id","action","key","aria-label","color","onClick","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","getAllSupplierTypes","axios","get","getSupplierTypeById","deleteSupplierType","post","addNewSupplierType","NewSupplierType","updateSupplierType","SupplierTypeEditorDialog","state","ID","name","handleChange","event","source","persist","setState","target","handleFormSubmit","_id","then","handleClose","newCat","generateRandomId","res","this","mid","data","open","Dialog","maxWidth","fullWidth","ref","onSubmit","Grid","container","item","sm","xs","label","onChange","type","validators","errorMessages","Button","Component","options","filterType","customToolbarSelect","selectableRows","SupplierTypeList","supplierTypeList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","warningOpen","warningMessage","setPage","page","setRowsPerPage","rowsPerPage","handleChangePage","newPage","handleDialogClose","updatePageData","handleDeleteSupplierType","handleConfirmationResponse","catch","response","tmpList","map","push","closeWarningMessage","columns","filter","sort","empty","customBodyRenderLite","dataIndex","IconButton","routeSegments","Card","elevation","title","onConfirmDialogClose","onYesClick","text","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration"],"mappings":"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","file":"static/js/23.7f0e9e81.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n  };\r\n  \r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600]\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700]\r\n    },\r\n    icon: {\r\n        fontSize: 20\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    message: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n    <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n            </span>\r\n        }\r\n        action={[\r\n            <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            >\r\n            <CloseIcon className={classes.icon} />\r\n            </IconButton>\r\n        ]}\r\n        {...other}\r\n    />);\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import axios from \"axios\";\r\n\r\nexport const getAllSupplierTypes = () => {\r\n  return axios.get(\"/api/supplier-type/list\");\r\n};\r\nexport const getSupplierTypeById = id => {\r\n  return axios.get(`/api/supplier-type/get?uid=${id}`);\r\n};\r\nexport const deleteSupplierType = id => {\r\n  return axios.post(`/api/supplier-type/delete?uid=${id}`);\r\n};\r\nexport const addNewSupplierType = NewSupplierType => {\r\n  return axios.post(\"/api/supplier-type/add\", NewSupplierType);\r\n};\r\nexport const updateSupplierType = NewSupplierType => {\r\n  return axios.post(\"/api/supplier-type/update\", NewSupplierType);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  FormControlLabel,\r\n  Switch\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { getSupplierTypeById, updateSupplierType, addNewSupplierType } from \"./SupplierTypeService\";\r\nimport { generateRandomId } from \"utils\";\r\n\r\nclass SupplierTypeEditorDialog extends Component {\r\n  state = {\r\n    ID: \"\",\r\n    name: \"\",\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    this.setState({\r\n    [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { _id } = this.state;\r\n    if (_id) {\r\n      updateSupplierType({\r\n        ...this.state\r\n      }).then(() => {\r\n        this.props.handleClose();\r\n      });\r\n    } else {\r\n      const newCat = {\r\n          ID: 'ST' + generateRandomId(),\r\n          name: this.state.name,\r\n      }\r\n      addNewSupplierType(newCat).then((res) => {\r\n        this.props.handleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (this.props.mid)\r\n        getSupplierTypeById(this.props.mid).then(data => this.setState({ ...data.data }));\r\n    else {\r\n        this.setState({\r\n            ID: \"\",\r\n            name: \"\",\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { name } = this.state;\r\n    let { open, handleClose } = this.props;\r\n\r\n    return (\r\n      <Dialog onClose={handleClose} open={open} maxWidth={'md'} fullWidth={true}>\r\n        <div className=\"p-24\">\r\n          <h4 className=\"mb-20\">Update Supplier Type</h4>\r\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n            <Grid className=\"mb-16\" container spacing={4}>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label=\"Name\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <div className=\"flex flex-space-between flex-middle\">\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n              <Button onClick={() => this.props.handleClose()}>Cancel</Button>\r\n            </div>\r\n          </ValidatorForm>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SupplierTypeEditorDialog;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Icon,\r\n  Button,\r\n  Card\r\n} from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport SupplierTypeEditorDialog from \"./SupplierTypeEditorDialog\";\r\nimport { getAllSupplierTypes, deleteSupplierType } from \"./SupplierTypeService\";\r\nimport MySnackbarContentWrapper from \"../../components/Snackbar/Snackbar\";\r\n\r\nconst options = {\r\n  filterType: 'checkbox',\r\n  customToolbarSelect: () => {},\r\n  selectableRows: \"none\"\r\n};\r\n\r\nclass SupplierTypeList extends Component {\r\n  state = {\r\n    supplierTypeList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    warningOpen: false,\r\n    warningMessage: \"\",\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteSupplierType = mid => {\r\n    this.setState({\r\n      mid,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleConfirmationResponse = () => {\r\n    deleteSupplierType(this.state.mid).then((res) => {\r\n      this.handleDialogClose();\r\n    }).catch((error) => {\r\n      this.setState({warningMessage: error.response.data.message});\r\n      this.setState({warningOpen: true});\r\n      this.handleDialogClose();\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  updatePageData = () => {\r\n    getAllSupplierTypes().then((res) => {\r\n      let tmpList = [];\r\n      res.data.map((item) => {\r\n        tmpList.push({id: item.ID, name: item.name, mid: item._id});\r\n      });\r\n      this.setState({ supplierTypeList: tmpList });\r\n    });\r\n  };\r\n\r\n  closeWarningMessage = () => {\r\n    this.setState({warningOpen: false});\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      supplierTypeList,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog,\r\n      warningOpen,\r\n      warningMessage\r\n    } = this.state;\r\n    \r\n    const columns = [\r\n      {\r\n      name: \"id\",\r\n      label: \"ID\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n      },\r\n      {\r\n      name: \"name\",\r\n      label: \"Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n      },\r\n      {\r\n        name: \"action\",\r\n        label: \"Action\",\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          empty: true,\r\n          customBodyRenderLite: (dataIndex) => {\r\n            return (\r\n              <>\r\n              <IconButton\r\n                onClick={() =>\r\n                  this.setState({\r\n                    mid: this.state.supplierTypeList[dataIndex].mid,\r\n                    shouldOpenEditorDialog: true\r\n                  })\r\n                }\r\n              >\r\n                <Icon color=\"primary\">edit</Icon>\r\n              </IconButton>  \r\n              <IconButton onClick={() => this.handleDeleteSupplierType(this.state.supplierTypeList[dataIndex].mid)}>\r\n                <Icon color=\"error\">delete</Icon>\r\n              </IconButton>\r\n              </>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    \r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div  className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: \"Supplier Type\" }]} />\r\n        </div>\r\n\r\n        <Button\r\n          className=\"mb-16\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => this.setState({ shouldOpenEditorDialog: true, mid: null })}\r\n        >\r\n          Add New Supplier Type\r\n        </Button>\r\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\r\n          <MUIDataTable\r\n            className=\"pl-24 pr-24\"\r\n            title={\"Supplier Type List\"}\r\n            data={supplierTypeList}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n          {shouldOpenEditorDialog && (\r\n            <SupplierTypeEditorDialog\r\n              handleClose={this.handleDialogClose}\r\n              open={shouldOpenEditorDialog}\r\n              mid={this.state.mid}\r\n            />\r\n          )}\r\n\r\n          {shouldOpenConfirmationDialog && (\r\n            <ConfirmationDialog\r\n              open={shouldOpenConfirmationDialog}\r\n              onConfirmDialogClose={this.handleDialogClose}\r\n              onYesClick={this.handleConfirmationResponse}\r\n              text=\"Are you sure to delete?\"\r\n            />\r\n          )}\r\n        </Card>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          open={warningOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.closeWarningMessage}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.closeWarningMessage}\r\n            variant=\"warning\"\r\n            message={warningMessage}\r\n          />\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SupplierTypeList;\r\n"],"sourceRoot":""}