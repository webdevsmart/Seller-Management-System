{"version":3,"sources":["app/EgretLayout/SharedCompoents/ShoppingCart.jsx","app/EgretLayout/SharedCompoents/NotificationBar.jsx","app/EgretLayout/SharedCompoents/Sidenav.jsx","app/navigations.js","app/EgretLayout/SharedCompoents/Brand.jsx","app/EgretLayout/EgretTheme/SidenavTheme.jsx","app/EgretLayout/SharedCompoents/Footer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/BadgeSelected.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/customizerOptions.js","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout1Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/Layout2Customizer.jsx","app/EgretLayout/SharedCompoents/EgretCustomizer/EgretCustomizer.jsx","app/EgretLayout/SharedCompoents/SecondarySidebar.jsx"],"names":["cartListLoaded","withStyles","withTheme","connect","state","settings","layout","getCartList","PropTypes","func","isRequired","deleteProductFromCart","updateCartAmount","cartList","ecommerce","user","props","container","theme","React","useState","panelOpen","setPanelOpen","handleDrawerToggle","userId","parentThemePalette","palette","themes","activeTheme","onClick","style","color","type","text","secondary","primary","badgeContent","length","variant","anchor","open","onClose","ModalProps","keepMounted","className","map","product","key","id","size","amount","disabled","src","imgUrl","alt","title","price","fontSize","getNotification","deleteNotification","deleteAllNotification","notification","notifcationList","width","to","path","elevation","icon","name","heading","getTimeDifference","Date","timestamp","subtitle","Sidenav","updateSidebarMode","sidebarSettings","setLayoutSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","leftSidebar","renderOverlay","mode","option","suppressScrollX","this","children","navigation","navigations","Component","withRouter","iconText","Brand","SidenavTheme","layout1Settings","bgImgURL","main","bgOpacity","footerTheme","footer","contrastText","href","BadgeSelected","badge","top","right","height","borderRadius","Badge","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleChange","handleControlChange","i","Tooltip","placement","backgroundColor","themeColors","Icon","topbar","FormControl","component","FormLabel","RadioGroup","aria-label","value","onChange","FormControlLabel","control","Radio","label","bg","invisible","Paper","Slider","event","marks","step","max","min","valueLabelDisplay","aria-labelledby","FormGroup","Switch","checked","get","Layout2Customizer","Object","keys","layout2Settings","navbar","EgretCustomizer","updateSettings","newSettings","setDefaultSettings","updatedSettings","merge","selectLayout","set","controlValue","target","tooglePanel","setState","classes","IconButton","root","background","default","minHeight","options","secondarySidebar","paper","display","SecondarySidebar","toggle","listenWindowResize","debounce","isMobile","window","listenWindowResizeRef","addEventListener","removeEventListener","secondarySidebarTheme","Helmet","classList","ShoppingCart","Fab","position","bottom","flexDirection","alignItems","justifyContent","boxShadow","shadows","zIndex","transition","left"],"mappings":"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","file":"static/js/4.6cb27bcb.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Icon,\n  Badge,\n  MuiThemeProvider,\n  IconButton,\n  Drawer\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getCartList,\n  deleteProductFromCart,\n  updateCartAmount\n} from \"app/redux/actions/EcommerceActions\";\n\nlet cartListLoaded = false;\n\nfunction ShoppingCart(props) {\n  const {\n    container,\n    theme,\n    settings,\n    cartList = [],\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n    user\n  } = props;\n\n  const [panelOpen, setPanelOpen] = React.useState(false);\n\n  if (!cartListLoaded) {\n    getCartList(user.userId);\n    cartListLoaded = true;\n  }\n\n  function handleDrawerToggle() {\n    setPanelOpen(!panelOpen);\n  }\n\n  const parentThemePalette = theme.palette;\n\n  return (\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\n      <IconButton\n        onClick={handleDrawerToggle}\n        style={{\n          color:\n            parentThemePalette.type === \"light\"\n              ? parentThemePalette.text.secondary\n              : parentThemePalette.text.primary\n        }}\n      >\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\n          <Icon>shopping_cart</Icon>\n        </Badge>\n      </IconButton>\n\n      <Drawer\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={panelOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true\n        }}\n      >\n        <div className=\"mini-cart\">\n          <div className=\"cart__topbar flex flex-middle p-16 mb-24\">\n            <Icon color=\"primary\">shopping_cart</Icon>\n            <h5 className=\"ml-8 my-0 font-weight-500\">Cart</h5>\n          </div>\n\n          {cartList.map(product => (\n            <div\n              key={product.id}\n              className=\"mini-cart__item flex flex-middle flex-space-between py-16 px-8\"\n            >\n              <div className=\"flex flex-column mr-8\">\n                <IconButton\n                  size=\"small\"\n                  onClick={() =>\n                    updateCartAmount(\n                      user.userId,\n                      product.id,\n                      product.amount + 1\n                    )\n                  }\n                >\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\n                </IconButton>\n                <IconButton\n                  disabled={!(product.amount - 1)}\n                  size=\"small\"\n                  onClick={() =>\n                    updateCartAmount(\n                      user.userId,\n                      product.id,\n                      product.amount - 1\n                    )\n                  }\n                >\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\n                </IconButton>\n              </div>\n              <div className=\"mr-8\">\n                <img src={product.imgUrl} alt={product.title} />\n              </div>\n              <div className=\"mr-8 text-center\">\n                <h6 className=\"m-0 mb-4\">{product.title}</h6>\n                <small className=\"text-muted\">\n                  ${product.price} x {product.amount}\n                </small>\n              </div>\n              <IconButton\n                size=\"small\"\n                onClick={() => deleteProductFromCart(user.userId, product.id)}\n              >\n                <Icon fontSize=\"small\">clear</Icon>\n              </IconButton>\n            </div>\n          ))}\n        </div>\n      </Drawer>\n    </MuiThemeProvider>\n  );\n}\n\nShoppingCart.propTypes = {\n  settings: PropTypes.object.isRequired,\n  cartList: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings,\n  getCartList: PropTypes.func.isRequired,\n  deleteProductFromCart: PropTypes.func.isRequired,\n  updateCartAmount: PropTypes.func.isRequired,\n  cartList: state.ecommerce.cartList,\n  user: state.user\n});\n\nexport default withStyles({}, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { getCartList, deleteProductFromCart, updateCartAmount }\n  )(ShoppingCart)\n);\n","import React from \"react\";\nimport {\n  Icon,\n  Badge,\n  MuiThemeProvider,\n  Card,\n  Button,\n  IconButton,\n  Drawer,\n  Fab\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { getTimeDifference } from \"utils.js\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getNotification,\n  deleteAllNotification,\n  deleteNotification\n} from \"../../redux/actions/NotificationActions\";\n\nfunction NotificationBar(props) {\n  const {\n    container,\n    theme,\n    settings,\n    notification: notifcationList = [],\n    getNotification,\n    deleteAllNotification,\n    deleteNotification\n  } = props;\n\n  const [panelOpen, setPanelOpen] = React.useState(false);\n\n  function handleDrawerToggle() {\n    if (!panelOpen) {\n      getNotification();\n    }\n    setPanelOpen(!panelOpen);\n  }\n  const parentThemePalette = theme.palette;\n  // console.log(theme);\n\n  return (\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\n      <IconButton\n        onClick={handleDrawerToggle}\n        style={{\n          color:\n            parentThemePalette.type === \"light\"\n              ? parentThemePalette.text.secondary\n              : parentThemePalette.text.primary\n        }}\n      >\n        <Badge color=\"secondary\" badgeContent={5}>\n          <Icon>notifications</Icon>\n        </Badge>\n      </IconButton>\n\n      <Drawer\n        width={\"100px\"}\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={panelOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true\n        }}\n      >\n        <div className=\"notification\">\n          <div className=\"notification__topbar flex flex-middle p-16 mb-24\">\n            <Icon color=\"primary\">notifications</Icon>\n            <h5 className=\"ml-8 my-0 font-weight-500\">Notifications</h5>\n          </div>\n\n          {notifcationList.map(notification => (\n            <div\n              key={notification.id}\n              className=\"notification__card position-relative\"\n            >\n              <IconButton\n                size=\"small\"\n                className=\"delete-button bg-light-gray mr-24\"\n                onClick={() => deleteNotification(notification.id)}\n              >\n                <Icon className=\"text-muted\" fontSize=\"small\">\n                  clear\n                </Icon>\n              </IconButton>\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\n                <Card className=\"mx-16 mb-24\" elevation={3}>\n                  <div className=\"card__topbar flex flex-middle flex-space-between p-8 bg-light-gray\">\n                    <div className=\"flex\">\n                      <div className=\"card__topbar__button\">\n                        <Icon\n                          className=\"card__topbar__icon\"\n                          fontSize=\"small\"\n                          color={notification.icon.color}\n                        >\n                          {notification.icon.name}\n                        </Icon>\n                      </div>\n                      <span className=\"ml-4 font-weight-500 text-muted\">\n                        {notification.heading}\n                      </span>\n                    </div>\n                    <small className=\"card__topbar__time text-muted\">\n                      {getTimeDifference(new Date(notification.timestamp))} ago\n                    </small>\n                  </div>\n                  <div className=\"px-16 pt-8 pb-16\">\n                    <p className=\"m-0\">{notification.title}</p>\n                    <small className=\"text-muted\">\n                      {notification.subtitle}\n                    </small>\n                  </div>\n                </Card>\n              </Link>\n            </div>\n          ))}\n\n          <div className=\"text-center\">\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\n          </div>\n        </div>\n      </Drawer>\n    </MuiThemeProvider>\n  );\n}\n\nNotificationBar.propTypes = {\n  settings: PropTypes.object.isRequired,\n  notification: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  getNotification: PropTypes.func.isRequired,\n  deleteNotification: PropTypes.func.isRequired,\n  deleteAllNotification: PropTypes.func.isRequired,\n  notification: state.notification,\n  settings: state.layout.settings\n});\n\nexport default withStyles({}, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { getNotification, deleteNotification, deleteAllNotification }\n  )(NotificationBar)\n);\n","import React, { Component, Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { navigations } from \"../../navigations\";\nimport { EgretVerticalNav } from \"egret\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nclass Sidenav extends Component {\n  state = {};\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n    let activeLayoutSettingsName = settings.activeLayout+\"Settings\";\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\n\n    setLayoutSettings({\n      ...settings,\n      [activeLayoutSettingsName]: {\n        ...activeLayoutSettings,\n        leftSidebar: {\n          ...activeLayoutSettings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  renderOverlay = () => (\n    <div\n      onClick={() => this.updateSidebarMode({ mode: \"close\" })}\n      className=\"sidenav__overlay\"\n    />\n  );\n  render() {\n    return (\n      <Fragment>\n        <Scrollbar option={{suppressScrollX: true}} className=\"scrollable position-relative\">\n          {this.props.children}\n          <EgretVerticalNav navigation={navigations} />\n        </Scrollbar>\n        {this.renderOverlay()}\n      </Fragment>\n    );\n  }\n}\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      setLayoutSettings\n    }\n  )(Sidenav)\n);","export const navigations = [\n  {\n    name: \"Product\",\n    icon: \"shopping_basket\",\n    path: \"/product/list\",\n  },\n  {\n    name: \"Parts Cost List\",\n    icon: \"format_list_bulleted\",\n    path: \"/product-cost/list\",\n  },\n  {\n    name: \"Product Category\",\n    icon: \"category\",\n    path: \"/product-category/list\",\n  },\n  \n  {\n    name: \"Settings\",\n    icon: \"dashboard\",\n    children: [\n      {\n        name: \"Product Variations\",\n        iconText: \"V\",\n        path: \"/product-variation/list\",\n      },\n      {\n        name: \"Parts\",\n        iconText: \"P\",\n        path: \"/parts/list\",\n      },\n      {\n        name: \"Parts UM\",\n        iconText: \"U\",\n        path: \"/parts-um/list\",\n      },\n      {\n        name: \"Parts Type\",\n        iconText: \"T\",\n        path: \"/parts-type/list\",\n      },\n      {\n        name: \"Supplier\",\n        iconText: \"S\",\n        path: \"/supplier/list\",\n      },\n      {\n        name: \"Supplier Type\",\n        iconText: \"T\",\n        path: \"/supplier-type/list\",\n      },\n      {\n        name: \"Freight\",\n        iconText: \"F\",\n        path: \"/freight/list\",\n      },\n      {\n        name: \"Storage\",\n        iconText: \"S\",\n        path: \"/storage/list\",\n      },\n      {\n        name: \"Fullfillment\",\n        iconText: \"F\",\n        path: \"/fullfillment/list\",\n      },\n      {\n        name: \"Misc\",\n        iconText: \"M\",\n        path: \"/misc/list\",\n      },\n      {\n        name: \"Users\",\n        iconText: \"U\",\n        path: \"/users/list\",\n      },\n    ]\n  },\n\n];\n","import React, { Component } from \"react\";\n\nclass Brand extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"flex flex-middle flex-space-between brand-area\">\n        <div className=\"flex flex-middle brand\">\n          <img src=\"/assets/images/logo.svg\" alt=\"company-logo\" />\n          <span className=\"brand__text\">Egret</span>\n        </div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Brand;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst SidenavTheme = ({ theme, settings }) => {\n\n  function darkHoverStyle() {\n    return theme.palette.type === \"dark\"\n      ? `.navigation .nav-item:hover,\n        .navigation .nav-item.active {\n          color: ${theme.palette.text.primary};\n        }`\n      : \"\";\n  }\n\n  function lightHoverStyle() {\n    return theme.palette.type === \"light\"\n      ? `.navigation .nav-item:hover,\n        .navigation .nav-item.active,\n        .navigation .submenu {\n          background: rgba(0, 0, 0, .08);\n        }`\n      : \"\";\n  }\n\n  return (\n    <Helmet>\n      <style>\n        {`\n        \n        ${\n          theme.palette.type === \"dark\"\n            ? `.sidenav {\n          color: ${theme.palette.text.secondary};\n        }`\n            : \" \"\n        }\n\n        .sidenav__hold {\n          background-image: url(${\n            settings.layout1Settings.leftSidebar.bgImgURL\n          });\n          opacity: 1 !important;\n        }\n        .sidenav__hold::after {\n          background: ${theme.palette.primary.main};\n          opacity: ${settings.layout1Settings.leftSidebar.bgOpacity};\n        }\n\n        ${lightHoverStyle()}\n        ${darkHoverStyle()}\n        \n      `}\n      </style>\n    </Helmet>\n  );\n};\n\nexport default SidenavTheme;\n","import React from \"react\";\nimport { withStyles, MuiThemeProvider, Button } from \"@material-ui/core\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\n\nconst Footer = ({ theme, settings }) => {\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\n  return (\n    <MuiThemeProvider theme={footerTheme}>\n      <Helmet>\n        <style>\n          {`\n              .footer {\n                background: ${footerTheme.palette.primary.main};\n                color: ${footerTheme.palette.primary.contrastText};\n              }\n            `}\n        </style>\n      </Helmet>\n      <div className=\"footer flex flex-middle\">\n        <div className=\"flex flex-middle container px-sm-30 w-100\">\n          <a href=\"https://themeforest.net/item/egret-react-redux-material-design-admin-dashboard-template/24673283\">\n            <Button variant=\"contained\" color=\"secondary\">\n              Buy Egret\n            </Button>\n          </a>\n          <span className=\"m-auto\"></span>\n          <p className=\"m-0\">\n            Design and Developed by <a href=\"http://ui-lib.com\">UI Lib</a>\n          </p>\n        </div>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nFooter.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings\n});\n\nexport default withStyles({}, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    {}\n  )(Footer)\n);\n","import { Badge, withStyles } from \"@material-ui/core\";\n\nconst BadgeSelected = withStyles(theme => ({\n  badge: {\n    top: \"100%\",\n    right: \"90%\",\n    height: \"32px\",\n    width: \"32px\",\n    borderRadius: \"50%\"\n  }\n}))(Badge);\n\nexport default BadgeSelected;\n","\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\n\nexport const mainSidebarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\n\nexport const topbarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\nimport {\n  Tooltip,\n  Radio,\n  RadioGroup,\n  FormGroup,\n  Icon,\n  Switch,\n  Slider,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper\n} from \"@material-ui/core\";\nimport { get } from \"lodash\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\n\nconst sidebarBG = [\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\n];\n\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\n  return (\n    <Fragment>\n      <div className=\"mb-16 mx-12\">\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\n        <div className=\"colors\">\n          {mainSidebarThemes\n            // .filter(c => themeColors[c].palette.type === \"dark\")\n            .map((color, i) => (\n              <Tooltip key={i} title={color} placement=\"top\">\n                <div\n                  className=\"color\"\n                  onClick={() =>\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\n                  }\n                  style={{\n                    backgroundColor: themeColors[color].palette.primary.main\n                  }}\n                >\n                  {settings.layout1Settings.leftSidebar.theme === color && (\n                    <Icon>done</Icon>\n                  )}\n                  <div className={settings.themes[color].palette.type}></div>\n                </div>\n              </Tooltip>\n            ))}\n        </div>\n      </div>\n\n      <div className=\"mb-32 mx-12\">\n        <div className=\"text-muted mb-4\">Topbar theme</div>\n        <div className=\"colors\">\n          {topbarThemes\n            .map((color, i) => (\n              <Tooltip key={i} title={color} placement=\"top\">\n                <div\n                  className=\"color\"\n                  onClick={() =>\n                    handleChange(\"layout1Settings.topbar.theme\", color)\n                  }\n                  style={{\n                    backgroundColor: themeColors[color].palette.primary.main\n                  }}\n                >\n                  {settings.layout1Settings.topbar.theme === color && (\n                    <Icon>done</Icon>\n                  )}\n                  <div className={settings.themes[color].palette.type}></div>\n                </div>\n              </Tooltip>\n            ))}\n        </div>\n      </div>\n\n      <div className=\"mx-12 mb-24\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\n          <RadioGroup\n            aria-label=\"Sidebar\"\n            name=\"leftSidebar\"\n            value={settings.layout1Settings.leftSidebar.mode}\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\n          >\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\n            <FormControlLabel\n              value=\"compact\"\n              control={<Radio />}\n              label=\"Compact\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </div>\n\n      <div className=\"mb-32 mx-12\">\n        <div className=\"text-muted\">Sidebar background image</div>\n\n        <div className=\"layout-boxes\">\n          {sidebarBG.map((bg, i) => (\n            <BadgeSelected\n              key={i}\n              color=\"primary\"\n              className=\"layout-box\"\n              style={{ width: \"calc(25% - 8px)\" }}\n              badgeContent={<Icon>done</Icon>}\n              invisible={settings.layout1Settings.leftSidebar.bgImgURL !== bg}\n            >\n              <Paper\n                onClick={() =>\n                  handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\n                }\n                style={{ height: \"160px\" }}\n              >\n                <img src={bg} alt=\"\" />\n              </Paper>\n            </BadgeSelected>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-32 mx-12\">\n        <div className=\"text-muted\">Sidebar background opacity</div>\n        <Slider\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\n          onChange={(event, value) =>\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\n          }\n          marks={true}\n          step={0.02}\n          max={1}\n          min={0.5}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"sidebar-bgOpacity\"\n        />\n      </div>\n\n      <div className=\"mx-12 mb-24\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Topbar</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\n                />\n              }\n              label=\"Show\"\n            />\n\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\n                />\n              }\n              label=\"Fixed\"\n            />\n          </FormGroup>\n        </FormControl>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Layout1Customizer;\n","import React, { Fragment } from \"react\";\nimport {\n  Tooltip,\n  Radio,\n  RadioGroup,\n  Icon,\n  FormControlLabel,\n  FormControl,\n  FormLabel\n} from \"@material-ui/core\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\n\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\n  return (\n    <Fragment>\n      <div className=\"mb-16 mx-12\">\n        <div className=\"text-muted mb-4\">Topbar theme</div>\n        <div className=\"colors\">\n          {Object.keys(themeColors).map((color, i) => (\n            <Tooltip key={i} title={color} placement=\"top\">\n              <div\n                className=\"color\"\n                onClick={() =>\n                  handleChange(\"layout2Settings.topbar.theme\", color)\n                }\n                style={{\n                  backgroundColor: themeColors[color].palette.primary.main\n                }}\n              >\n                {settings.layout2Settings.topbar.theme === color && (\n                  <Icon>done</Icon>\n                )}\n                <div className={settings.themes[color].palette.type}></div>\n              </div>\n            </Tooltip>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-16 mx-12\">\n        <div className=\"text-muted mb-4\">Navbar theme</div>\n        <div className=\"colors\">\n          {Object.keys(themeColors).map((color, i) => (\n            <Tooltip key={i} title={color} placement=\"top\">\n              <div\n                className=\"color\"\n                onClick={() =>\n                  handleChange(\"layout2Settings.navbar.theme\", color)\n                }\n                style={{\n                  backgroundColor: themeColors[color].palette.primary.main\n                }}\n              >\n                {settings.layout2Settings.navbar.theme === color && (\n                  <Icon>done</Icon>\n                )}\n                <div className={settings.themes[color].palette.type}></div>\n              </div>\n            </Tooltip>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mx-12 mb-24\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\n          <RadioGroup\n            aria-label=\"layout-mode\"\n            name=\"layoutMode\"\n            value={settings.layout2Settings.mode}\n            onChange={handleControlChange(\"layout2Settings.mode\")}\n          >\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\n            <FormControlLabel\n              value=\"contained\"\n              control={<Radio />}\n              label=\"Contained\"\n            />\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Layout2Customizer;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { PropTypes } from \"prop-types\";\nimport {\n  Icon,\n  IconButton,\n  FormGroup,\n  Tooltip,\n  Switch,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper,\n  withStyles,\n  MuiThemeProvider\n} from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { merge, get, set } from \"lodash\";\nimport Layout1Customizer from \"./Layout1Customizer\";\nimport Layout2Customizer from \"./Layout2Customizer\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\n\nconst styles = theme => ({\n  root: {\n    \n  },\n  paper: {\n    display: \"inherit\"\n  }\n});\n\nclass EgretCustomizer extends Component {\n  state = {\n    open: false\n  };\n\n  updateSettings = newSettings => {\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\n    let updatedSettings = merge({}, settings, newSettings);\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  selectLayout = activeLayout => {\n    this.updateSettings({ activeLayout });\n  };\n\n  handleChange = (name, value) => {\n    let { settings } = this.props;\n    let updatedSettings = set(settings, name, value);\n\n    this.updateSettings(updatedSettings);\n  };\n\n  handleControlChange = name => event => {\n    let controlValue =\n      event.target.type === \"checkbox\"\n        ? event.target.checked\n        : event.target.value;\n    this.handleChange(name, controlValue);\n  };\n\n  tooglePanel = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  render() {\n    let { settings, classes } = this.props;\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\n    // console.log(activeTheme);\n\n    return (\n      <Fragment>\n        <Tooltip title=\"Theme Settings\" placement=\"left\">\n          <IconButton\n            size=\"small\"\n            aria-label=\"delete\"\n            className=\"my-12\"\n            onClick={this.tooglePanel}\n          >\n            <Icon className=\"spin\">settings</Icon>\n          </IconButton>\n        </Tooltip>\n\n        {this.state.open && (\n          <MuiThemeProvider theme={activeTheme}>\n            <div\n              className={`egret-customizer pb-8 ${classes.root}`}\n              style={{\n                backgroundColor: activeTheme.palette.background.default\n              }}\n            >\n              <div className=\"flex felx-row flex-middle p-16 mb-16 elevation-z6\" style={{minHeight: \"64px\"}}>\n                <Icon color=\"primary\">settings</Icon>\n                <h5 className=\"mb-0 ml-8\">Theme Settings</h5>\n                <IconButton\n                  onClick={this.tooglePanel}\n                  className=\"customizer-close\"\n                >\n                  <Icon>close</Icon>\n                </IconButton>\n              </div>\n              <Scrollbar options={{ suppressScrollX: true }} className=\"px-16\">\n                <div className=\"mt-8 mb-32 mx-12\">\n                  <div className=\"text-muted\">Layouts</div>\n\n                  <div className=\"layout-boxes\">\n                    <BadgeSelected\n                      color=\"secondary\"\n                      className=\"layout-box\"\n                      badgeContent={<Icon>done</Icon>}\n                      invisible={settings.activeLayout !== \"layout1\"}\n                    >\n                      <Paper onClick={() => this.selectLayout(\"layout1\")} elevation={4}>\n                        <img\n                          src=\"/assets/images/screenshots/layout1-customizer.png\"\n                          alt=\"\"\n                        />\n                      </Paper>\n                    </BadgeSelected>\n                    <BadgeSelected\n                      color=\"secondary\"\n                      className=\"layout-box\"\n                      badgeContent={<Icon>done</Icon>}\n                      invisible={settings.activeLayout !== \"layout2\"}\n                    >\n                      <Paper onClick={() => this.selectLayout(\"layout2\")} elevation={4}>\n                        <img\n                          src=\"/assets/images/screenshots/layout2-customizer.png\"\n                          alt=\"\"\n                        />\n                      </Paper>\n                    </BadgeSelected>\n                  </div>\n                </div>\n                {/* END LAYOUT */}\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Main theme</div>\n                  <div className=\"colors\">\n                    {mainThemes.map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.updateSettings({ activeTheme: color })\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.activeTheme === color && <Icon>done</Icon>}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n\n                {settings.activeLayout === \"layout1\" && (\n                  <Layout1Customizer\n                    settings={settings}\n                    handleChange={this.handleChange}\n                    handleControlChange={this.handleControlChange}\n                  />\n                )}\n\n                {settings.activeLayout === \"layout2\" && (\n                  <Layout2Customizer\n                    settings={settings}\n                    handleChange={this.handleChange}\n                    handleControlChange={this.handleControlChange}\n                  />\n                )}\n\n                <div className=\"mx-12 mb-24\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Footer</FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(settings.footer, \"show\")}\n                            onChange={this.handleControlChange(\"footer.show\")}\n                          />\n                        }\n                        label=\"Show\"\n                      />\n\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(\n                              settings.layout1Settings.footer,\n                              \"fixed\"\n                            )}\n                            onChange={this.handleControlChange(\"footer.fixed\")}\n                          />\n                        }\n                        label=\"Fixed\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </div>\n\n                <div className=\"mx-12 mb-24\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={get(settings.secondarySidebar, \"show\")}\n                            onChange={this.handleControlChange(\n                              \"secondarySidebar.show\"\n                            )}\n                          />\n                        }\n                        label=\"Show\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                </div>\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\n                  <div className=\"colors\">\n                    {topbarThemes\n                    .map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.handleChange(\"secondarySidebar.theme\", color)\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.secondarySidebar.theme === color && (\n                            <Icon>done</Icon>\n                          )}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"mb-16 mx-12\">\n                  <div className=\"text-muted mb-4\">Footer theme</div>\n                  <div className=\"colors\">\n                    {topbarThemes\n                    .map((color, i) => (\n                      <Tooltip key={i} title={color} placement=\"top\">\n                        <div\n                          className=\"color\"\n                          onClick={() =>\n                            this.handleChange(\"footer.theme\", color)\n                          }\n                          style={{\n                            backgroundColor:\n                              themeColors[color].palette.primary.main\n                          }}\n                        >\n                          {settings.footer.theme === color && <Icon>done</Icon>}\n                          <div\n                            className={settings.themes[color].palette.type}\n                          ></div>\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </div>\n              </Scrollbar>\n            </div>\n          </MuiThemeProvider>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings,\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { setLayoutSettings, setDefaultSettings }\n  )(EgretCustomizer)\n);\n","import React, { Component } from \"react\";\nimport {\n  MuiThemeProvider,\n  Badge,\n  Fab,\n  IconButton,\n  Icon\n} from \"@material-ui/core\";\nimport { Helmet } from \"react-helmet\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { classList, isMobile, debounce } from \"utils\";\nimport EgretCustomizer from \"./EgretCustomizer/EgretCustomizer\";\nimport { withStyles } from \"@material-ui/styles\";\nimport ShoppingCart from \"./ShoppingCart\";\n\nconst width = \"50px\";\n\nconst styles = theme => ({\n  root: {\n    position: \"fixed\",\n    height: \"100vh\",\n    width,\n    right: `-${width}`,\n    bottom: 0,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: theme.shadows[8],\n    zIndex: 98,\n    transition: \"all 0.15s ease\",\n    \"&.open\": {\n      right: 0,\n      \"& .toggle\": {\n        left: 0\n      }\n    },\n    \"& .toggle\": {\n      position: \"relative\",\n      left: \"-28px\",\n      bottom: \"20px\",\n      transition: \"all 0.15s ease\"\n    }\n  }\n});\n\nclass SecondarySidebar extends Component {\n  state = {\n    open: true\n  };\n  listenWindowResizeRef;\n\n  toggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentWillMount() {\n    this.setState({ open: !isMobile() });\n    if (window) {\n      this.listenWindowResizeRef = this.listenWindowResize();\n      // LISTEN WINDOW RESIZE\n      window.addEventListener(\"resize\", this.listenWindowResizeRef);\n    }\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener(\"resize\", this.listenWindowResizeRef);\n    }\n  }\n\n  listenWindowResize = () => {\n    return debounce(() => {\n      this.setState({ open: !isMobile() });\n    }, 100);\n  };\n\n  render() {\n    let { settings, classes, theme } = this.props;\n    const secondarySidebarTheme =\n      settings.themes[settings.secondarySidebar.theme] || theme;\n\n    return (\n      <MuiThemeProvider theme={secondarySidebarTheme}>\n        {this.state.open && !isMobile() && (\n          <Helmet>\n            <style>\n              {`\n              .content-wrap, \n              .layout2.layout-contained, \n              .layout2.layout-full {\n                margin-right: ${width};\n              }\n              @media screen and (max-width: 959px) {\n                .toolbar-menu-wrap .menu-area {\n                  width: calc(100% - ${width});\n                }\n              }\n              .egret-customizer {\n                right: ${width};\n              }\n            `}\n            </style>\n          </Helmet>\n        )}\n\n        <div\n          className={\n            classes.root +\n            \" \" +\n            classList({\n              open: this.state.open,\n              \"secondary-sidebar\": true\n            })\n          }\n          style={{\n            backgroundColor: secondarySidebarTheme.palette.primary.main\n          }}\n        >\n          <span className=\"m-auto\"></span>\n\n          <EgretCustomizer />\n\n          <ShoppingCart/>\n\n          <IconButton size=\"small\" aria-label=\"delete\" className=\"my-12\">\n            <Icon>comments</Icon>\n          </IconButton>\n\n          {/* Toggle Button */}\n          <span className=\"m-auto\"></span>\n          <div className=\"toggle\">\n            {this.state.open && (\n              <IconButton\n                onClick={this.toggle}\n                size=\"small\"\n                aria-label=\"toggle\"\n              >\n                <Icon>arrow_right</Icon>\n              </IconButton>\n            )}\n            {!this.state.open && (\n              <Fab\n                variant=\"extended\"\n                size=\"small\"\n                color=\"primary\"\n                aria-label=\"add\"\n                className=\"pr-36\"\n                onClick={this.toggle}\n              >\n                <Icon>arrow_left</Icon>\n              </Fab>\n            )}\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(\n      mapStateToProps,\n      {}\n    )(SecondarySidebar)\n  )\n);\n"],"sourceRoot":""}