{"version":3,"sources":["app/components/Snackbar/Snackbar.js","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/Warning.js","../node_modules/@material-ui/icons/Error.js","../node_modules/@material-ui/icons/Info.js","app/views/supplier/SupplierService.js","app/views/supplier/SupplierList.jsx"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","clsx","aria-describedby","id","action","key","aria-label","color","onClick","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","getAllSuppliers","axios","get","getSupplierById","deleteSupplier","mid","post","addNewSupplier","NewSupplier","updateSupplier","options","filterType","customToolbarSelect","selectableRows","SupplierList","state","supplierList","shouldOpenConfirmationDialog","warningMessage","warningOpen","setPage","page","setState","setRowsPerPage","event","rowsPerPage","target","handleChangePage","newPage","handleDialogClose","shouldOpenEditorDialog","updatePageData","handleDeleteSupplier","handleConfirmationResponse","then","res","catch","response","data","tmpList","map","item","push","ID","name","_id","country","main_products_services","type","closeWarningMessage","this","columns","label","filter","sort","empty","customBodyRenderLite","dataIndex","history","routeSegments","to","uid","elevation","title","open","onConfirmDialogClose","onYesClick","text","anchorOrigin","vertical","horizontal","autoHideDuration","Component"],"mappings":"oWAiBMA,EAAc,CAChBC,QAASC,IACTC,QAASC,IACTC,MAAOC,IACPC,KAAMC,KAGJC,EAAaC,aAAW,SAAAC,GAAK,MAAK,CACpCV,QAAS,CACLW,gBAAiBC,IAAM,MAE3BR,MAAO,CACHO,gBAAiBD,EAAMG,QAAQT,MAAMU,MAEzCR,KAAM,CACFK,gBAAiBD,EAAMG,QAAQE,QAAQC,MAE3Cd,QAAS,CACLS,gBAAiBM,IAAM,MAE3BC,KAAM,CACFC,SAAU,IAEdC,YAAa,CACTC,QAAS,GACTC,YAAaZ,EAAMa,QAAQ,IAE/BC,QAAS,CACLC,QAAS,OACTC,WAAY,cAIL,SAASC,EAAyBC,GAC7C,IAAMC,EAAUrB,IACRsB,EAAmDF,EAAnDE,UAAWN,EAAwCI,EAAxCJ,QAASO,EAA+BH,EAA/BG,QAASC,EAAsBJ,EAAtBI,QAAYC,EAFG,YAEOL,EAFP,6CAG9CM,EAAOnC,EAAYiC,GAEzB,OACA,kBAAC,IAAD,eACIF,UAAWK,kBAAKN,EAAQG,GAAUF,GAClCM,mBAAiB,kBACjBZ,QACI,0BAAMa,GAAG,kBAAkBP,UAAWD,EAAQL,SAC9C,kBAACU,EAAD,CAAMJ,UAAWK,kBAAKN,EAAQX,KAAMW,EAAQT,eAC3CI,GAGLc,OAAQ,CACJ,kBAAC,IAAD,CACAC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNC,QAASX,GAET,kBAAC,IAAD,CAAWD,UAAWD,EAAQX,UAG9Be,M,kCCzEZ,IAAIU,EAAyBC,EAAQ,MAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,OAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,0HACD,eAEJN,EAAQE,QAAUE,G,kCCflB,IAAIR,EAAyBC,EAAQ,MAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,OAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,uDACD,WAEJN,EAAQE,QAAUE,G,kCCflB,IAAIR,EAAyBC,EAAQ,MAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,OAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,qGACD,SAEJN,EAAQE,QAAUE,G,kCCflB,IAAIR,EAAyBC,EAAQ,MAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,OAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,qGACD,QAEJN,EAAQE,QAAUE,G,kCCjBlB,+LAEaG,EAAkB,WAC7B,OAAOC,IAAMC,IAAI,wBAENC,EAAkB,SAAApB,GAC7B,OAAOkB,IAAMC,IAAN,iCAAoCnB,KAEhCqB,EAAiB,SAAAC,GAC5B,OAAOJ,IAAMK,KAAN,oCAAwCD,KAEpCE,EAAiB,SAAAC,GAC5B,OAAOP,IAAMK,KAAK,qBAAsBE,IAE7BC,EAAiB,SAAAD,GAC5B,OAAOP,IAAMK,KAAK,wBAAyBE,K,6MCAvCE,EAAU,CACdC,WAAY,WACZC,oBAAqB,aACrBC,eAAgB,QAGZC,E,4MACJC,MAAQ,CACNC,aAAc,GACdC,8BAA8B,EAC9BC,eAAgB,GAChBC,aAAa,G,EAGfC,QAAU,SAAAC,GACR,EAAKC,SAAS,CAAED,U,EAGlBE,eAAiB,SAAAC,GACf,EAAKF,SAAS,CAAEG,YAAaD,EAAME,OAAOhC,S,EAG5CiC,iBAAmB,SAACH,EAAOI,GACzB,EAAKR,QAAQQ,I,EAGfC,kBAAoB,WAClB,EAAKP,SAAS,CACZQ,wBAAwB,EACxBb,8BAA8B,IAEhC,EAAKc,kB,EAGPC,qBAAuB,SAAA3B,GACrB,EAAKiB,SAAS,CACZjB,MACAY,8BAA8B,K,EAIlCgB,2BAA6B,WAC3B7B,YAAe,EAAKW,MAAMV,KAAK6B,MAAK,SAACC,GACnC,EAAKN,uBACJO,OAAM,SAACtF,GACR,EAAKwE,SAAS,CAACJ,eAAgBpE,EAAMuF,SAASC,KAAKpE,UACnD,EAAKoD,SAAS,CAACH,aAAa,IAC5B,EAAKU,wB,EAQTE,eAAiB,WACf/B,cAAkBkC,MAAK,SAACC,GACtB,IAAII,EAAU,GACdJ,EAAIG,KAAKE,KAAI,SAACC,GACZF,EAAQG,KAAK,CACX3D,GAAI0D,EAAKE,GACTC,KAAMH,EAAKG,KACXvC,IAAKoC,EAAKI,IACVC,QAASL,EAAKK,QACdC,uBAAwBN,EAAKM,uBAC7BC,KAAMP,EAAKO,KAAKJ,UAGpB,EAAKtB,SAAS,CAAEN,aAAcuB,Q,EAIlCU,oBAAsB,WACpB,EAAK3B,SAAS,CAACH,aAAa,K,kEArB5B+B,KAAKnB,mB,+BAwBG,IAAD,SAMHmB,KAAKnC,MAJPC,EAFK,EAELA,aACAC,EAHK,EAGLA,6BACAE,EAJK,EAILA,YACAD,EALK,EAKLA,eAGIiC,EAAU,CACd,CACAP,KAAM,KACNQ,MAAO,cACP1C,QAAS,CACP2C,QAAQ,EACRC,MAAM,IAGR,CACAV,KAAM,OACNQ,MAAO,gBACP1C,QAAS,CACP2C,QAAQ,EACRC,MAAM,IAGR,CACAV,KAAM,UACNQ,MAAO,mBACP1C,QAAS,CACP2C,QAAQ,EACRC,MAAM,IAGR,CACAV,KAAM,OACNQ,MAAO,OACP1C,QAAS,CACP2C,QAAQ,EACRC,MAAM,IAGR,CACAV,KAAM,yBACNQ,MAAO,uBACP1C,QAAS,CACP2C,QAAQ,EACRC,MAAM,IAGR,CACEV,KAAM,SACNQ,MAAO,SACP1C,QAAS,CACP2C,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,qBAAsB,SAACC,GACrB,OACE,oCACA,kBAAC,IAAD,CACErE,QAAS,kBACP,EAAKd,MAAMoF,QAAQhB,KAAnB,yBAA0C1B,EAAayC,GAAWpD,QAGpE,kBAAC,IAAD,CAAMlB,MAAM,WAAZ,SAEF,kBAAC,IAAD,CAAYC,QAAS,kBAAM,EAAK4C,qBAAqBhB,EAAayC,GAAWpD,OAC3E,kBAAC,IAAD,CAAMlB,MAAM,SAAZ,gBASZ,OACE,yBAAKX,UAAU,WACb,yBAAMA,UAAU,YACd,kBAAC,IAAD,CAAYmF,cAAe,CAAC,CAAEf,KAAM,qBAGtC,kBAAC,IAAD,CAAMgB,GAAG,qBACP,kBAAC,IAAD,CACEpF,UAAU,QACVE,QAAQ,YACRS,MAAM,UACNC,QAAS,kBAAM,EAAKkC,SAAS,CAAEQ,wBAAwB,EAAM+B,IAAK,SAJpE,qBASF,kBAAC,IAAD,CAAMrF,UAAU,sBAAsBsF,UAAW,GAC/C,kBAAC,IAAD,CACEtF,UAAU,cACVuF,MAAO,gBACPzB,KAAMtB,EACNmC,QAASA,EACTzC,QAASA,IAGVO,GACC,kBAAC,IAAD,CACE+C,KAAM/C,EACNgD,qBAAsBf,KAAKrB,kBAC3BqC,WAAYhB,KAAKjB,2BACjBkC,KAAK,6BAKX,kBAAC,IAAD,CACEC,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdN,KAAM7C,EACNoD,iBAAkB,IAClB9F,QAASyE,KAAKD,qBAEd,kBAAC,IAAD,CACExE,QAASyE,KAAKD,oBACdvE,QAAQ,UACRR,QAASgD,U,GAjMMsD,aAyMZ1D","file":"static/js/22.78ad2f5b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n  };\r\n  \r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600]\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700]\r\n    },\r\n    icon: {\r\n        fontSize: 20\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    message: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n    <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n            </span>\r\n        }\r\n        action={[\r\n            <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            >\r\n            <CloseIcon className={classes.icon} />\r\n            </IconButton>\r\n        ]}\r\n        {...other}\r\n    />);\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import axios from \"axios\";\r\n\r\nexport const getAllSuppliers = () => {\r\n  return axios.get(\"/api/suppliers/list\");\r\n};\r\nexport const getSupplierById = id => {\r\n  return axios.get(`/api/suppliers/get?uid=${id}`);\r\n};\r\nexport const deleteSupplier = mid => {\r\n  return axios.post(`/api/suppliers/delete?uid=${mid}`);\r\n};\r\nexport const addNewSupplier = NewSupplier => {\r\n  return axios.post(\"/api/suppliers/add\", NewSupplier);\r\n};\r\nexport const updateSupplier = NewSupplier => {\r\n  return axios.post(\"/api/suppliers/update\", NewSupplier);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport {\r\n  IconButton,\r\n  Icon,\r\n  Button,\r\n  Card\r\n} from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllSuppliers, deleteSupplier } from \"./SupplierService\";\r\nimport MySnackbarContentWrapper from \"../../components/Snackbar/Snackbar\";\r\n\r\nconst options = {\r\n  filterType: 'checkbox',\r\n  customToolbarSelect: () => {},\r\n  selectableRows: \"none\"\r\n};\r\n\r\nclass SupplierList extends Component {\r\n  state = {\r\n    supplierList: [],\r\n    shouldOpenConfirmationDialog: false,\r\n    warningMessage: \"\",\r\n    warningOpen: false,\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteSupplier = mid => {\r\n    this.setState({\r\n      mid,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleConfirmationResponse = () => {\r\n    deleteSupplier(this.state.mid).then((res) => {\r\n      this.handleDialogClose();\r\n    }).catch((error) => {\r\n      this.setState({warningMessage: error.response.data.message});\r\n      this.setState({warningOpen: true});\r\n      this.handleDialogClose();\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  updatePageData = () => {\r\n    getAllSuppliers().then((res) => {\r\n      let tmpList = [];\r\n      res.data.map((item) => {\r\n        tmpList.push({\r\n          id: item.ID,\r\n          name: item.name,\r\n          mid: item._id,\r\n          country: item.country,\r\n          main_products_services: item.main_products_services,\r\n          type: item.type.name\r\n        });\r\n      });\r\n      this.setState({ supplierList: tmpList });\r\n    });\r\n  };\r\n\r\n  closeWarningMessage = () => {\r\n    this.setState({warningOpen: false});\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      supplierList,\r\n      shouldOpenConfirmationDialog,\r\n      warningOpen,\r\n      warningMessage\r\n    } = this.state;\r\n    \r\n    const columns = [\r\n      {\r\n      name: \"id\",\r\n      label: \"Supplier ID\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n      },\r\n      {\r\n      name: \"name\",\r\n      label: \"Supplier Name\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n      },\r\n      {\r\n      name: \"country\",\r\n      label: \"Supplier Country\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n      },\r\n      {\r\n      name: \"type\",\r\n      label: \"Type\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n      },\r\n      {\r\n      name: \"main_products_services\",\r\n      label: \"Main Product/Service\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n      },\r\n      {\r\n        name: \"action\",\r\n        label: \"Action\",\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          empty: true,\r\n          customBodyRenderLite: (dataIndex) => {\r\n            return (\r\n              <>\r\n              <IconButton\r\n                onClick={() =>\r\n                  this.props.history.push(`/supplier/edit/${supplierList[dataIndex].mid}`)\r\n                }\r\n              >\r\n                <Icon color=\"primary\">edit</Icon>\r\n              </IconButton>  \r\n              <IconButton onClick={() => this.handleDeleteSupplier(supplierList[dataIndex].mid)}>\r\n                <Icon color=\"error\">delete</Icon>\r\n              </IconButton>\r\n              </>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div  className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: \"Supplier List\" }]} />\r\n        </div>\r\n\r\n        <Link to=\"/supplier/add-new\">\r\n          <Button\r\n            className=\"mb-16\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => this.setState({ shouldOpenEditorDialog: true, uid: null })}\r\n          >\r\n            Add New Supplier\r\n          </Button>\r\n        </Link>\r\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\r\n          <MUIDataTable\r\n            className=\"pl-24 pr-24\"\r\n            title={\"Supplier List\"}\r\n            data={supplierList}\r\n            columns={columns}\r\n            options={options}\r\n          />\r\n\r\n          {shouldOpenConfirmationDialog && (\r\n            <ConfirmationDialog\r\n              open={shouldOpenConfirmationDialog}\r\n              onConfirmDialogClose={this.handleDialogClose}\r\n              onYesClick={this.handleConfirmationResponse}\r\n              text=\"Are you sure to delete?\"\r\n            />\r\n          )}\r\n        </Card>\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          open={warningOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.closeWarningMessage}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.closeWarningMessage}\r\n            variant=\"warning\"\r\n            message={warningMessage}\r\n          />\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SupplierList;\r\n"],"sourceRoot":""}