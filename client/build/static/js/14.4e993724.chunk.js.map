{"version":3,"sources":["app/components/Snackbar/Snackbar.js","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/Warning.js","../node_modules/@material-ui/icons/Error.js","../node_modules/@material-ui/icons/Info.js","app/views/parts_um/PartsUMService.js","app/views/parts/PartsService.js","app/views/parts_type/PartsTypeService.js","app/views/parts/CustomSelect.jsx","app/views/parts/PartsEditorDialog.jsx","app/views/parts/PartsList.jsx"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","clsx","aria-describedby","id","action","key","aria-label","color","onClick","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","getAllPartsUM","axios","get","getPartsUMById","deletePartsUM","post","addNewPartsUM","NewPartsUM","updatePartsUM","getAllParts","getPartsById","deleteParts","addNewParts","NewParts","updateParts","updatePartsList","PartsList","getAllPartsType","getPartsTypeById","deletePartsType","addNewPartsType","NewPartsType","updatePartsType","useStyles","root","flexGrow","height","input","padding","valueContainer","flexWrap","flex","overflow","chip","margin","chipFocused","emphasize","type","grey","noOptionsMessage","singleValue","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","ref","components","Control","children","innerProps","innerRef","selectProps","TextFieldProps","TextField","fullWidth","InputProps","inputProps","Menu","Paper","square","MultiValue","Chip","tabIndex","label","isFocused","onDelete","removeProps","deleteIcon","NoOptionsMessage","Typography","Option","MenuItem","selected","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","CustomSelect","handleChange","selectedValue","textFieldProps","isMulti","options","useTheme","selectStyles","base","text","font","NoSsr","styles","inputId","onChange","NumberFormatCustom","getInputRef","onValueChange","values","target","thousandSeparator","prefix","PartsTypeEditorDialog","state","_id","name","selectedType","selectedUM","costUSD","qty","partsTypeList","partsUMList","event","source","persist","setState","handleFormSubmit","newParts","UM","then","handleClose","res","data","map","item","short_name","this","mid","curParts","cost_usd","console","log","open","Dialog","maxWidth","onSubmit","Grid","container","sm","xs","validators","errorMessages","InputLabelProps","htmlFor","shrink","prevState","parts","e","min","textAlign","Button","Component","columnStyleWithWidth","width","filterType","customToolbarSelect","selectableRows","rowsPerPage","page","partsList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","filterID","filterName","warningOpen","warningMessage","setPage","setRowsPerPage","handleChangePage","newPage","handleDialogClose","updatePageData","handleDeleteParts","handleConfirmationResponse","catch","response","tmpList","push","ID","supplierID","supplier_id","supplierCountry","country","supplierName","handleChangeCheckbox","checked","getMuiTheme","createMuiTheme","overrides","MUIDataTableBodyCell","columns","filter","sort","customHeadRender","index","column","TableCell","empty","customBodyRenderLite","dataIndex","IconButton","routeSegments","Card","elevation","title","PartsEditorDialog","onConfirmDialogClose","onYesClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeWarningMessage"],"mappings":"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","file":"static/js/14.4e993724.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n  };\r\n  \r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600]\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700]\r\n    },\r\n    icon: {\r\n        fontSize: 20\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    message: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n    <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n            </span>\r\n        }\r\n        action={[\r\n            <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            >\r\n            <CloseIcon className={classes.icon} />\r\n            </IconButton>\r\n        ]}\r\n        {...other}\r\n    />);\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import axios from \"axios\";\r\n\r\nexport const getAllPartsUM = () => {\r\n  return axios.get(\"/api/parts-um/list\");\r\n};\r\nexport const getPartsUMById = id => {\r\n  return axios.get(`/api/parts-um/get?_id=${id}`);\r\n};\r\nexport const deletePartsUM = id => {\r\n  return axios.post(`/api/parts-um/delete?_id=${id}`);\r\n};\r\nexport const addNewPartsUM = NewPartsUM => {\r\n  return axios.post(\"/api/parts-um/add\", NewPartsUM);\r\n};\r\nexport const updatePartsUM = NewPartsUM => {\r\n  return axios.post(\"/api/parts-um/update\", NewPartsUM);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllParts = () => {\r\n  return axios.get(\"/api/parts/list\");\r\n};\r\nexport const getPartsById = id => {\r\n  return axios.get(`/api/parts/get?_id=${id}`);\r\n};\r\nexport const deleteParts = id => {\r\n  return axios.post(`/api/parts/delete?_id=${id}`);\r\n};\r\nexport const addNewParts = NewParts => {\r\n  return axios.post(\"/api/parts/add\", NewParts);\r\n};\r\nexport const updateParts = NewParts => {\r\n  return axios.post(\"/api/parts/update\", NewParts);\r\n};\r\nexport const updatePartsList = PartsList => {\r\n  return axios.post(\"/api/parts/update-list\", PartsList);\r\n}","import axios from \"axios\";\r\n\r\nexport const getAllPartsType = () => {\r\n  return axios.get(\"/api/parts-type/list\");\r\n};\r\nexport const getPartsTypeById = id => {\r\n  return axios.get(`/api/parts-type/get?_id=${id}`);\r\n};\r\nexport const deletePartsType = id => {\r\n  return axios.post(`/api/parts-type/delete?_id=${id}`);\r\n};\r\nexport const addNewPartsType = NewPartsType => {\r\n  return axios.post(\"/api/parts-type/add\", NewPartsType);\r\n};\r\nexport const updatePartsType = NewPartsType => {\r\n  return axios.post(\"/api/parts-type/update\", NewPartsType);\r\n};\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nexport default function CustomSelect({handleChange, selectedValue, textFieldProps, isMulti, options}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          options={options}\r\n          components={components}\r\n          TextFieldProps={textFieldProps}\r\n          value={selectedValue}\r\n          onChange={handleChange}\r\n          isMulti={isMulti}\r\n        />\r\n      </NoSsr>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { getPartsById, updateParts } from \"./PartsService\";\r\nimport { getAllPartsType } from \"../parts_type/PartsTypeService\";\r\nimport { getAllPartsUM } from \"../parts_um/PartsUMService\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport { generateRandomId } from \"utils\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value\r\n          }\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nclass PartsTypeEditorDialog extends Component {\r\n  state = {\r\n    _id: null,\r\n    name: \"\",\r\n    selectedType: null,\r\n    selectedUM: null,\r\n    costUSD: 0,\r\n    qty: 0,\r\n    partsTypeList: [],\r\n    partsUMList: [],\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    this.setState({\r\n    [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let newParts = {\r\n      _id: this.state._id,\r\n      name: this.state.name,\r\n      type: this.state.selectedType.value,\r\n      costUSD: this.state.costUSD,\r\n      UM: this.state.selectedUM.value,\r\n      qty: this.state.qty,\r\n    };\r\n    updateParts(newParts).then(() => {\r\n      this.props.handleClose();\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    \r\n    getAllPartsType().then((res) => {\r\n      this.setState({ partsTypeList: res.data.map(item => ({value: item._id, label: item.name})) });\r\n    });\r\n    getAllPartsUM().then((res) => {\r\n      this.setState({ partsUMList: res.data.map(item => ({value: item._id, label: item.short_name})) });\r\n    });\r\n\r\n    getPartsById(this.props.mid).then(res => {\r\n      let data = res.data;\r\n      let curParts = {\r\n        _id: data._id,\r\n        name: data.name,\r\n        selectedUM: {value: data.UM._id, label: data.UM.short_name},\r\n        selectedType: {value: data.type._id, label: data.type.name},\r\n        qty: data.qty,\r\n        costUSD: data.cost_usd,\r\n      }\r\n      this.setState({ ...curParts }, () => {\r\n        console.log(this.state);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let {       \r\n      _id,\r\n      name,\r\n      selectedType,\r\n      selectedUM,\r\n      costUSD,\r\n      qty,\r\n      partsTypeList,\r\n      partsUMList,\r\n    } = this.state;\r\n    let { open, handleClose } = this.props;\r\n\r\n    return (\r\n      <Dialog onClose={handleClose} open={open} maxWidth={'md'} fullWidth={true}>\r\n        <div className=\"p-24\">\r\n          <h4 className=\"mb-20\">Update Parts</h4>\r\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n            <Grid className=\"mb-48\" container spacing={4}>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label=\"Name\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={3} xs={6}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: \"Parts Type\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  \r\n                  handleChange={(data) => this.setState(prevState => ({\r\n                      ...prevState.parts,\r\n                      selectedType: data\r\n                  }))}\r\n                  selectedValue={selectedType}\r\n                  options={partsTypeList}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={3} xs={6}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: \"Parts UM\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  \r\n                  handleChange={(data) => this.setState(prevState => ({\r\n                      ...prevState.parts,\r\n                      selectedUM: data\r\n                  }))}\r\n                  selectedValue={selectedUM}\r\n                  options={partsUMList}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={3} xs={6}>\r\n                <TextField\r\n                  className=\"w-100\"\r\n                  label=\"Cost USD\"\r\n                  value={costUSD}\r\n                  onChange={(e) => this.setState(prevState => ({\r\n                    costUSD: e.target.value\r\n                  }))}\r\n                  name=\"costUSD\"\r\n                  InputProps={{\r\n                    inputComponent: NumberFormatCustom,\r\n                    \r\n                  }}\r\n                  inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={3} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label=\"Quantity\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"qty\"\r\n                  value={qty}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                  inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <div className=\"flex flex-space-between flex-middle\">\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n              <Button onClick={() => this.props.handleClose()}>Cancel</Button>\r\n            </div>\r\n          </ValidatorForm>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PartsTypeEditorDialog;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  IconButton,\r\n  TableCell,\r\n  Icon,\r\n  Card\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport PartsEditorDialog from \"./PartsEditorDialog\";\r\nimport { getAllParts, deleteParts } from \"./PartsService\";\r\nimport MySnackbarContentWrapper from \"../../components/Snackbar/Snackbar\";\r\n\r\nconst columnStyleWithWidth = {\r\n   width: \"600px\"\r\n}\r\nconst options = {\r\n  filterType: 'checkbox',\r\n  customToolbarSelect: () => {},\r\n  selectableRows: \"none\",\r\n};\r\n\r\nclass PartsList extends Component {\r\n  state = {\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    partsList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    filterID: true,\r\n    filterName: true,\r\n    warningOpen: false,\r\n    warningMessage: \"\",\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      mid: null,\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteParts = mid => {\r\n    this.setState({\r\n      mid,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleConfirmationResponse = () => {\r\n    deleteParts(this.state.mid).then((res) => {\r\n      this.handleDialogClose();\r\n    }).catch((error) => {\r\n      this.setState({warningMessage: error.response.data.message});\r\n      this.setState({warningOpen: true});\r\n      this.handleDialogClose();\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  updatePageData = () => {\r\n    getAllParts().then((res) => {\r\n      let tmpList = [];\r\n      res.data.map((item) => {\r\n        tmpList.push({\r\n          id: item.ID,\r\n          name: item.name,\r\n          mid: item._id,\r\n          type: item.type.name,\r\n          UM: item.UM.short_name,\r\n          costUSD: item.cost_usd,\r\n          supplierID: item.supplier_id.ID,\r\n          supplierCountry: item.supplier_id.country,\r\n          supplierName: item.supplier_id.name\r\n        });\r\n      });\r\n      this.setState({ partsList: tmpList });\r\n    });\r\n  };\r\n\r\n  handleChangeCheckbox = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n  }\r\n\r\n  getMuiTheme = () => createMuiTheme({\r\n    overrides: {\r\n      MUIDataTableBodyCell: {\r\n        root: {\r\n          // '&:nth-child(1)': {\r\n          //   width: 100\r\n          // },\r\n          // '&:nth-child(2)': {\r\n          //   width: 200\r\n          // },\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  render() {\r\n    let {\r\n      partsList,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog,\r\n      warningOpen,\r\n      warningMessage,\r\n    } = this.state;\r\n\r\n    const columns = [\r\n      {\r\n      name: \"id\",\r\n      label: \"ID\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      }\r\n      },\r\n      {\r\n        name: \"name\",\r\n        label: \"Name\",\r\n        options: {\r\n          filter: true,\r\n          sort: true,\r\n          customHeadRender: ({index, ...column}) => {\r\n            return (\r\n              <TableCell key={index} style={columnStyleWithWidth}>\r\n                  {column.label}\r\n              </TableCell>\r\n            )\r\n          }\r\n        }\r\n      },\r\n      {\r\n        name: \"type\",\r\n        label: \"Type\",\r\n        options: {\r\n          filter: true,\r\n          sort: true,\r\n        }\r\n      },\r\n      {\r\n        name: \"UM\",\r\n        label: \"UM\",\r\n        options: {\r\n          filter: true,\r\n          sort: true,\r\n        }\r\n      },\r\n      {\r\n        name: \"costUSD\",\r\n        label: \"Cost USD\",\r\n        options: {\r\n          filter: true,\r\n          sort: true,\r\n        }\r\n      },\r\n      {\r\n        name: \"supplierID\",\r\n        label: \"Supplier ID\",\r\n        options: {\r\n          filter: true,\r\n          sort: true,\r\n        }\r\n      },\r\n      {\r\n        name: \"supplierCountry\",\r\n        label: \"Supplier Country\",\r\n        options: {\r\n          filter: true,\r\n          sort: true,\r\n        }\r\n      },\r\n      {\r\n        name: \"supplierName\",\r\n        label: \"Supplier Name\",\r\n        options: {\r\n          filter: true,\r\n          sort: true,\r\n        }\r\n      },\r\n      {\r\n        name: \"action\",\r\n        label: \"Action\",\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          empty: true,\r\n          customBodyRenderLite: (dataIndex) => {\r\n            return (\r\n              <>\r\n              <IconButton\r\n                onClick={() =>\r\n                  this.setState({\r\n                    mid: this.state.partsList[dataIndex].mid,\r\n                    shouldOpenEditorDialog: true\r\n                  })\r\n                }\r\n              >\r\n                <Icon color=\"primary\">edit</Icon>\r\n              </IconButton>  \r\n              <IconButton onClick={() => this.handleDeleteParts(this.state.partsList[dataIndex].mid)}>\r\n                <Icon color=\"error\">delete</Icon>\r\n              </IconButton>\r\n              </>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div  className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: \"Parts\" }]} />\r\n        </div>\r\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\r\n          <MuiThemeProvider theme={this.getMuiTheme()}>\r\n            <MUIDataTable\r\n              className=\"crud-table\"\r\n              title={\"Parts List\"}\r\n              data={partsList}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </MuiThemeProvider>\r\n\r\n          {shouldOpenEditorDialog && (\r\n            <PartsEditorDialog\r\n              handleClose={this.handleDialogClose}\r\n              open={shouldOpenEditorDialog}\r\n              mid={this.state.mid}\r\n            />\r\n          )}\r\n\r\n          {shouldOpenConfirmationDialog && (\r\n            <ConfirmationDialog\r\n              open={shouldOpenConfirmationDialog}\r\n              onConfirmDialogClose={this.handleDialogClose}\r\n              onYesClick={this.handleConfirmationResponse}\r\n              text=\"Are you sure to delete?\"\r\n            />\r\n          )}\r\n        </Card>\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          open={warningOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.closeWarningMessage}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.closeWarningMessage}\r\n            variant=\"warning\"\r\n            message={warningMessage}\r\n          />\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PartsList;\r\n"],"sourceRoot":""}