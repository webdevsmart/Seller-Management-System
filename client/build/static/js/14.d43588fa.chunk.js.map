{"version":3,"sources":["app/components/Snackbar/Snackbar.js","app/views/parts/PartsService.js","app/views/product_category/CategoryService.js","app/views/product_variation/VariationService.js","app/views/freight/FreightService.js","app/views/storage/StorageService.js","app/views/fullfillment/FullfillmentService.js","app/views/product/ProductService.js","app/views/product/CustomSelect.jsx","app/views/product/CustomOptionSelect.jsx","app/views/product/AddNewProduct.jsx"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","clsx","aria-describedby","id","action","key","aria-label","color","onClick","getAllParts","axios","get","getPartsById","deleteParts","post","addNewParts","NewParts","updateParts","updatePartsList","PartsList","getAllCategories","getCategoryById","deleteCategory","addNewCategory","NewCategory","updateCategory","getAllVariation","getVariationById","deleteVariation","addNewVariation","NewVariation","updateVariation","getAllVariationType","getAllVariationValue","type","getAllFreight","getFreightById","deleteFreight","addNewFreight","NewFreight","updateFreight","getAllStorage","getStorageById","deleteStorage","addNewStorage","NewStorage","updateStorage","getAllFullfillment","getFullfillmentById","deleteFullfillment","addNewFullfillment","NewFullfillment","updateFullfillment","getAllProducts","getProductById","deleteProduct","addNewProduct","newFormData","config","updateProduct","NewProduct","useStyles","label","map","suggestion","value","root","flexGrow","height","input","padding","valueContainer","flexWrap","flex","overflow","chip","margin","chipFocused","emphasize","grey","noOptionsMessage","singleValue","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","ref","components","Control","children","innerProps","innerRef","selectProps","TextFieldProps","fullWidth","InputProps","inputProps","Menu","square","MultiValue","tabIndex","isFocused","onDelete","removeProps","deleteIcon","NoOptionsMessage","Option","selected","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","CustomSelect","handleChange","selectedValue","textFieldProps","isMulti","options","useTheme","selectStyles","base","text","font","styles","inputId","onChange","CustomOptionSelect","optionComponent","NumberFormatPrefixCustom","getInputRef","onValueChange","values","target","thousandSeparator","prefix","NumberFormatCustom","textAlign","NumberWithCM","suffix","CustomOption","option","partsFormat","data","cost_usd","UM","ID","supplier_id","short_name","name","AddNewProduct","state","productImages","SKU","UPC","ASIN","selectedParentCategory","selectedCategoryList","retailPrice","selectedFFAmazon","selectedFFThirdParty","selectedFFUs","productWidth","productHeight","productDepth","productGrams","packagedWidth","packagedHeight","packagedDepth","packagedGrams","selectedFreight","selectedParts","partsIDCode","partsQty","notes","selectedStorage","fullfillmentType","storageDuration","freightQty","storageQty","expanded","squareFeet","variationQualities","selectedVariationType","selectedVariationValue","variationTypeList","variationValueList","categoryList","freightList","partsList","storageList","fullfillmentList","messageOpen","messageType","lightboxOpen","lightboxImages","lightboxIndex","loading","handleSubmit","event","setState","fulfillmentFBAFee","parts","parts_qty","part","index","push","variation_qualities","v","newProduct","generateRandomId","sku","upc","asin","JSON","stringify","parent_category","categories","a","retail_price","parseFloat","toFixed","square_feet","fullfillment_amazon","fullfillment_thirdparty","fullfillment_us","product_width","product_height","product_depth","product_grams","packaged_width","packaged_height","packaged_depth","packaged_grams","freight","freight_qty","storage","storage_duration","fullfillment_fba_fee","fullfillment_type","formData","FormData","image","append","file","headers","then","res","catch","err","persist","handleSelectVType","valueList","item","_id","handleSearchParts","e","obj","find","o","toUpperCase","handleSelectParts","handleChangePartsQty","addNewPart","handleSelectFreight","handleSelectStorage","handleChangeMetric","closeMessage","addNewVariationList","handleSelectVariationValue","handleAccordion","handleSetImages","files","i","length","includes","size","newImage","preview","URL","createObjectURL","fileName","date","moment","format","deleteImage","indexOf","splice","downloadImage","url","link","document","createElement","href","setAttribute","body","appendChild","click","openLighbox","items","category","costUSD","this","oem","routeSegments","onSubmit","onError","errors","disabled","container","lg","md","sm","xs","expandIcon","aria-controls","xl","elevation","src","alt","width","objectFit","htmlFor","accept","multiple","validators","errorMessages","border","align","variation","InputLabelProps","shrink","row","control","labelPlacement","readOnly","rate","colSpan","min","multiline","rows","paddingBottom","whiteSpace","idCode","scope","country","anchorOrigin","vertical","horizontal","open","autoHideDuration","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Component"],"mappings":"oWAiBMA,EAAc,CAChBC,QAASC,IACTC,QAASC,IACTC,MAAOC,IACPC,KAAMC,KAGJC,EAAaC,aAAW,SAAAC,GAAK,MAAK,CACpCV,QAAS,CACLW,gBAAiBC,IAAM,MAE3BR,MAAO,CACHO,gBAAiBD,EAAMG,QAAQT,MAAMU,MAEzCR,KAAM,CACFK,gBAAiBD,EAAMG,QAAQE,QAAQC,MAE3Cd,QAAS,CACLS,gBAAiBM,IAAM,MAE3BC,KAAM,CACFC,SAAU,IAEdC,YAAa,CACTC,QAAS,GACTC,YAAaZ,EAAMa,QAAQ,IAE/BC,QAAS,CACLC,QAAS,OACTC,WAAY,cAIL,SAASC,EAAyBC,GAC7C,IAAMC,EAAUrB,IACRsB,EAAmDF,EAAnDE,UAAWN,EAAwCI,EAAxCJ,QAASO,EAA+BH,EAA/BG,QAASC,EAAsBJ,EAAtBI,QAAYC,EAFG,YAEOL,EAFP,6CAG9CM,EAAOnC,EAAYiC,GAEzB,OACA,kBAAC,IAAD,eACIF,UAAWK,kBAAKN,EAAQG,GAAUF,GAClCM,mBAAiB,kBACjBZ,QACI,0BAAMa,GAAG,kBAAkBP,UAAWD,EAAQL,SAC9C,kBAACU,EAAD,CAAMJ,UAAWK,kBAAKN,EAAQX,KAAMW,EAAQT,eAC3CI,GAGLc,OAAQ,CACJ,kBAAC,IAAD,CACAC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNC,QAASX,GAET,kBAAC,IAAD,CAAWD,UAAWD,EAAQX,UAG9Be,M,kCC3EZ,iOAEaU,EAAc,WACzB,OAAOC,IAAMC,IAAI,oBAENC,EAAe,SAAAT,GAC1B,OAAOO,IAAMC,IAAN,6BAAgCR,KAE5BU,EAAc,SAAAV,GACzB,OAAOO,IAAMI,KAAN,gCAAoCX,KAEhCY,EAAc,SAAAC,GACzB,OAAON,IAAMI,KAAK,iBAAkBE,IAEzBC,EAAc,SAAAD,GACzB,OAAON,IAAMI,KAAK,oBAAqBE,IAE5BE,EAAkB,SAAAC,GAC7B,OAAOT,IAAMI,KAAK,yBAA0BK,K,kCClB9C,+LAEaC,EAAmB,WAC9B,OAAOV,IAAMC,IAAI,+BAENU,EAAkB,SAAAlB,GAC7B,OAAOO,IAAMC,IAAN,wCAA2CR,KAEvCmB,EAAiB,SAAAnB,GAC5B,OAAOO,IAAMI,KAAN,2CAA+CX,KAE3CoB,EAAiB,SAAAC,GAC5B,OAAOd,IAAMI,KAAK,4BAA6BU,IAEpCC,EAAiB,SAAAD,GAC5B,OAAOd,IAAMI,KAAK,+BAAgCU,K,kCCfpD,mQAEaE,EAAkB,WAC7B,OAAOhB,IAAMC,IAAI,gCAENgB,EAAmB,SAAAxB,GAC9B,OAAOO,IAAMC,IAAN,yCAA4CR,KAExCyB,EAAkB,SAAAzB,GAC7B,OAAOO,IAAMI,KAAN,4CAAgDX,KAE5C0B,EAAkB,SAAAC,GAC7B,OAAOpB,IAAMI,KAAK,6BAA8BgB,IAErCC,EAAkB,SAAAD,GAC7B,OAAOpB,IAAMI,KAAK,gCAAiCgB,IAExCE,EAAsB,WACjC,OAAOtB,IAAMC,IAAI,qCAENsB,EAAuB,SAACC,GACnC,OAAOxB,IAAMC,IAAN,iDAAoDuB,M,kCCrB7D,+LAEaC,EAAgB,WAC3B,OAAOzB,IAAMC,IAAI,sBAENyB,EAAiB,SAAAjC,GAC5B,OAAOO,IAAMC,IAAN,+BAAkCR,KAE9BkC,EAAgB,SAAAlC,GAC3B,OAAOO,IAAMI,KAAN,kCAAsCX,KAElCmC,EAAgB,SAAAC,GAC3B,OAAO7B,IAAMI,KAAK,mBAAoByB,IAE3BC,EAAgB,SAAAD,GAC3B,OAAO7B,IAAMI,KAAK,sBAAuByB,K,kCCf3C,+LAEaE,EAAgB,WAC3B,OAAO/B,IAAMC,IAAI,sBAEN+B,EAAiB,SAAAvC,GAC5B,OAAOO,IAAMC,IAAN,+BAAkCR,KAE9BwC,EAAgB,SAAAxC,GAC3B,OAAOO,IAAMI,KAAN,kCAAsCX,KAElCyC,EAAgB,SAAAC,GAC3B,OAAOnC,IAAMI,KAAK,mBAAoB+B,IAE3BC,EAAgB,SAAAD,GAC3B,OAAOnC,IAAMI,KAAK,sBAAuB+B,K,kCCf3C,+LAEaE,EAAqB,WAChC,OAAOrC,IAAMC,IAAI,2BAENqC,EAAsB,SAAA7C,GACjC,OAAOO,IAAMC,IAAN,oCAAuCR,KAEnC8C,EAAqB,SAAA9C,GAChC,OAAOO,IAAMI,KAAN,uCAA2CX,KAEvC+C,EAAqB,SAAAC,GAChC,OAAOzC,IAAMI,KAAK,wBAAyBqC,IAEhCC,EAAqB,SAAAD,GAChC,OAAOzC,IAAMI,KAAK,2BAA4BqC,K,kCCfhD,+LAEaE,EAAiB,WAC5B,OAAO3C,IAAMC,IAAI,uBAEN2C,EAAiB,SAAAnD,GAC5B,OAAOO,IAAMC,IAAN,gCAAmCR,KAE/BoD,EAAgB,SAAApD,GAC3B,OAAOO,IAAMI,KAAN,mCAAuCX,KAEnCqD,EAAgB,SAACC,EAAaC,GACzC,OAAOhD,IAAMI,KAAK,oBAAqB2C,EAAaC,IAEzCC,EAAgB,SAAAC,GAC3B,OAAOlD,IAAMI,KAAK,uBAAwB8C,K,gOCsCtCC,GAxCc,CAClB,CAAEC,MAAO,eACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,YACT,CAAEA,MAAO,cACT,CAAEA,MAAO,uBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,SACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,cACT,CAAEA,MAAO,YACT,CAAEA,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,mCACT,CAAEA,MAAO,oCACT,CAAEA,MAAO,0BACT,CAAEA,MAAO,YACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,kCACT,CAAEA,MAAO,sBACTC,KAAI,SAAAC,GAAU,MAAK,CACnBC,MAAOD,EAAWF,MAClBA,MAAOE,EAAWF,UAGFvF,aAAW,SAAAC,GAAK,MAAK,CACrC0F,KAAM,CACJC,SAAU,EACVC,OAAQ,KAEVC,MAAO,CACL9E,QAAS,OACT+E,QAAS,EACTF,OAAQ,QAEVG,eAAgB,CACdhF,QAAS,OACTiF,SAAU,OACVC,KAAM,EACNjF,WAAY,SACZkF,SAAU,UAEZC,KAAM,CACJC,OAAQpG,EAAMa,QAAQ,GAAK,MAE7BwF,YAAa,CACXpG,gBAAiBqG,YACQ,UAAvBtG,EAAMG,QAAQuD,KACV1D,EAAMG,QAAQoG,KAAK,KACnBvG,EAAMG,QAAQoG,KAAK,KACvB,MAGJC,iBAAkB,CAChBV,QAAS9F,EAAMa,QAAQ,EAAG,IAE5B4F,YAAa,CACXhG,SAAU,IAEZiG,YAAa,CACXC,SAAU,WACVC,KAAM,EACNC,OAAQ,EACRpG,SAAU,IAEZqG,MAAO,CACLH,SAAU,WACVI,OAAQ,EACRC,UAAWhH,EAAMa,QAAQ,GACzB+F,KAAM,EACNK,MAAO,GAETC,QAAS,CACPtB,OAAQ5F,EAAMa,QAAQ,SAsB1B,SAASsG,EAAT,GAAiD,IAAvBC,EAAsB,EAAtBA,SAAalG,EAAS,4BAC9C,OAAO,uCAAKmG,IAAKD,GAAclG,IAsJjC,IAAMoG,EAAa,CACjBC,QAhJF,SAAiBrG,GAAQ,IAErBsG,EAIEtG,EAJFsG,SACAC,EAGEvG,EAHFuG,WACAC,EAEExG,EAFFwG,SAJoB,EAMlBxG,EADFyG,YAAexG,EALK,EAKLA,QAASyG,EALJ,EAKIA,eAG1B,OACE,kBAAC,IAAD,eACEC,WAAS,EACTC,WAAY,CACVX,iBACAY,WAAW,aACT3G,UAAWD,EAAQ0E,MACnBwB,IAAKK,EACLF,YACGC,KAGHG,KA6HRI,KApBF,SAAc9G,GACZ,OACE,kBAAC,IAAD,eACE+G,QAAM,EACN7G,UAAWF,EAAMyG,YAAYxG,QAAQ2F,OACjC5F,EAAMuG,YAETvG,EAAMsG,WAcXU,WA1CF,SAAoBhH,GAClB,OACE,kBAAC,IAAD,CACEiH,UAAW,EACX7C,MAAOpE,EAAMsG,SACbpG,UAAWK,kBAAKP,EAAMyG,YAAYxG,QAAQgF,KAAM,CAC9C,CAACjF,EAAMyG,YAAYxG,QAAQkF,aAAcnF,EAAMkH,YAEjDC,SAAUnH,EAAMoH,YAAYtG,QAC5BuG,WAAY,kBAAC,IAAerH,EAAMoH,gBAkCtCE,iBA7KF,SAA0BtH,GACxB,OACE,kBAAC,IAAD,eACEa,MAAM,gBACNX,UAAWF,EAAMyG,YAAYxG,QAAQqF,kBACjCtF,EAAMuG,YAETvG,EAAMsG,WAuKXiB,OApHF,SAAgBvH,GACd,OACE,kBAAC,IAAD,eACEmG,IAAKnG,EAAMwG,SACXgB,SAAUxH,EAAMkH,UAChBO,UAAU,MACVC,MAAO,CACLC,WAAY3H,EAAM4H,WAAa,IAAM,MAEnC5H,EAAMuG,YAETvG,EAAMsG,WA0GXuB,YA7FF,SAAqB7H,GACnB,OACE,kBAAC,IAAD,eACEa,MAAM,gBACNX,UAAWF,EAAMyG,YAAYxG,QAAQuF,aACjCxF,EAAMuG,YAETvG,EAAMsG,WAuFXwB,YA5EF,SAAqB9H,GACnB,OACE,kBAAC,IAAD,eACEE,UAAWF,EAAMyG,YAAYxG,QAAQsF,aACjCvF,EAAMuG,YAETvG,EAAMsG,WAuEXyB,eA5DF,SAAwB/H,GACtB,OACE,yBAAKE,UAAWF,EAAMyG,YAAYxG,QAAQ4E,gBACvC7E,EAAMsG,YA4DE,SAAS0B,EAAT,GAAwF,IAAjEC,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,QACpFpI,EAAUkE,IACVrF,EAAQwJ,cAERC,EAAe,CACnB5D,MAAO,SAAA6D,GAAI,kCACNA,GADM,IAET3H,MAAO/B,EAAMG,QAAQwJ,KAAKtJ,QAC1B,UAAW,CACTuJ,KAAM,eAKZ,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEzI,QAASA,EACT0I,OAAQJ,EACRK,QAAQ,sBACRP,QAASA,EACTjC,WAAYA,EACZM,eAAgByB,EAChB5D,MAAO2D,EACPW,SAAUZ,EACVG,QAASA,O,gOCzSbjE,EAAYtF,aAAW,SAAAC,GAAK,MAAK,CACrC0F,KAAM,CACJC,SAAU,EACVC,OAAQ,KAEVC,MAAO,CACL9E,QAAS,OACT+E,QAAS,EACTF,OAAQ,QAEVG,eAAgB,CACdhF,QAAS,OACTiF,SAAU,OACVC,KAAM,EACNjF,WAAY,SACZkF,SAAU,UAEZC,KAAM,CACJC,OAAQpG,EAAMa,QAAQ,GAAK,MAE7BwF,YAAa,CACXpG,gBAAiBqG,YACQ,UAAvBtG,EAAMG,QAAQuD,KACV1D,EAAMG,QAAQoG,KAAK,KACnBvG,EAAMG,QAAQoG,KAAK,KACvB,MAGJC,iBAAkB,CAChBV,QAAS9F,EAAMa,QAAQ,EAAG,IAE5B4F,YAAa,CACXhG,SAAU,IAEZiG,YAAa,CACXC,SAAU,WACVC,KAAM,EACNC,OAAQ,EACRpG,SAAU,IAEZqG,MAAO,CACLH,SAAU,WACVI,OAAQ,EACRC,UAAWhH,EAAMa,QAAQ,GACzB+F,KAAM,EACNK,MAAO,GAETC,QAAS,CACPtB,OAAQ5F,EAAMa,QAAQ,QAI1B,SAAS2H,EAAiBtH,GACxB,OACE,kBAAC,IAAD,eACEa,MAAM,gBACNX,UAAWF,EAAMyG,YAAYxG,QAAQqF,kBACjCtF,EAAMuG,YAETvG,EAAMsG,UAWb,SAASL,EAAT,GAAiD,IAAvBC,EAAsB,EAAtBA,SAAalG,EAAS,4BAC9C,OAAO,uCAAKmG,IAAKD,GAAclG,IAOjC,SAASqG,EAAQrG,GAAQ,IAErBsG,EAIEtG,EAJFsG,SACAC,EAGEvG,EAHFuG,WACAC,EAEExG,EAFFwG,SAJoB,EAMlBxG,EADFyG,YAAexG,EALK,EAKLA,QAASyG,EALJ,EAKIA,eAG1B,OACE,kBAAC,IAAD,eACEC,WAAS,EACTC,WAAY,CACVX,iBACAY,WAAW,aACT3G,UAAWD,EAAQ0E,MACnBwB,IAAKK,EACLF,YACGC,KAGHG,IAoCV,SAASmB,EAAY7H,GACnB,OACE,kBAAC,IAAD,eACEa,MAAM,gBACNX,UAAWF,EAAMyG,YAAYxG,QAAQuF,aACjCxF,EAAMuG,YAETvG,EAAMsG,UAWb,SAASwB,EAAY9H,GACnB,OACE,kBAAC,IAAD,eACEE,UAAWF,EAAMyG,YAAYxG,QAAQsF,aACjCvF,EAAMuG,YAETvG,EAAMsG,UAWb,SAASyB,EAAe/H,GACtB,OACE,yBAAKE,UAAWF,EAAMyG,YAAYxG,QAAQ4E,gBACvC7E,EAAMsG,UAUb,SAASU,EAAWhH,GAClB,OACE,kBAAC,IAAD,CACEiH,UAAW,EACX7C,MAAOpE,EAAMsG,SACbpG,UAAWK,kBAAKP,EAAMyG,YAAYxG,QAAQgF,KAAM,CAC9C,CAACjF,EAAMyG,YAAYxG,QAAQkF,aAAcnF,EAAMkH,YAEjDC,SAAUnH,EAAMoH,YAAYtG,QAC5BuG,WAAY,kBAAC,IAAerH,EAAMoH,eAYxC,SAASN,EAAK9G,GACZ,OACE,kBAAC,IAAD,eACE+G,QAAM,EACN7G,UAAWF,EAAMyG,YAAYxG,QAAQ2F,OACjC5F,EAAMuG,YAETvG,EAAMsG,UAsBE,SAASwC,EAAT,GAA+G,IAAlFb,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,cAAeC,EAAoD,EAApDA,eAAgBC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,QAASU,EAAkB,EAAlBA,gBACnG9I,EAAUkE,IACVrF,EAAQwJ,cAERC,EAAe,CACnB5D,MAAO,SAAA6D,GAAI,kCACNA,GADM,IAET3H,MAAO/B,EAAMG,QAAQwJ,KAAKtJ,QAC1B,UAAW,CACTuJ,KAAM,eAKJtC,EAAa,CACfC,UACAS,OACAE,aACAM,mBACAO,cACAC,cACAC,iBACAR,OAAQwB,GAId,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE9I,QAASA,EACT0I,OAAQJ,EACRK,QAAQ,sBACRP,QAASA,EACTjC,WAAYA,EACZM,eAAgByB,EAChB5D,MAAO2D,EACPW,SAAUZ,EACVG,QAASA,O,8fC7OnB,SAASY,EAAyBhJ,GAAQ,IAChCkG,EAAiClG,EAAjCkG,SAAU2C,EAAuB7I,EAAvB6I,SAAaxI,EADQ,YACEL,EADF,yBAGvC,OACE,kBAAC,IAAD,iBACMK,EADN,CAEE4I,YAAa/C,EACbgD,cAAe,SAAAC,GACbN,EAAS,CACPO,OAAQ,CACN7E,MAAO4E,EAAO5E,UAIpB8E,mBAAiB,EACjBC,OAAO,OAKb,SAASC,EAAmBvJ,GAAQ,IAC1BkG,EAAiClG,EAAjCkG,SAAU2C,EAAuB7I,EAAvB6I,SAAaxI,EADE,YACQL,EADR,yBAGjC,OACE,kBAAC,IAAD,iBACMK,EADN,CAEE4I,YAAa/C,EACbwB,MAAO,CAAC8B,UAAW,UACnBN,cAAe,SAAAC,GACbN,EAAS,CACPO,OAAQ,CACN7E,MAAO4E,EAAO5E,UAIpB8E,mBAAiB,KAKvB,SAASI,EAAazJ,GAAQ,IACpBkG,EAAiClG,EAAjCkG,SAAU2C,EAAuB7I,EAAvB6I,SAAaxI,EADJ,YACcL,EADd,yBAG3B,OACE,kBAAC,IAAD,iBACMK,EADN,CAEE4I,YAAa/C,EACbwB,MAAO,CAAC8B,UAAW,UACnBN,cAAe,SAAAC,GACbN,EAAS,CACPO,OAAQ,CACN7E,MAAO4E,EAAO5E,UAIpB8E,mBAAiB,EACjBK,OAAO,QAMb,IAAMC,GAAe,SAACC,GAAD,OAEjB,wBAASA,EAAOrD,WACZsD,GAAYD,EAAOE,QAIrBD,GAAc,SAAC,GAAqD,IAAnDzF,EAAkD,EAAlDA,MAAc2F,GAAoC,EAA3CxF,MAA2C,EAApCwF,UAAUC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACrD,OAAO,kBAAC,IAAD,KACL,yBAAKhK,UAAU,SACb,yBAAKA,UAAU,oCACb,uBAAGA,UAAU,SAAQ,0BAAMA,UAAU,mBAAhB,QAA8C+J,GACnE,uBAAG/J,UAAU,SAAQ,0BAAMA,UAAU,mBAAhB,QAA8C8J,EAAGG,YACtE,uBAAGjK,UAAU,IAAG,0BAAMA,UAAU,mBAAhB,UAAhB,IAAiE6J,IAEnE,yBAAK7J,UAAU,mCACb,2BAAG,0BAAMA,UAAU,mBAAhB,UAAgDkE,IAErD,yBAAKlE,UAAU,mCACb,2BAAG,0BAAMA,UAAU,mBAAhB,mBAAyDgK,EAAYE,UAO1EC,G,4MACJC,MAAQ,CACNC,cAAe,GACfH,KAAM,GACNI,IAAK,GACLC,IAAK,GACLC,KAAM,GACNC,uBAAwB,GACxBC,qBAAsB,GACtBC,YAAa,EACbC,iBAAkB,KAClBC,qBAAsB,KACtBC,aAAc,KACdC,aAAc,EACdC,cAAe,EACfC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfC,eAAgB,EAChBC,cAAe,EACfC,cAAe,EACfC,gBAAiB,KACjBC,cAAe,GACfC,YAAa,GACbC,SAAU,GACVC,MAAO,GACPC,gBAAiB,KACjBC,iBAAkB,SAClBC,gBAAiB,EACjBC,WAAY,EACZC,WAAY,EACZC,UAAU,EACVC,WAAY,GAEZC,mBAAoB,GACpBC,sBAAuB,GACvBC,uBAAwB,GACxBC,kBAAmB,GACnBC,mBAAoB,GACpBC,aAAc,GACdC,YAAa,GACbC,UAAW,GACXC,YAAa,GACbC,iBAAkB,GAClBC,aAAa,EACbnN,QAAS,GACToN,YAAa,UACbC,cAAc,EACdC,eAAgB,GAChBC,cAAe,EACfC,SAAS,G,EA6BXC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACH,SAAS,IACxB,IAAII,EAAoB,EAAKlD,MAAMQ,iBAAiBvG,MACjB,aAA/B,EAAK+F,MAAMyB,iBACbyB,EAAoB,EAAKlD,MAAMS,qBAAqBxG,MACd,MAA/B,EAAK+F,MAAMyB,mBAClByB,EAAoB,EAAKlD,MAAMU,aAAazG,OAC9C,IAAIkJ,EAAQ,GACRC,EAAY,GAChB,EAAKpD,MAAMoB,cAAcrH,KAAI,SAACsJ,EAAMC,GAC9BD,GAAQA,EAAKpJ,OAAuC,GAA9B,EAAK+F,MAAMsB,SAASgC,KAC5CH,EAAMI,KAAKF,EAAKpJ,OAChBmJ,EAAUG,KAAK,EAAKvD,MAAMsB,SAASgC,QAIvC,IAAIE,EAAsB,GAC1B,EAAKxD,MAAM+B,mBAAmBhI,KAAI,SAAC0J,GAC7BA,EAAEvL,MAAQuL,EAAExJ,OACduJ,EAAoBD,KAAK,CACvBrL,KAAMuL,EAAEvL,KAAK+B,MACbA,MAAOwJ,EAAExJ,MAAMA,WAIrB,IAAMyJ,EAAa,CACjB/D,GAAI,IAAMgE,cACV7D,KAAM,EAAKE,MAAMF,KACjB8D,IAAK,EAAK5D,MAAME,IAChB2D,IAAK,EAAK7D,MAAMG,IAChB2D,KAAM,EAAK9D,MAAMI,KACjBoD,oBAAqBO,KAAKC,UAAUR,GACpCS,gBAAiB,EAAKjE,MAAMK,uBAAuBpG,MACnDiK,WAAY,EAAKlE,MAAMM,qBAAqBvG,KAAI,SAAAoK,GAAC,OAAIA,EAAElK,SACvDmK,aAAcC,WAAW,EAAKrE,MAAMO,aAAa+D,QAAQ,GACzDC,YAAa,EAAKvE,MAAM8B,WACxB0C,oBAAqB,EAAKxE,MAAMQ,iBAAiBvG,MACjDwK,wBAAyB,EAAKzE,MAAMS,qBAAqBxG,MACzDyK,gBAAiB,EAAK1E,MAAMU,aAAazG,MACzC0K,cAAe,EAAK3E,MAAMW,aAC1BiE,eAAgB,EAAK5E,MAAMY,cAC3BiE,cAAe,EAAK7E,MAAMa,aAC1BiE,cAAe,EAAK9E,MAAMc,aAC1BiE,eAAgB,EAAK/E,MAAMe,cAC3BiE,gBAAiB,EAAKhF,MAAMgB,eAC5BiE,eAAgB,EAAKjF,MAAMiB,cAC3BiE,eAAgB,EAAKlF,MAAMkB,cAC3BiE,QAAS,EAAKnF,MAAMmB,gBAAgBlH,MACpCmL,YAAa,EAAKpF,MAAM2B,WACxB0D,QAAS,EAAKrF,MAAMwB,gBAAgBvH,MACpCqL,iBAAkB,EAAKtF,MAAM0B,gBAC7BH,MAAO,EAAKvB,MAAMuB,MAClB4B,MAAOA,EACPC,UAAWA,EACXmC,qBAAsBrC,EACtBsC,kBAAmB,EAAKxF,MAAMyB,kBAO1BgE,EAAW,IAAIC,SACrB,EAAK1F,MAAMC,cAAclG,KAAI,SAAC4L,GAC5BF,EAASG,OAAO,QAASD,EAAME,SAEjCJ,EAASG,OAAO,cAAe7B,KAAKC,UAAUN,IAC9ClK,YAAciM,EAVC,CACXK,QAAS,CACL,eAAgB,yBAQQC,MAAK,SAACC,GACpC,EAAK/C,SAAS,CAACH,SAAS,IACxB,EAAKG,SAAS,CAACP,YAAa,UAAWD,aAAa,EAAMnN,QAAS,wCAAwC,kBAE1G2Q,OAAM,SAACC,GACR,EAAKjD,SAAS,CAACH,SAAS,IACxB,EAAKG,SAAS,CAACP,YAAa,UAAWD,aAAa,EAAMnN,QAAS,wDAAwD,mB,EAK/HqI,aAAe,SAACqF,GACdA,EAAMmD,UACN,EAAKlD,SAAS,CACd,CAACD,EAAMlE,OAAOgB,MAAOkD,EAAMlE,OAAO7E,S,EAIpCmM,kBAAoB,SAAC5G,EAAM8D,GACzBrL,YAAqBuH,EAAKvF,OAAO8L,MAAK,SAACC,GAAS,IACxCjE,EAAuB,EAAK/B,MAA5B+B,mBACNA,EAAmBuB,GAAOpL,KAAOsH,EACjCuC,EAAmBuB,GAAOrJ,MAAQ,GAClC8H,EAAmBuB,GAAO+C,UAAYL,EAAIxG,KAAKzF,KAAI,SAAAuM,GAAI,MAAK,CAACrM,MAAOqM,EAAKC,IAAKzM,MAAOwM,EAAKC,QAC1F,EAAKtD,SAAS,CAAClB,2B,EAInByE,kBAAoB,SAACC,EAAGnD,GACtBmD,EAAEN,UAD8B,MAEG,EAAKnG,MAAnCqB,EAF2B,EAE3BA,YAAaD,EAFc,EAEdA,cAClBC,EAAYiC,GAASmD,EAAE3H,OAAO7E,MAC9B,IAAIyM,EAAM,EAAK1G,MAAMsC,UAAUqE,MAAK,SAAAC,GAAC,OAAIA,EAAEjH,KAAO8G,EAAE3H,OAAO7E,MAAM4M,iBAE/DzF,EAAckC,GADZoD,GAGqB,KACzB,EAAKzD,SAAS,CAAC7B,cAAeA,EAAeC,YAAaA,K,EAG5DyF,kBAAoB,SAACtH,EAAM8D,GAAW,IAAD,EACA,EAAKtD,MAAnCqB,EAD8B,EAC9BA,YAAaD,EADiB,EACjBA,cAClBC,EAAYiC,GAAS9D,EAAKG,GAC1ByB,EAAckC,GAAS9D,EACvB,EAAKyD,SAAS,CAAC7B,cAAeA,EAAeC,YAAaA,K,EAG5D0F,qBAAuB,SAACN,EAAGnD,GAAW,IAC/BhC,EAAY,EAAKtB,MAAjBsB,SACLA,EAASgC,GAASmD,EAAE3H,OAAO7E,MAC3B,EAAKgJ,SAAS,CAAC3B,c,EAGjB0F,WAAa,WAAO,IAAD,EAC8B,EAAKhH,MAA9CoB,EADW,EACXA,cAAeC,EADJ,EACIA,YAAaC,EADjB,EACiBA,SAClCD,EAAYkC,KAAK,IACjBnC,EAAcmC,KAAK,MACnBjC,EAASiC,KAAK,GACd,EAAKN,SAAS,CAAC5B,cAAaD,gBAAeE,c,EAG7C2F,oBAAsB,SAACzH,GACrB,IAAImC,EAAa,EAEfA,EADa,OAAXnC,EAAKE,GACM2E,WAAW,EAAKrE,MAAMe,cAAgB,EAAKf,MAAMgB,eAAiB,EAAKhB,MAAMiB,cAAgB,KACxF,MAAXzB,EAAKE,GACC2E,WAAW,EAAKrE,MAAMkB,cAAgB,KACjC,MAAX1B,EAAKE,GACC2E,WAAW,EAAKrE,MAAMkB,cAAgB,IAAO,SAE7C,EACf,EAAK+B,SAAS,CAACtB,WAAYA,EAAYR,gBAAiB3B,K,EAG1D0H,oBAAsB,SAAC1H,GACrB,IAAIkC,EAAkB,EAEpBA,EADa,OAAXlC,EAAKE,GACW2E,WAAW,EAAKrE,MAAMe,cAAgB,EAAKf,MAAMgB,eAAiB,EAAKhB,MAAMiB,cAAgB,KAC7F,MAAXzB,EAAKE,GACM2E,WAAW,EAAKrE,MAAMkB,cAAgB,KACtC,MAAX1B,EAAKE,GACM2E,WAAW,EAAKrE,MAAMkB,cAAgB,IAAO,SAE7C,EACpB,EAAK+B,SAAS,CAACvB,gBAAiBA,EAAiBF,gBAAiBhC,K,EAGpE2H,mBAAqB,SAACV,EAAG3G,GACvB,EAAKmD,SAAS,CACZ,CAACnD,GAAO2G,EAAE3H,OAAO7E,QAChB,WACD,IAAI0H,EAAa,EACbD,EAAkB,EAClB,EAAK1B,MAAMmB,kBAEXQ,EADmC,OAAjC,EAAK3B,MAAMmB,gBAAgBzB,GAChB2E,WAAW,EAAKrE,MAAMe,cAAgB,EAAKf,MAAMgB,eAAiB,EAAKhB,MAAMiB,cAAgB,KAClE,MAAjC,EAAKjB,MAAMmB,gBAAgBzB,GACrB2E,WAAW,EAAKrE,MAAMkB,cAAgB,KACX,MAAjC,EAAKlB,MAAMmB,gBAAgBzB,GACrB2E,WAAW,EAAKrE,MAAMkB,cAAgB,IAAO,SAE7C,EACf,EAAK+B,SAAS,CAACtB,gBAEb,EAAK3B,MAAMwB,kBAEXE,EADmC,OAAjC,EAAK1B,MAAMwB,gBAAgB9B,GACX2E,WAAW,EAAKrE,MAAMe,cAAgB,EAAKf,MAAMgB,eAAiB,EAAKhB,MAAMiB,cAAgB,KACvE,MAAjC,EAAKjB,MAAMwB,gBAAgB9B,GAChB2E,WAAW,EAAKrE,MAAMkB,cAAgB,KAChB,MAAjC,EAAKlB,MAAMwB,gBAAgB9B,GAChB2E,WAAW,EAAKrE,MAAMc,aAAe,IAAO,SAE5C,EACpB,EAAKmC,SAAS,CAACvB,yB,EAMrB0F,aAAe,WACb,EAAKnE,SAAS,CAACR,aAAa,K,EAG9B4E,oBAAsB,WAAO,IACrBtF,EAAuB,EAAK/B,MAA5B+B,mBACNA,EAAmBwB,KAAK,CACtBrL,KAAM,GACN+B,MAAO,GACPoM,UAAW,KAEb,EAAKpD,SAAS,CAAClB,wB,EAGjBuF,2BAA6B,SAAC9H,EAAM8D,GAAW,IACxCvB,EAAsB,EAAK/B,MAA3B+B,mBACLA,EAAmBuB,GAAOrJ,MAAQuF,EAClC,EAAKyD,SAAS,CAAClB,wB,EAGjBwF,gBAAkB,WAAO,IAClB1F,EAAY,EAAK7B,MAAjB6B,SACL,EAAKoB,SAAS,CAACpB,UAAWA,K,EAG5B2F,gBAAkB,SAAAf,GAGhB,IAFA,IAAIgB,EAAQhB,EAAE3H,OAAO2I,MAChBxH,EAAiB,EAAKD,MAAtBC,cACIyH,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAIhC,GAHKD,EAAMC,GAAGxP,KAAK0P,SAAS,UAC1B,EAAK3E,SAAS,CAACR,aAAa,EAAMnN,QAAS,mCAAoCoN,YAAa,YAE1F+E,EAAMC,GAAGxP,KAAK0P,SAAS,UAAYvD,WAAWoD,EAAMC,GAAGG,KAAO,KAAO,OAAS,GAClF,CACE,IAAIC,EAAW,CACbjC,KAAM4B,EAAMC,GACZK,QAASC,IAAIC,gBAAgBR,EAAMC,IACnCQ,SAAUT,EAAMC,GAAG5H,KACnBqI,KAAMC,MAASC,OAAO,wBAExBpI,EAAcsD,KAAKuE,GAGvB,EAAK7E,SAAS,CAAChD,mB,EAGjBqI,YAAc,SAAAhF,GAAU,IACjBrD,EAAiB,EAAKD,MAAtBC,cACMA,EAAcsI,QAAQjF,GAC7BA,GAAS,GACXrD,EAAcuI,OAAOlF,EAAO,GAC9B,EAAKL,SAAS,CAAChD,mB,EAGjBwI,cAAgB,SAAAnF,GAAU,IACnBrD,EAAiB,EAAKD,MAAtBC,cACCyI,EAAMzI,EAAcqD,GAAOyE,QAC3BY,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOJ,EACZC,EAAKI,aAAa,WAAY9I,EAAcqD,GAAO4E,UACnDU,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,S,EAGPC,YAAc,SAAA7F,GACZ,EAAKL,SAAS,CAACN,cAAc,EAAME,cAAeS,K,kEArR/B,IAAD,OAClBlM,cAAmB2O,MAAK,SAACC,GACvB,IAAIoD,EAAQpD,EAAIxG,KAAKzF,KAAI,SAAAuM,GAAI,MAAK,CAChCrM,MAAOqM,EAAKC,IACZzM,MAAOwM,EAAK+C,aAEd,EAAKpG,SAAS,CAAEb,aAAcgH,OAEhCpR,cAAsB+N,MAAK,SAACC,GAC1B,EAAK/C,SAAS,CAAEf,kBAAmB8D,EAAIxG,KAAKzF,KAAI,SAAAuM,GAAI,MAAK,CAACrM,MAAOqM,EAAKC,IAAKzM,MAAOwM,EAAKC,aAEzFpO,cAAgB4N,MAAK,SAACC,GACpB,EAAK/C,SAAS,CAAEZ,YAAa2D,EAAIxG,KAAKzF,KAAI,SAAAuM,GAAI,kCAAUA,GAAV,IAAgBrM,MAAOqM,EAAKC,IAAKzM,MAAOwM,EAAKxG,KAAMwJ,QAAShD,EAAK7G,SAAUC,GAAI4G,EAAK5G,GAAGG,qBAEvIpJ,cAAcsP,MAAK,SAACC,GAClB,EAAK/C,SAAS,CAAEX,UAAW0D,EAAIxG,KAAKzF,KAAI,SAAAuM,GAAI,kCAAUA,GAAV,IAAgBrM,MAAOqM,EAAKC,IAAKzM,MAAOwM,EAAKxG,YAAY,kBAGvGrH,cAAgBsN,MAAK,SAACC,GACpB,EAAK/C,SAAS,CAAEV,YAAayD,EAAIxG,KAAKzF,KAAI,SAAAuM,GAAI,kCAAUA,GAAV,IAAgBrM,MAAOqM,EAAKC,IAAKzM,MAAOwM,EAAKxG,KAAMJ,GAAI4G,EAAK5G,GAAGG,qBAE/G9G,cAAqBgN,MAAK,SAACC,GACzB,EAAK/C,SAAS,CAAET,iBAAkBwD,EAAIxG,KAAKzF,KAAI,SAAAuM,GAAI,kCAAUA,GAAV,IAAgBrM,MAAOqM,EAAKC,IAAKzM,MAAOwM,EAAKxG,iB,+BAkQ1F,IAAD,SA6CHyJ,KAAKvJ,MA3CPF,EAFK,EAELA,KACAI,EAHK,EAGLA,IACAC,EAJK,EAILA,IACAC,EALK,EAKLA,KACAG,EANK,EAMLA,YACAC,EAPK,EAOLA,iBACAE,EARK,EAQLA,aACAD,EATK,EASLA,qBACAyB,EAVK,EAULA,kBACAE,EAXK,EAWLA,aACA/B,EAZK,EAYLA,uBACAC,EAbK,EAaLA,qBACAK,EAdK,EAcLA,aACAC,EAfK,EAeLA,cACAC,EAhBK,EAgBLA,aACAC,EAjBK,EAiBLA,aACAC,EAlBK,EAkBLA,cACAC,EAnBK,EAmBLA,eACAC,EApBK,EAoBLA,cACAC,EArBK,EAqBLA,cACAmB,EAtBK,EAsBLA,YACAlB,GAvBK,EAuBLA,gBACAQ,GAxBK,EAwBLA,WACAW,GAzBK,EAyBLA,UACAlB,GA1BK,EA0BLA,cACAE,GA3BK,EA2BLA,SACAD,GA5BK,EA4BLA,YACAE,GA7BK,EA6BLA,MACAgB,GA9BK,EA8BLA,YACAC,GA/BK,EA+BLA,iBACAhB,GAhCK,EAgCLA,gBACAE,GAjCK,EAiCLA,gBACAD,GAlCK,EAkCLA,iBACAgB,GAnCK,EAmCLA,YACAnN,GApCK,EAoCLA,QACAoN,GArCK,EAqCLA,YACAX,GAtCK,EAsCLA,mBACAF,GAvCK,EAuCLA,SACA5B,GAxCK,EAwCLA,cACA6B,GAzCK,EAyCLA,WACAa,GA1CK,EA0CLA,aACAE,GA3CK,EA2CLA,cACAC,GA5CK,EA4CLA,QAEE0G,GAAM,EAGV,OACE,yBAAK5T,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAY6T,cAAe,CAAC,CAAE3J,KAAM,uBAEtC,kBAAC,IAAD,KACE,kBAAC,gBAAD,CACEjE,IAAI,OACJ6N,SAAUH,KAAKxG,aACf4G,QAAS,SAACC,GAAD,OAAY,OAErB,yBAAKhU,UAAU,sCACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,CACEsC,KAAK,SACL2R,SAAU/G,GACVlN,UAAU,OACVE,QAAQ,YACRS,MAAM,WALR,OAQGuM,IAAW,kBAAC,IAAD,CAAkBlN,UAAU,QAAQiS,KAAM,QAI5D,kBAAC,IAAD,CAAMiC,WAAS,EAACzU,QAAS,GACvB,kBAAC,IAAD,CAAMiR,MAAI,EAACyD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrC,kBAAC,IAAD,CACErI,UAAuB,IAAbA,GACVtD,SAAUgL,KAAKhC,iBAEf,kBAAC,IAAD,CACE4C,WAAY,kBAAC,IAAD,MACZC,gBAAc,mBACdjU,GAAG,mBAEH,kBAAC,IAAD,wCAEF,kBAAC,IAAD,KACI,yBAAKP,UAAU,cACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMkU,WAAS,EAACzU,QAAS,GACtB4K,GAAclG,KAAI,SAACuM,EAAMhD,GAAP,OACjB,kBAAC,IAAD,CAAMgD,MAAI,EAAC2D,GAAI,EAAGI,GAAI,EAAGL,GAAI,EAAGE,GAAI,GAAI7T,IAAKiN,GAC3C,kBAAC,IAAD,CAAM1N,UAAU,+BAA+B0U,UAAW,GACxD,yBAAK1U,UAAU,8BACb,yBAAK2U,IAAKjE,EAAKyB,QAASyC,IAAI,UAAUpN,MAAO,CAACqN,MAAO,OAAQrQ,OAAQ,QAASsQ,UAAW,WACzF,yBAAK9U,UAAU,kCACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,sBAGjB,yBAAKA,UAAU,gCACX,kBAAC,IAAD,CACEX,SAAS,QACTW,UAAU,kCACVY,QAAS,SAACiQ,GAAD,OAAO,EAAKgC,cAAcnF,KAHrC,kBAOA,kBAAC,IAAD,CACErO,SAAS,QACTW,UAAU,kCACVY,QAAS,SAACiQ,GAAD,OAAO,EAAK0C,YAAY7F,KAHnC,WAOA,kBAAC,IAAD,CACErO,SAAS,QACTW,UAAU,kCACVY,QAAS,SAACiQ,GAAD,OAAO,EAAK6B,YAAYhF,KAHnC,aAUR,yBAAK1N,UAAU,sCACb,uBAAGA,UAAU,OAAO0Q,EAAK6B,aAMnC,kBAAC,IAAD,CAAM2B,WAAS,EAACzU,QAAS,GACvB,kBAAC,IAAD,CAAMiR,MAAI,EAAC2D,GAAI,GAAID,GAAI,IACrB,2BAAOW,QAAQ,sBACb,kBAAC,IAAD,CACE/U,UAAU,aACVW,MAAM,UACN4G,UAAU,OACVrH,QAAQ,YAER,yBAAKF,UAAU,oBACb,kBAAC,IAAD,CAAMA,UAAU,QAAhB,gBACA,0DAIN,2BACEA,UAAU,eACV2I,SAAUgL,KAAK/B,gBACfrR,GAAG,qBACH+B,KAAK,OACL0S,OAAO,mCACPC,UAAQ,WAS1B,kBAAC,IAAD,CAAMvE,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,gBAAD,CACEtU,UAAU,cACVkE,MAAM,OACNyE,SAAUgL,KAAK5L,aACfzF,KAAK,OACL4H,KAAK,OACL7F,MAAO6F,EACPgL,WAAY,CAAC,YACbC,cAAe,CAAC,4BAElB,kBAAC,gBAAD,CACEnV,UAAU,cACVkE,MAAM,MACNyE,SAAUgL,KAAK5L,aACfzF,KAAK,OACL4H,KAAK,MACL7F,MAAOiG,EACP4K,WAAY,CAAC,YACbC,cAAe,CAAC,4BAElB,kBAAC,gBAAD,CACEnV,UAAU,cACVkE,MAAM,MACNyE,SAAUgL,KAAK5L,aACfzF,KAAK,OACL4H,KAAK,MACL7F,MAAOkG,EACP2K,WAAY,CAAC,YACbC,cAAe,CAAC,4BAElB,kBAAC,gBAAD,CACEnV,UAAU,cACVkE,MAAM,OACNyE,SAAUgL,KAAK5L,aACfzF,KAAK,OACL4H,KAAK,OACL7F,MAAOmG,EACP0K,WAAY,CAAC,YACbC,cAAe,CAAC,6BAGpB,kBAAC,IAAD,CAAMzE,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CAAO9M,MAAO,CAAC4N,OAAQ,qCACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,MAAM,SAASrV,UAAU,kBAClC,kBAAC,IAAD,CAAKiS,KAAK,QAAQtR,MAAM,UAAUD,aAAW,MAAME,QAAS+S,KAAKlC,qBAC/D,kBAAC,IAAD,cAGJ,kBAAC,IAAD,CAAW4D,MAAM,OAAOrV,UAAU,kBAAlC,wBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWqV,MAAM,UAAjB,QACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,WAGJ,kBAAC,IAAD,KAEIlJ,GAAmBhI,KAAI,SAACmR,EAAW5H,GACjC,OACI,kBAAC,IAAD,CAAUjN,IAAKiN,GACb,kBAAC,IAAD,CAAW1N,UAAU,SACnB,kBAAC,IAAD,CACEiI,eAAgB,CACdsN,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASmE,EACTvE,aAAc,SAAC6B,GAAD,OAAU,EAAK4G,kBAAkB5G,EAAM8D,IACrD1F,cAAesN,EAAUhT,QAG7B,kBAAC,IAAD,CAAWtC,UAAU,SACnB,kBAAC,IAAD,CACEiI,eAAgB,CACdsN,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASmN,EAAU7E,UACnB1I,aAAc,SAAC6B,GAAD,OAAU,EAAK8H,2BAA2B9H,EAAM8D,IAC9D1F,cAAesN,EAAUjR,gBAU7C,kBAAC,IAAD,CAAMqM,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CACErM,eAAgB,CACd/D,MAAO,kBACPqR,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASqE,EACTzE,aAAc,SAAC6B,GAAU,EAAKyD,SAAS,CAAC5C,uBAAwBb,KAChE5B,cAAeyC,KAGnB,kBAAC,IAAD,CAAMiG,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CACErM,eAAgB,CACd/D,MAAO,aACPqR,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASqE,EACTzE,aAAc,SAAC6B,GAAU,EAAKyD,SAAS,CAAC3C,qBAAsBd,KAC9D5B,cAAe0C,EACfxC,SAAS,KAGb,kBAAC,IAAD,CAAMwI,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CACEjQ,MAAOsG,EACP3K,UAAU,cACV2I,SAAU,SAACkI,GAAD,OAAO,EAAKxD,SAAS,CAC3B1C,YAAakG,EAAE3H,OAAO7E,SAE1B6F,KAAK,cACLhG,MAAM,eACNwC,WAAY,CACVX,eAAgB+C,MAItB,kBAAC,IAAD,CAAM4H,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CACEjQ,MAAO6H,GACPlM,UAAU,cACV2I,SAAUgL,KAAK5L,aACfmC,KAAK,aACLhG,MAAM,4BAIV,kBAAC,IAAD,CAAMwM,MAAI,EAACyD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrC,kBAAC,IAAD,CACEtU,UAAU,QACVqE,MAAOwH,GACP3B,KAAK,mBACLvB,SAAUgL,KAAK5L,aACf0N,KAAG,GAEH,kBAAC,IAAD,CACEpR,MAAM,SACNqR,QAAS,kBAAC,IAAD,CAAO/U,MAAM,cACtBuD,MAAM,sBACNyR,eAAe,QAEjB,kBAAC,IAAD,CACEzR,MAAM,2BACNwR,QAAS,kBAAC,IAAD,CAAO/U,MAAM,cACtB0D,MAAM,aACNsR,eAAe,QAEjB,kBAAC,IAAD,CACEzR,MAAM,qBACNwR,QAAS,kBAAC,IAAD,CAAO/U,MAAM,cACtB0D,MAAM,KACNsR,eAAe,UAIrB,kBAAC,IAAD,CAAMjF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CACEtU,UAAU,QACViI,eAAgB,CACd/D,MAAO,sBACPqR,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASyE,GACT7E,aAAc,SAAC6B,GAAU,EAAKyD,SAAS,CAACzC,iBAAkBhB,KAC1D5B,cAAe4C,KAGnB,kBAAC,IAAD,CAAM8F,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,SAC9C4K,GACC,kBAAC,IAAD,CACE1G,MAAM,KACN5B,KAAK,OACL+B,MAAOuG,EAAiBb,GACxB6L,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC1J,GACC,kBAAC,IAAD,CACE1G,MAAM,OACN5B,KAAK,OACL+B,MAAK,WAAMuG,EAAiBiL,MAC5BD,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC1J,GACC,kBAAC,IAAD,CACE1G,MAAM,KACN5B,KAAK,OACL+B,MAAOuG,EAAiBd,GAAGI,KAC3B0L,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CACEtU,UAAU,QACViI,eAAgB,CACd/D,MAAO,8BACPqR,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASyE,GACT7E,aAAc,SAAC6B,GAAU,EAAKyD,SAAS,CAACxC,qBAAsBjB,KAC9D5B,cAAe6C,KAGnB,kBAAC,IAAD,CAAM6F,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjCzJ,GACC,kBAAC,IAAD,CACE3G,MAAM,KACN5B,KAAK,OACL+B,MAAOwG,EAAqBd,GAC5B6L,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjCzJ,GACC,kBAAC,IAAD,CACE3G,MAAM,OACN5B,KAAK,OACL+B,MAAK,WAAMwG,EAAqBgL,MAChCD,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjCzJ,GACC,kBAAC,IAAD,CACE3G,MAAM,KACN5B,KAAK,OACL+B,MAAOwG,EAAqBf,GAAGI,KAC/B0L,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CACEtU,UAAU,QACViI,eAAgB,CACd/D,MAAO,qBACPqR,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASyE,GACT7E,aAAc,SAAC6B,GAAU,EAAKyD,SAAS,CAACvC,aAAclB,KACtD5B,cAAe8C,KAGnB,kBAAC,IAAD,CAAM4F,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjCxJ,GACC,kBAAC,IAAD,CACE5G,MAAM,KACN5B,KAAK,OACL+B,MAAOyG,EAAaf,GACpB6L,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjCxJ,GACC,kBAAC,IAAD,CACE5G,MAAM,OACN5B,KAAK,OACL+B,MAAK,WAAMyG,EAAa+K,MACxBD,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjCxJ,GACC,kBAAC,IAAD,CACE5G,MAAM,KACN5B,KAAK,OACL+B,MAAOyG,EAAahB,GAAGI,KACvB0L,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CAAO9M,MAAO,CAAC4N,OAAQ,qCACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWU,QAAS,EAAGT,MAAM,SAASrV,UAAU,kBAAhD,WAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAW8V,QAAS,EAAGT,MAAM,SAASrV,UAAU,yBAAhD,YAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWqV,MAAM,UAAjB,SACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,UACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,SACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,SAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWrV,UAAU,QAAQqV,MAAM,UAC/B,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKU,mBAAmBV,EAAG,iBAC5CnK,WAAY,CACVX,eAAgBwD,EAChBwM,IAAK,EACLvO,MAAO,CAAE8B,UAAW,WAEtBY,KAAK,eACL7F,MAAO0G,KAGf,kBAAC,IAAD,CAAW/K,UAAU,QAAQqV,MAAM,UAC/B,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKU,mBAAmBV,EAAG,kBAC5CnK,WAAY,CACVX,eAAgBwD,GAElBW,KAAK,gBACL7F,MAAO2G,KAGf,kBAAC,IAAD,CAAWhL,UAAU,QAAQqV,MAAM,UAC/B,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKU,mBAAmBV,EAAG,iBAC5CnK,WAAY,CACVX,eAAgBwD,GAElBW,KAAK,eACL7F,MAAO4G,KAGf,kBAAC,IAAD,CAAWjL,UAAU,QAAQqV,MAAM,UAC9B5G,WAAY1D,EAAeC,EAAgBC,EAAc,KAASyD,QAAQ,KAGnF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWoH,QAAS,EAAGT,MAAM,SAASrV,UAAU,mBAAhD,SAGA,kBAAC,IAAD,CAAW8V,QAAS,EAAGT,MAAM,SAASrV,UAAU,mBAAhD,SAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAW8V,QAAS,EAAG9V,UAAU,QAAQqV,MAAM,UAC3C,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKU,mBAAmBV,EAAG,iBAC5CnK,WAAY,CACVX,eAAgBsD,GAElBa,KAAK,eACL7F,MAAO6G,KAGf,kBAAC,IAAD,CAAW4K,QAAS,EAAG9V,UAAU,QAAQqV,MAAM,UAC1C5G,WAAWvD,EAAe,KAAMwD,QAAQ,KAGjD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWoH,QAAS,EAAGT,MAAM,SAASrV,UAAU,yCAAhD,aAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWqV,MAAM,SAASrV,UAAU,mBAApC,SAGA,kBAAC,IAAD,CAAWqV,MAAM,SAASrV,UAAU,mBAApC,UAGA,kBAAC,IAAD,CAAWqV,MAAM,SAASrV,UAAU,mBAApC,SAGA,kBAAC,IAAD,CAAWqV,MAAM,SAASrV,UAAU,mBAApC,QAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWA,UAAU,QAAQqV,MAAM,UAC/B,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKU,mBAAmBV,EAAG,kBAC5CnK,WAAY,CACVX,eAAgBwD,GAElBW,KAAK,gBACL7F,MAAO8G,KAGf,kBAAC,IAAD,CAAWnL,UAAU,QAAQqV,MAAM,UAC/B,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKU,mBAAmBV,EAAG,mBAC5CnK,WAAY,CACVX,eAAgBwD,GAElBW,KAAK,iBACL7F,MAAO+G,KAGf,kBAAC,IAAD,CAAWpL,UAAU,QAAQqV,MAAM,UAC/B,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKU,mBAAmBV,EAAG,kBAC5CnK,WAAY,CACVX,eAAgBwD,GAElBW,KAAK,gBACL7F,MAAOgH,KAGf,kBAAC,IAAD,CAAWrL,UAAU,QAAQqV,MAAM,UAChC5G,WAAYtD,EAAgBC,EAAiBC,EAAe,KAASqD,QAAQ,KAGpF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWoH,QAAS,EAAGT,MAAM,SAASrV,UAAU,mBAAhD,SAGA,kBAAC,IAAD,CAAW8V,QAAS,EAAGT,MAAM,SAASrV,UAAU,mBAAhD,SAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAW8V,QAAS,EAAG9V,UAAU,QAAQqV,MAAM,UAC3C,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKU,mBAAmBV,EAAG,kBAC5CnK,WAAY,CACVX,eAAgBsD,GAElBa,KAAK,gBACL7F,MAAOiH,KAGf,kBAAC,IAAD,CAAWwK,QAAS,EAAG9V,UAAU,QAAQqV,MAAM,UAC5C5G,WAAWnD,EAAgB,KAAMoD,QAAQ,QAM1D,kBAAC,IAAD,CAAMgC,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACnC,kBAAC,IAAD,CAAO9M,MAAO,CAAC4N,OAAQ,qCACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWU,QAAS,EAAGT,MAAM,SAASrV,UAAU,kBAAhD,YAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAW8V,QAAS,EAAGT,MAAM,SAASrV,UAAU,yBAAhD,YAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWqV,MAAM,UAAjB,SACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,UACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,SACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,SAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWrV,UAAU,QAAQqV,MAAM,UAChC5G,WAA0B,QAAf1D,GAAyB2D,QAAQ,GAD/C,WAGA,kBAAC,IAAD,CAAW1O,UAAU,QAAQqV,MAAM,UAChC5G,WAA2B,QAAhBzD,GAA0B0D,QAAQ,GADhD,WAGA,kBAAC,IAAD,CAAW1O,UAAU,QAAQqV,MAAM,UAChC5G,WAA0B,QAAfxD,GAAyByD,QAAQ,GAD/C,WAGA,kBAAC,IAAD,CAAW1O,UAAU,QAAQqV,MAAM,UAChC5G,WAA2B,QAAf1D,EAA0BC,EAAgB,QAAWC,EAAe,QAAU,MAAMyD,QAAQ,KAG/G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWoH,QAAS,EAAGT,MAAM,SAASrV,UAAU,mBAAhD,UAGA,kBAAC,IAAD,CAAW8V,QAAS,EAAGT,MAAM,SAASrV,UAAU,mBAAhD,WAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAW8V,QAAS,EAAG9V,UAAU,QAAQqV,MAAM,UAC5C5G,WAA0B,MAAfvD,GAAuBwD,QAAQ,IAE7C,kBAAC,IAAD,CAAWoH,QAAS,EAAG9V,UAAU,QAAQqV,MAAM,UAC5C5G,WAAWvD,EAAe,IAAO,SAASwD,QAAQ,KAGzD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWoH,QAAS,EAAGT,MAAM,SAASrV,UAAU,yCAAhD,aAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWqV,MAAM,SAASrV,UAAU,mBAApC,SAGA,kBAAC,IAAD,CAAWqV,MAAM,SAASrV,UAAU,mBAApC,UAGA,kBAAC,IAAD,CAAWqV,MAAM,SAASrV,UAAU,mBAApC,SAGA,kBAAC,IAAD,CAAWqV,MAAM,SAASrV,UAAU,mBAApC,QAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWA,UAAU,QAAQqV,MAAM,UAChC5G,WAA2B,QAAhBtD,GAA0BuD,QAAQ,GADhD,WAGA,kBAAC,IAAD,CAAW1O,UAAU,QAAQqV,MAAM,UAChC5G,WAA4B,QAAjBrD,GAA2BsD,QAAQ,GADjD,WAGA,kBAAC,IAAD,CAAW1O,UAAU,QAAQqV,MAAM,UAChC5G,WAA2B,QAAhBpD,GAA0BqD,QAAQ,GADhD,WAGA,kBAAC,IAAD,CAAW1O,UAAU,QAAQqV,MAAM,UAChC5G,WAA4B,QAAhBtD,EAA2BC,EAAiB,QAAWC,EAAgB,QAAU,MAAMqD,QAAQ,KAGlH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWoH,QAAS,EAAGT,MAAM,SAASrV,UAAU,mBAAhD,UAGA,kBAAC,IAAD,CAAW8V,QAAS,EAAGT,MAAM,SAASrV,UAAU,mBAAhD,WAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAW8V,QAAS,EAAG9V,UAAU,QAAQqV,MAAM,UAC5C5G,WAA2B,MAAhBnD,GAAwBoD,QAAQ,IAE9C,kBAAC,IAAD,CAAWoH,QAAS,EAAG9V,UAAU,QAAQqV,MAAM,UAC5C5G,WAAWnD,EAAgB,IAAO,SAASoD,QAAQ,QAQpE,kBAAC,IAAD,CAAMgC,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CACErM,eAAgB,CACd/D,MAAO,UACPqR,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASsE,EACTzE,cAAeuD,GACfxD,aAAc4L,KAAKtC,uBAGvB,kBAAC,IAAD,CAAMX,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAE7CuL,IACE,kBAAC,IAAD,CACErH,MAAM,KACN5B,KAAK,OACL4H,KAAK,KACL7F,MAAOkH,GAAgBxB,GACvB6L,UAAQ,KAKhB,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAE7CuL,IACE,kBAAC,IAAD,CACEjJ,KAAK,OACL4B,MAAM,MACNgG,KAAK,aACL7F,MAAO0H,GACP6J,UAAQ,KAKhB,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAE7CuL,IACE,kBAAC,IAAD,CACErH,MAAM,OACN5B,KAAK,OACL4H,KAAK,OACL7F,MAAK,WAAMkH,GAAgBmI,SAC3BkC,UAAQ,KAKhB,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAC9CuL,IACC,kBAAC,IAAD,CACErH,MAAM,KACN5B,KAAK,OACL+B,MAAOkH,GAAgBzB,GACvB8L,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAC9CuL,IACC,kBAAC,IAAD,CACErH,MAAM,WACN5B,KAAK,OACL+B,MAAO,KAAOoK,WAAWlD,GAAgBmI,QAAU3H,IAAY2C,QAAQ,GACvEkH,UAAQ,KAMd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAClC,kBAAC,IAAD,CACErM,eAAgB,CACd/D,MAAO,UACPqR,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEf6C,QAASwE,GACT3E,cAAe4D,GACf7D,aAAc4L,KAAKrC,uBAGvB,kBAAC,IAAD,CAAMZ,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAE7C4L,IACE,kBAAC,IAAD,CACE1H,MAAM,KACN5B,KAAK,OACL4H,KAAK,KACL7F,MAAOuH,GAAgB7B,GACvB6L,UAAQ,KAKhB,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAE7C4L,IACE,kBAAC,IAAD,CACE1H,MAAM,WACN5B,KAAK,SACL4H,KAAK,kBACL7F,MAAOyH,GACP8J,UAAQ,KAKhB,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAE7C4L,IACE,kBAAC,IAAD,CACE1H,MAAM,OACN5B,KAAK,OACL4H,KAAK,OACL7F,MAAK,WAAMuH,GAAgBiK,MAC3BD,UAAQ,KAKhB,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAC9C4L,IACC,kBAAC,IAAD,CACE1H,MAAM,KACN5B,KAAK,OACL+B,MAAOuH,GAAgB9B,GACvB8L,UAAQ,KAGd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtU,UAAU,eAC9C4L,IACC,kBAAC,IAAD,CACE1H,MAAM,WACN5B,KAAK,OACL+B,MAAO,KAAOoK,WAAW7C,GAAgBiK,KAAO/J,IAAiB4C,QAAQ,GACzEkH,UAAQ,KAKd,kBAAC,IAAD,CAAMlF,MAAI,EAACyD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrC,kBAAC,IAAD,CACIpQ,MAAM,QACNuC,WAAS,EACTuP,WAAW,EACXC,KAAM,EACN/L,KAAK,QACLvB,SAAUgL,KAAK5L,aACf1D,MAAOsH,MAGb,kBAAC,IAAD,CAAM+E,MAAI,EAACyD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrC,yBAAKtU,UAAU,sBAAsBwH,MAAO,CAAC0O,cAAe,UAC1D,kBAAC,IAAD,CAAO1O,MAAO,CAAC4N,OAAQ,mCAAoCe,WAAY,QACnE,kCACI,yBAAK3O,MAAO,CAACqN,MAAM,WACnB,yBAAKrN,MAAO,CAACqN,MAAM,WACnB,yBAAKrN,MAAO,CAACqN,MAAM,WACnB,yBAAKrN,MAAO,CAACqN,MAAM,WACnB,yBAAKrN,MAAO,CAACqN,MAAM,WACnB,yBAAKrN,MAAO,CAACqN,MAAM,UACnB,yBAAKrN,MAAO,CAACqN,MAAM,UACnB,yBAAKrN,MAAO,CAACqN,MAAM,YAEvB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWiB,QAAS,EAAGT,MAAM,SAASrV,UAAU,kBAC9C,kBAAC,IAAD,CAAKW,MAAM,UAAUD,aAAW,MAAME,QAAS+S,KAAKvC,YAClD,kBAAC,IAAD,cAGJ,kBAAC,IAAD,CAAW0E,QAAS,EAAGT,MAAM,SAASrV,UAAU,kBAAhD,UAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAW8V,QAAS,EAAGT,MAAM,SAA7B,QAGA,kBAAC,IAAD,CAAWS,QAAS,GAEhBtK,GAAcrH,KAAI,SAACsJ,EAAMC,GACnBD,GAAQA,EAAK5D,UAAY6B,GAASgC,KACpCkG,IAAOnF,WAAWhB,EAAK5D,UAAY4E,WAAW/C,GAASgC,QAJ/D,KAOKkG,KAGT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWyB,MAAM,UAAjB,WACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,QACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,QACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,oBACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,MACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,UACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,OACA,kBAAC,IAAD,CAAWA,MAAM,UAAjB,WAGR,kBAAC,IAAD,KAEI5J,IAAeA,GAAYtH,KAAI,SAACiS,EAAQ1I,GACtC,OACE,kBAAC,IAAD,CAAUjN,IAAKiN,GACb,kBAAC,IAAD,CAAW1N,UAAU,QAAQqV,MAAM,UACjC,kBAAC,gBAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKD,kBAAkBC,EAAGnD,IAC3CpL,KAAK,OACLsT,UAAQ,EACRvR,MAAO+R,EACPzP,WAAY,CAACoP,IAAK,EAAGvO,MAAO,CAAE8B,UAAW,cAG/C,kBAAC,IAAD,CAAW+L,MAAM,SAAS9N,UAAU,KAAK8O,MAAM,MAAMrW,UAAU,SAC7D,kBAAC,IAAD,CACEiI,eAAgB,CACdsN,gBAAiB,CACfR,QAAS,sBACTS,QAAQ,GAEVlQ,YAAa,IAEfuD,gBAAkBY,GAClB1B,aAAc,SAAC6B,GAAD,OAAU,EAAKsH,kBAAkBtH,EAAM8D,IACrD1F,cAAewD,GAAckC,IAAUlC,GAAckC,GACrDvF,QAASuE,MAGf,kBAAC,IAAD,CAAW1M,UAAU,QAAQqV,MAAM,UAChC7J,GAAckC,IAAUlC,GAAckC,GAAOpL,KAAK4H,MAErD,kBAAC,IAAD,CAAWlK,UAAU,QAAQqV,MAAM,UAChC7J,GAAckC,IAAUlC,GAAckC,GAAO1D,YAAYsM,SAE5D,kBAAC,IAAD,CAAWtW,UAAU,QAAQqV,MAAM,UAChC7J,GAAckC,IAAUlC,GAAckC,GAAO5D,GAAGG,YAEnD,kBAAC,IAAD,CAAWjK,UAAU,QAAQqV,MAAM,UAAnC,KACK7J,GAAckC,IAAUlC,GAAckC,GAAO7D,UAElD,kBAAC,IAAD,CAAW7J,UAAU,QAAQqV,MAAM,UACjC,kBAAC,IAAD,CACI1M,SAAU,SAACkI,GAAD,OAAO,EAAKM,qBAAqBN,EAAGnD,IAC9ChH,WAAY,CACVX,eAAgBsD,GAElBa,KAAK,eACL7F,MAAOqH,GAASgC,MAGtB,kBAAC,IAAD,CAAW1N,UAAU,QAAQqV,MAAM,UAAnC,KACK7J,GAAckC,IAAUe,WAAW/C,GAASgC,GAASlC,GAAckC,GAAO7D,UAAU6E,QAAQ,cAcrH,kBAAC,IAAD,CACE6H,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,KAAM7J,GACN8J,iBAAkB,IAClB1W,QAAS0T,KAAKnC,cAEd,kBAAC,IAAD,CACEvR,QAAS0T,KAAKnC,aACdtR,QAAS4M,GACTpN,QAASA,MAGXqN,IAAgB1C,IAChB,kBAAC,IAAD,CACEuM,QAASvM,GAAc4C,IAAekF,QACtC0E,QAASxM,IAAe4C,GAAgB,GAAK5C,GAAc0H,QAAQI,QACnE2E,QAASzM,IAAe4C,GAAgB5C,GAAc0H,OAAS,GAAK1H,GAAc0H,QAAQI,QAC1F4E,eAAgB,kBAAM,EAAK1J,SAAS,CAAEN,cAAc,KACpDiK,kBAAmB,kBACjB,EAAK3J,SAAS,CACZJ,eAAgBA,GAAgB5C,GAAc0H,OAAS,GAAK1H,GAAc0H,UAG9EkF,kBAAmB,kBACjB,EAAK5J,SAAS,CACZJ,eAAgBA,GAAgB,GAAK5C,GAAc0H,kB,GAj2CzCmF,aA42Cb/M","file":"static/js/14.d43588fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n  };\r\n  \r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600]\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700]\r\n    },\r\n    icon: {\r\n        fontSize: 20\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    message: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n    <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n            </span>\r\n        }\r\n        action={[\r\n            <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            >\r\n            <CloseIcon className={classes.icon} />\r\n            </IconButton>\r\n        ]}\r\n        {...other}\r\n    />);\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllParts = () => {\r\n  return axios.get(\"/api/parts/list\");\r\n};\r\nexport const getPartsById = id => {\r\n  return axios.get(`/api/parts/get?_id=${id}`);\r\n};\r\nexport const deleteParts = id => {\r\n  return axios.post(`/api/parts/delete?_id=${id}`);\r\n};\r\nexport const addNewParts = NewParts => {\r\n  return axios.post(\"/api/parts/add\", NewParts);\r\n};\r\nexport const updateParts = NewParts => {\r\n  return axios.post(\"/api/parts/update\", NewParts);\r\n};\r\nexport const updatePartsList = PartsList => {\r\n  return axios.post(\"/api/parts/update-list\", PartsList);\r\n}","import axios from \"axios\";\r\n\r\nexport const getAllCategories = () => {\r\n  return axios.get(\"/api/product-category/list\");\r\n};\r\nexport const getCategoryById = id => {\r\n  return axios.get(`/api/product-category/get?uid=${id}`);\r\n};\r\nexport const deleteCategory = id => {\r\n  return axios.post(`/api/product-category/delete?uid=${id}`);\r\n};\r\nexport const addNewCategory = NewCategory => {\r\n  return axios.post(\"/api/product-category/add\", NewCategory);\r\n};\r\nexport const updateCategory = NewCategory => {\r\n  return axios.post(\"/api/product-category/update\", NewCategory);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllVariation = () => {\r\n  return axios.get(\"/api/product-variation/list\");\r\n};\r\nexport const getVariationById = id => {\r\n  return axios.get(`/api/product-variation/get?_id=${id}`);\r\n};\r\nexport const deleteVariation = id => {\r\n  return axios.post(`/api/product-variation/delete?_id=${id}`);\r\n};\r\nexport const addNewVariation = NewVariation => {\r\n  return axios.post(\"/api/product-variation/add\", NewVariation);\r\n};\r\nexport const updateVariation = NewVariation => {\r\n  return axios.post(\"/api/product-variation/update\", NewVariation);\r\n};\r\nexport const getAllVariationType = () => {\r\n  return axios.get(\"/api/product-variation/type_list\");\r\n}\r\nexport const getAllVariationValue = (type) => {\r\n  return axios.get(`/api/product-variation/value_list?type=${type}`);\r\n}","import axios from \"axios\";\r\n\r\nexport const getAllFreight = () => {\r\n  return axios.get(\"/api/freight/list\");\r\n};\r\nexport const getFreightById = id => {\r\n  return axios.get(`/api/freight/get?_id=${id}`);\r\n};\r\nexport const deleteFreight = id => {\r\n  return axios.post(`/api/freight/delete?_id=${id}`);\r\n};\r\nexport const addNewFreight = NewFreight => {\r\n  return axios.post(\"/api/freight/add\", NewFreight);\r\n};\r\nexport const updateFreight = NewFreight => {\r\n  return axios.post(\"/api/freight/update\", NewFreight);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllStorage = () => {\r\n  return axios.get(\"/api/storage/list\");\r\n};\r\nexport const getStorageById = id => {\r\n  return axios.get(`/api/storage/get?_id=${id}`);\r\n};\r\nexport const deleteStorage = id => {\r\n  return axios.post(`/api/storage/delete?_id=${id}`);\r\n};\r\nexport const addNewStorage = NewStorage => {\r\n  return axios.post(\"/api/storage/add\", NewStorage);\r\n};\r\nexport const updateStorage = NewStorage => {\r\n  return axios.post(\"/api/storage/update\", NewStorage);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllFullfillment = () => {\r\n  return axios.get(\"/api/fullfillment/list\");\r\n};\r\nexport const getFullfillmentById = id => {\r\n  return axios.get(`/api/fullfillment/get?_id=${id}`);\r\n};\r\nexport const deleteFullfillment = id => {\r\n  return axios.post(`/api/fullfillment/delete?_id=${id}`);\r\n};\r\nexport const addNewFullfillment = NewFullfillment => {\r\n  return axios.post(\"/api/fullfillment/add\", NewFullfillment);\r\n};\r\nexport const updateFullfillment = NewFullfillment => {\r\n  return axios.post(\"/api/fullfillment/update\", NewFullfillment);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllProducts = () => {\r\n  return axios.get(\"/api/products/list\");\r\n};\r\nexport const getProductById = id => {\r\n  return axios.get(`/api/products/get?_id=${id}`);\r\n};\r\nexport const deleteProduct = id => {\r\n  return axios.post(`/api/products/delete?_id=${id}`);\r\n};\r\nexport const addNewProduct = (newFormData, config) => {\r\n  return axios.post(\"/api/products/add\", newFormData, config);\r\n};\r\nexport const updateProduct = NewProduct => {\r\n  return axios.post(\"/api/products/update\", NewProduct);\r\n};","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst suggestions = [\r\n  { label: \"Afghanistan\" },\r\n  { label: \"Aland Islands\" },\r\n  { label: \"Albania\" },\r\n  { label: \"Algeria\" },\r\n  { label: \"American Samoa\" },\r\n  { label: \"Andorra\" },\r\n  { label: \"Angola\" },\r\n  { label: \"Anguilla\" },\r\n  { label: \"Antarctica\" },\r\n  { label: \"Antigua and Barbuda\" },\r\n  { label: \"Argentina\" },\r\n  { label: \"Armenia\" },\r\n  { label: \"Aruba\" },\r\n  { label: \"Australia\" },\r\n  { label: \"Austria\" },\r\n  { label: \"Azerbaijan\" },\r\n  { label: \"Bahamas\" },\r\n  { label: \"Bahrain\" },\r\n  { label: \"Bangladesh\" },\r\n  { label: \"Barbados\" },\r\n  { label: \"Belarus\" },\r\n  { label: \"Belgium\" },\r\n  { label: \"Belize\" },\r\n  { label: \"Benin\" },\r\n  { label: \"Bermuda\" },\r\n  { label: \"Bhutan\" },\r\n  { label: \"Bolivia, Plurinational State of\" },\r\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\r\n  { label: \"Bosnia and Herzegovina\" },\r\n  { label: \"Botswana\" },\r\n  { label: \"Bouvet Island\" },\r\n  { label: \"Brazil\" },\r\n  { label: \"British Indian Ocean Territory\" },\r\n  { label: \"Brunei Darussalam\" }\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label\r\n}));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nexport default function CustomSelect({handleChange, selectedValue, textFieldProps, isMulti, options}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          options={options}\r\n          components={components}\r\n          TextFieldProps={textFieldProps}\r\n          value={selectedValue}\r\n          onChange={handleChange}\r\n          isMulti={isMulti}\r\n        />\r\n      </NoSsr>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nexport default function CustomOptionSelect({handleChange, selectedValue, textFieldProps, isMulti, options, optionComponent}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n  \r\n    const components = {\r\n        Control,\r\n        Menu,\r\n        MultiValue,\r\n        NoOptionsMessage,\r\n        Placeholder,\r\n        SingleValue,\r\n        ValueContainer,\r\n        Option: optionComponent,\r\n    };\r\n\r\n\r\n  return (\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          options={options}\r\n          components={components}\r\n          TextFieldProps={textFieldProps}\r\n          value={selectedValue}\r\n          onChange={handleChange}\r\n          isMulti={isMulti}\r\n        />\r\n      </NoSsr>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Fab,\r\n  Button,\r\n  Icon,\r\n  Card,\r\n  Grid,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Radio\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Breadcrumb, SimpleCard } from \"egret\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport CustomOptionSelect from \"./CustomOptionSelect\";\r\nimport { getAllCategories } from \"../product_category/CategoryService\";\r\nimport { getAllVariationType, getAllVariationValue } from \"../product_variation/VariationService\";\r\nimport { getAllFreight } from \"../freight/FreightService\";\r\nimport { getAllParts } from \"../parts/PartsService\";\r\nimport { addNewProduct } from \"../product/ProductService\"\r\nimport NumberFormat from \"react-number-format\";\r\nimport { generateRandomId } from \"utils\";\r\nimport { getAllStorage } from \"../storage/StorageService\";\r\nimport { getAllFullfillment } from \"../fullfillment/FullfillmentService\";\r\nimport MySnackbarContentWrapper from \"../../components/Snackbar/Snackbar\";\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport moment from 'moment';\r\n\r\nfunction NumberFormatPrefixCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value\r\n          }\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      style={{textAlign: 'center'}}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value\r\n          }\r\n        });\r\n      }}\r\n      thousandSeparator\r\n    />\r\n  );\r\n}\r\n\r\nfunction NumberWithCM(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      style={{textAlign: 'center'}}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value\r\n          }\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      suffix=\"cm\"\r\n    />\r\n  );\r\n}\r\n\r\n\r\nconst CustomOption = (option) =>\r\n\r\n    <div {...option.innerProps}>{\r\n        partsFormat(option.data)\r\n    }{/* your component internals */}</div>\r\n\r\n\r\nconst partsFormat = ({ label, value, cost_usd, UM, ID, supplier_id }) => {\r\n  return <MenuItem>\r\n    <div className=\"w-100\">\r\n      <div className='flex flex-middle flex-wrap w-100'>\r\n        <p className=\"mr-10\"><span className=\"font-weight-500\">ID: </span>{ID}</p>\r\n        <p className=\"mr-10\"><span className=\"font-weight-500\">UM: </span>{UM.short_name}</p>\r\n        <p className=\"\"><span className=\"font-weight-500\">COST: </span>${cost_usd}</p>\r\n      </div>\r\n      <div className=\"flex flex-middle flex-wap w-100\">\r\n        <p><span className=\"font-weight-500\">Name: </span>{label}</p>\r\n      </div>\r\n      <div className=\"flex flex-middle flex-wap w-100\">\r\n        <p><span className=\"font-weight-500\">Supplier Name: </span>{supplier_id.name}</p>\r\n      </div>\r\n    </div>\r\n  </MenuItem>\r\n}\r\n\r\n\r\nclass AddNewProduct extends Component {\r\n  state = {\r\n    productImages: [],\r\n    name: \"\",\r\n    SKU: \"\",\r\n    UPC: \"\",\r\n    ASIN: \"\",\r\n    selectedParentCategory: \"\",\r\n    selectedCategoryList: [],\r\n    retailPrice: 0,\r\n    selectedFFAmazon: null,\r\n    selectedFFThirdParty: null,\r\n    selectedFFUs: null,\r\n    productWidth: 0,\r\n    productHeight: 0,\r\n    productDepth: 0,\r\n    productGrams: 0,\r\n    packagedWidth: 0,\r\n    packagedHeight: 0,\r\n    packagedDepth: 0,\r\n    packagedGrams: 0,\r\n    selectedFreight: null,\r\n    selectedParts: [],\r\n    partsIDCode: [],\r\n    partsQty: [],\r\n    notes: \"\",\r\n    selectedStorage: null,\r\n    fullfillmentType: \"Amazon\",\r\n    storageDuration: 0,\r\n    freightQty: 0,\r\n    storageQty: 0,\r\n    expanded: false,\r\n    squareFeet: \"\",\r\n\r\n    variationQualities: [],\r\n    selectedVariationType: [],\r\n    selectedVariationValue: [],\r\n    variationTypeList: [],\r\n    variationValueList: [],\r\n    categoryList: [],\r\n    freightList: [],\r\n    partsList: [],\r\n    storageList: [],\r\n    fullfillmentList: [],\r\n    messageOpen: false,\r\n    message: \"\",\r\n    messageType: \"success\",\r\n    lightboxOpen: false,\r\n    lightboxImages: [],\r\n    lightboxIndex: 0,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    getAllCategories().then((res) => {\r\n      let items = res.data.map(item => ({\r\n        value: item._id,\r\n        label: item.category,\r\n      }));\r\n      this.setState({ categoryList: items });\r\n    });\r\n    getAllVariationType().then((res) => {\r\n      this.setState({ variationTypeList: res.data.map(item => ({value: item._id, label: item._id})) });\r\n    });\r\n    getAllFreight().then((res) => {\r\n      this.setState({ freightList: res.data.map(item => ({ ...item, value: item._id, label: item.name, costUSD: item.cost_usd, UM: item.UM.short_name})) });\r\n    });\r\n    getAllParts().then((res) => {\r\n      this.setState({ partsList: res.data.map(item => ({ ...item, value: item._id, label: item.name })) }, () => {\r\n      });\r\n    });\r\n    getAllStorage().then((res) => {\r\n      this.setState({ storageList: res.data.map(item => ({ ...item, value: item._id, label: item.name, UM: item.UM.short_name })) });\r\n    });\r\n    getAllFullfillment().then((res) => {\r\n      this.setState({ fullfillmentList: res.data.map(item => ({ ...item, value: item._id, label: item.name })) });\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    this.setState({loading: true});\r\n    let fulfillmentFBAFee = this.state.selectedFFAmazon.value;\r\n    if (this.state.fullfillmentType == 'ThirdPary')\r\n      fulfillmentFBAFee = this.state.selectedFFThirdParty.value;\r\n    else if (this.state.fullfillmentType == 'US')\r\n      fulfillmentFBAFee = this.state.selectedFFUs.value;\r\n    let parts = [];\r\n    let parts_qty = [];\r\n    this.state.selectedParts.map((part, index) => {\r\n      if (part && part.value && this.state.partsQty[index] != 0) {\r\n        parts.push(part.value);\r\n        parts_qty.push(this.state.partsQty[index])\r\n      }\r\n    });\r\n\r\n    let variation_qualities = [];\r\n    this.state.variationQualities.map((v) => {\r\n      if (v.type && v.value)\r\n        variation_qualities.push({\r\n          type: v.type.value,\r\n          value: v.value.value,\r\n        });\r\n    });\r\n\r\n    const newProduct = {\r\n      ID: 'P' + generateRandomId(),\r\n      name: this.state.name,\r\n      sku: this.state.SKU,\r\n      upc: this.state.UPC,\r\n      asin: this.state.ASIN,\r\n      variation_qualities: JSON.stringify(variation_qualities),\r\n      parent_category: this.state.selectedParentCategory.value,\r\n      categories: this.state.selectedCategoryList.map(a => a.value),\r\n      retail_price: parseFloat(this.state.retailPrice).toFixed(2),\r\n      square_feet: this.state.squareFeet,\r\n      fullfillment_amazon: this.state.selectedFFAmazon.value,\r\n      fullfillment_thirdparty: this.state.selectedFFThirdParty.value,\r\n      fullfillment_us: this.state.selectedFFUs.value,\r\n      product_width: this.state.productWidth,\r\n      product_height: this.state.productHeight,\r\n      product_depth: this.state.productDepth,\r\n      product_grams: this.state.productGrams,\r\n      packaged_width: this.state.packagedWidth,\r\n      packaged_height: this.state.packagedHeight,\r\n      packaged_depth: this.state.packagedDepth,\r\n      packaged_grams: this.state.packagedGrams,\r\n      freight: this.state.selectedFreight.value,\r\n      freight_qty: this.state.freightQty,\r\n      storage: this.state.selectedStorage.value,\r\n      storage_duration: this.state.storageDuration,\r\n      notes: this.state.notes,\r\n      parts: parts,\r\n      parts_qty: parts_qty,\r\n      fullfillment_fba_fee: fulfillmentFBAFee,\r\n      fullfillment_type: this.state.fullfillmentType,\r\n    };\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n    };\r\n    const formData = new FormData();\r\n    this.state.productImages.map((image) => {\r\n      formData.append('files', image.file);\r\n    });\r\n    formData.append('new_product', JSON.stringify(newProduct));\r\n    addNewProduct(formData, config).then((res) => {\r\n      this.setState({loading: false});\r\n      this.setState({messageType: \"success\", messageOpen: true, message: \"You added the product successfully!\"}, () => {\r\n      });\r\n    }).catch((err) => {\r\n      this.setState({loading: false});\r\n      this.setState({messageType: \"warning\", messageOpen: true, message: \"Something went wrong! please refresh and try again.\"}, () => {\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.persist();\r\n    this.setState({\r\n    [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectVType = (data, index) => {\r\n    getAllVariationValue(data.value).then((res) => {\r\n      let { variationQualities } = this.state;\r\n      variationQualities[index].type = data;\r\n      variationQualities[index].value = \"\";\r\n      variationQualities[index].valueList = res.data.map(item => ({value: item._id, label: item._id}));\r\n      this.setState({variationQualities});\r\n    });\r\n  }\r\n\r\n  handleSearchParts = (e, index) => {\r\n    e.persist();\r\n    let {partsIDCode, selectedParts} = this.state;\r\n    partsIDCode[index] = e.target.value;\r\n    let obj = this.state.partsList.find(o => o.ID === e.target.value.toUpperCase());\r\n    if (obj)\r\n      selectedParts[index] = obj;\r\n    else\r\n      selectedParts[index] = null;\r\n    this.setState({selectedParts: selectedParts, partsIDCode: partsIDCode});\r\n  }\r\n\r\n  handleSelectParts = (data, index) => {\r\n    let {partsIDCode, selectedParts} = this.state;\r\n    partsIDCode[index] = data.ID;\r\n    selectedParts[index] = data;\r\n    this.setState({selectedParts: selectedParts, partsIDCode: partsIDCode});\r\n  }\r\n\r\n  handleChangePartsQty = (e, index) => {\r\n    let {partsQty} = this.state;\r\n    partsQty[index] = e.target.value;\r\n    this.setState({partsQty});\r\n  }\r\n  \r\n  addNewPart = () => {\r\n    let { selectedParts, partsIDCode, partsQty } = this.state;\r\n    partsIDCode.push(\"\");\r\n    selectedParts.push(null);\r\n    partsQty.push(0);\r\n    this.setState({partsIDCode, selectedParts, partsQty});\r\n  }\r\n\r\n  handleSelectFreight = (data) => {\r\n    let freightQty = 0;\r\n    if (data.UM == 'CBM')\r\n      freightQty = parseFloat(this.state.packagedWidth * this.state.packagedHeight * this.state.packagedDepth / 1000000);\r\n    else if (data.UM == 'KG')\r\n      freightQty = parseFloat(this.state.packagedGrams / 1000);\r\n    else if (data.UM == 'LB')\r\n      freightQty = parseFloat(this.state.packagedGrams / 1000 * 2.20462);\r\n    else\r\n      freightQty = 0;\r\n    this.setState({freightQty: freightQty, selectedFreight: data});\r\n  }\r\n  \r\n  handleSelectStorage = (data) => {\r\n    let storageDuration = 0;\r\n    if (data.UM == 'CBM')\r\n      storageDuration = parseFloat(this.state.packagedWidth * this.state.packagedHeight * this.state.packagedDepth / 1000000);\r\n    else if (data.UM == 'KG')\r\n      storageDuration = parseFloat(this.state.packagedGrams / 1000);\r\n    else if (data.UM == 'LB')\r\n      storageDuration = parseFloat(this.state.packagedGrams / 1000 * 2.20462);\r\n    else\r\n      storageDuration = 0;\r\n    this.setState({storageDuration: storageDuration, selectedStorage: data});\r\n  }\r\n  \r\n  handleChangeMetric = (e, name) => {\r\n    this.setState({\r\n      [name]: e.target.value\r\n    }, () => {\r\n      let freightQty = 0;\r\n      let storageDuration = 0;\r\n      if (this.state.selectedFreight) {\r\n        if (this.state.selectedFreight.UM == 'CBM')\r\n          freightQty = parseFloat(this.state.packagedWidth * this.state.packagedHeight * this.state.packagedDepth / 1000000);\r\n        else if (this.state.selectedFreight.UM == 'KG')\r\n          freightQty = parseFloat(this.state.packagedGrams / 1000);\r\n        else if (this.state.selectedFreight.UM == 'LB')\r\n          freightQty = parseFloat(this.state.packagedGrams / 1000 * 2.20462);\r\n        else\r\n          freightQty = 0;\r\n        this.setState({freightQty});\r\n      }\r\n      if (this.state.selectedStorage) {\r\n        if (this.state.selectedStorage.UM == 'CBM')\r\n          storageDuration = parseFloat(this.state.packagedWidth * this.state.packagedHeight * this.state.packagedDepth / 1000000);\r\n        else if (this.state.selectedStorage.UM == 'KG')\r\n          storageDuration = parseFloat(this.state.packagedGrams / 1000);\r\n        else if (this.state.selectedStorage.UM == 'LB')\r\n          storageDuration = parseFloat(this.state.productGrams / 1000 * 2.20462);\r\n        else\r\n          storageDuration = 0;\r\n        this.setState({storageDuration});\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  closeMessage = () => {\r\n    this.setState({messageOpen: false});\r\n  }\r\n\r\n  addNewVariationList = () => {\r\n    let { variationQualities } = this.state;\r\n    variationQualities.push({\r\n      type: \"\",\r\n      value: \"\",\r\n      valueList: [],\r\n    });\r\n    this.setState({variationQualities});\r\n  }\r\n\r\n  handleSelectVariationValue = (data, index) => {\r\n    let {variationQualities} = this.state;\r\n    variationQualities[index].value = data;\r\n    this.setState({variationQualities});\r\n  }\r\n\r\n  handleAccordion = () => {\r\n    let {expanded} = this.state;\r\n    this.setState({expanded: !expanded});\r\n  }\r\n\r\n  handleSetImages = e => {\r\n    let files = e.target.files;\r\n    let {productImages} = this.state;\r\n    for (let i = 0; i < files.length; i ++) {\r\n      if (!files[i].type.includes('image')) {\r\n        this.setState({messageOpen: true, message: \"The file format should be image.\", messageType: \"warning\"});\r\n      }\r\n      if (files[i].type.includes('image') && parseFloat(files[i].size / 1024 / 1024) <= 10) \r\n      {\r\n        let newImage = {\r\n          file: files[i],\r\n          preview: URL.createObjectURL(files[i]),\r\n          fileName: files[i].name,\r\n          date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        }\r\n        productImages.push(newImage);\r\n      }\r\n    }\r\n    this.setState({productImages});\r\n  }\r\n\r\n  deleteImage = index => {\r\n    let {productImages} = this.state;\r\n    let item = productImages.indexOf(index);\r\n    if (index > -1)\r\n      productImages.splice(index, 1);\r\n    this.setState({productImages});\r\n  }\r\n\r\n  downloadImage = index => {\r\n    let {productImages} = this.state;\r\n    const url = productImages[index].preview;\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', productImages[index].fileName);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  }\r\n\r\n  openLighbox = index => {\r\n    this.setState({lightboxOpen: true, lightboxIndex: index})\r\n  }\r\n\r\n  render() {\r\n    let { \r\n      name,\r\n      SKU,\r\n      UPC,\r\n      ASIN,\r\n      retailPrice,\r\n      selectedFFAmazon,\r\n      selectedFFUs,\r\n      selectedFFThirdParty,\r\n      variationTypeList,\r\n      categoryList,\r\n      selectedParentCategory,\r\n      selectedCategoryList,\r\n      productWidth,\r\n      productHeight,\r\n      productDepth,\r\n      productGrams,\r\n      packagedWidth,\r\n      packagedHeight,\r\n      packagedDepth,\r\n      packagedGrams,\r\n      freightList,\r\n      selectedFreight,\r\n      freightQty,\r\n      partsList,\r\n      selectedParts,\r\n      partsQty,\r\n      partsIDCode,\r\n      notes,\r\n      storageList,\r\n      fullfillmentList,\r\n      selectedStorage,\r\n      storageDuration,\r\n      fullfillmentType,\r\n      messageOpen,\r\n      message,\r\n      messageType,\r\n      variationQualities,\r\n      expanded,\r\n      productImages,\r\n      squareFeet,\r\n      lightboxOpen,\r\n      lightboxIndex,\r\n      loading\r\n    } = this.state;\r\n    let oem = 0;\r\n    // const classes = useStyles();\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: \"Add New Product\" }]} />\r\n        </div>\r\n        <SimpleCard>\r\n          <ValidatorForm\r\n            ref=\"form\"\r\n            onSubmit={this.handleSubmit}\r\n            onError={(errors) => null}\r\n          >\r\n            <div className=\"viewer_actions px-16 flex flex-end\">\r\n              <div className=\"mb-24\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                  className=\"py-8\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Save\r\n                  {loading && <CircularProgress className=\"ml-10\" size={24} />}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Grid container spacing={6}>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <Accordion\r\n                  expanded={expanded === true}\r\n                  onChange={this.handleAccordion}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography>Click to toggle image section.</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                      <div className=\"list w-100\">\r\n                        <div className=\"grid-view\">\r\n                          <Grid container spacing={2}>\r\n                            {productImages.map((item, index) => (\r\n                              <Grid item sm={4} xl={2} md={3} xs={12} key={index}>\r\n                                <Card className=\"grid__card flex-column h-100\" elevation={6}>\r\n                                  <div className=\"grid__card-top text-center\">\r\n                                    <img src={item.preview} alt=\"project\" style={{width: '100%', height: '180px', objectFit: 'cover'}}/>\r\n                                    <div className=\"grid__card-overlay flex-column\">\r\n                                      <div className=\"flex flex-middle flex-end\">\r\n                                        <div className=\"flex flex-middle\">\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"flex flex-middle flex-center\">\r\n                                          <Icon\r\n                                            fontSize=\"small\"\r\n                                            className=\"mr-16 cursor-pointer text-white\"\r\n                                            onClick={(e) => this.downloadImage(index)}\r\n                                          >\r\n                                            cloud_download\r\n                                          </Icon>\r\n                                          <Icon\r\n                                            fontSize=\"small\"\r\n                                            className=\"mr-16 cursor-pointer text-white\"\r\n                                            onClick={(e) => this.openLighbox(index)}\r\n                                          >\r\n                                            zoom_in\r\n                                          </Icon>\r\n                                          <Icon\r\n                                            fontSize=\"small\"\r\n                                            className=\"mr-16 cursor-pointer text-white\"\r\n                                            onClick={(e) => this.deleteImage(index)}\r\n                                          >\r\n                                            delete\r\n                                          </Icon>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"grid__card-bottom text-center py-8\">\r\n                                    <p className=\"m-0\">{item.date}</p>\r\n                                  </div>\r\n                                </Card>\r\n                              </Grid>\r\n                            ))}\r\n                          </Grid>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item sm={12} md={12}>\r\n                              <label htmlFor=\"upload-single-file\">\r\n                                <Fab\r\n                                  className=\"capitalize\"\r\n                                  color=\"primary\"\r\n                                  component=\"span\"\r\n                                  variant=\"extended\"\r\n                                >\r\n                                  <div className=\"flex flex-middle\">\r\n                                    <Icon className=\"pr-8\">cloud_upload</Icon>\r\n                                    <span>Upload Multiple Image</span>\r\n                                  </div>\r\n                                </Fab>\r\n                              </label>\r\n                              <input\r\n                                className=\"display-none\"\r\n                                onChange={this.handleSetImages}\r\n                                id=\"upload-single-file\"\r\n                                type=\"file\"\r\n                                accept=\"image/x-png,image/gif,image/jpeg\"\r\n                                multiple\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Name\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"SKU\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"SKU\"\r\n                  value={SKU}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"UPC\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"UPC\"\r\n                  value={UPC}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"ASIN\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"ASIN\"\r\n                  value={ASIN}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Table style={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align='center' className=\"bg-light-green\">  \r\n                        <Fab size=\"small\" color=\"primary\" aria-label=\"Add\" onClick={this.addNewVariationList}>\r\n                          <Icon>add</Icon>\r\n                        </Fab>\r\n                      </TableCell>\r\n                      <TableCell align='left' className=\"bg-light-green\">\r\n                          Variation Qualities\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Type</TableCell>\r\n                      <TableCell align=\"center\">Value</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {\r\n                      variationQualities.map((variation, index) => {\r\n                        return (\r\n                            <TableRow key={index}>\r\n                              <TableCell className=\"px-10\">\r\n                                <CustomSelect\r\n                                  textFieldProps={{\r\n                                    InputLabelProps: {\r\n                                      htmlFor: \"react-select-single\",\r\n                                      shrink: true,\r\n                                    },\r\n                                    placeholder: \"\",\r\n                                  }}\r\n                                  options={variationTypeList}\r\n                                  handleChange={(data) => this.handleSelectVType(data, index)}\r\n                                  selectedValue={variation.type}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\">\r\n                                <CustomSelect\r\n                                  textFieldProps={{\r\n                                    InputLabelProps: {\r\n                                      htmlFor: \"react-select-single\",\r\n                                      shrink: true,\r\n                                    },\r\n                                    placeholder: \"\",\r\n                                  }}\r\n                                  options={variation.valueList}\r\n                                  handleChange={(data) => this.handleSelectVariationValue(data, index)}\r\n                                  selectedValue={variation.value}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                        );\r\n                      })\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: 'Parent Categroy',\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={categoryList}\r\n                  handleChange={(data) => {this.setState({selectedParentCategory: data})}}\r\n                  selectedValue={selectedParentCategory}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: \"Categories\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={categoryList}\r\n                  handleChange={(data) => {this.setState({selectedCategoryList: data})}}\r\n                  selectedValue={selectedCategoryList}\r\n                  isMulti={true}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextField\r\n                  value={retailPrice}\r\n                  className=\"w-100 mb-16\"\r\n                  onChange={(e) => this.setState({\r\n                      retailPrice: e.target.value\r\n                  })}\r\n                  name=\"retailPrice\"\r\n                  label=\"Retail Price\"\r\n                  InputProps={{\r\n                    inputComponent: NumberFormatPrefixCustom,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextField\r\n                  value={squareFeet}\r\n                  className=\"w-100 mb-16\"\r\n                  onChange={this.handleChange}\r\n                  name=\"squareFeet\"\r\n                  label=\"Square Feet of Leather\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <RadioGroup\r\n                  className=\"mb-16\"\r\n                  value={fullfillmentType}\r\n                  name=\"fullfillmentType\"\r\n                  onChange={this.handleChange}\r\n                  row\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"Amazon\"\r\n                    control={<Radio color=\"secondary\" />}\r\n                    label=\"Fullfillment Amazon\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                  <FormControlLabel\r\n                    label=\"Fullfillment Third Party\"\r\n                    control={<Radio color=\"secondary\" />}\r\n                    value=\"ThirdParty\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                  <FormControlLabel\r\n                    label=\"Fullfillment By US\"\r\n                    control={<Radio color=\"secondary\" />}\r\n                    value=\"US\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                </RadioGroup>\r\n              </Grid>        \r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  className=\"mb-16\"\r\n                  textFieldProps={{\r\n                    label: \"Fullfillment Amazon\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={fullfillmentList}\r\n                  handleChange={(data) => {this.setState({selectedFFAmazon: data})}}\r\n                  selectedValue={selectedFFAmazon}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4} className=\"pl-16\">\r\n                {selectedFFAmazon && (\r\n                  <TextField \r\n                    label='ID'\r\n                    type=\"text\"\r\n                    value={selectedFFAmazon.ID}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4}>\r\n                {selectedFFAmazon && (\r\n                  <TextField \r\n                    label='Rate'\r\n                    type=\"text\"\r\n                    value={`$${selectedFFAmazon.rate}`}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4}>\r\n                {selectedFFAmazon && (\r\n                  <TextField \r\n                    label='UM'\r\n                    type=\"text\"\r\n                    value={selectedFFAmazon.UM.name}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  className=\"mb-16\"\r\n                  textFieldProps={{\r\n                    label: \"Fullfillment By Third Party\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={fullfillmentList}\r\n                  handleChange={(data) => {this.setState({selectedFFThirdParty: data})}}\r\n                  selectedValue={selectedFFThirdParty}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4}>\r\n                {selectedFFThirdParty && (\r\n                  <TextField \r\n                    label='ID'\r\n                    type=\"text\"\r\n                    value={selectedFFThirdParty.ID}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4}>\r\n                {selectedFFThirdParty && (\r\n                  <TextField \r\n                    label='Rate'\r\n                    type=\"text\"\r\n                    value={`$${selectedFFThirdParty.rate}`}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4}>\r\n                {selectedFFThirdParty && (\r\n                  <TextField \r\n                    label='UM'\r\n                    type=\"text\"\r\n                    value={selectedFFThirdParty.UM.name}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  className=\"mb-16\"\r\n                  textFieldProps={{\r\n                    label: \"Fullfillment By US\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={fullfillmentList}\r\n                  handleChange={(data) => {this.setState({selectedFFUs: data})}}\r\n                  selectedValue={selectedFFUs}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4}>\r\n                {selectedFFUs && (\r\n                  <TextField \r\n                    label='ID'\r\n                    type=\"text\"\r\n                    value={selectedFFUs.ID}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4}>\r\n                {selectedFFUs && (\r\n                  <TextField \r\n                    label='Rate'\r\n                    type=\"text\"\r\n                    value={`$${selectedFFUs.rate}`}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={4} xs={4}>\r\n                {selectedFFUs && (\r\n                  <TextField \r\n                    label='UM'\r\n                    type=\"text\"\r\n                    value={selectedFFUs.UM.name}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Table style={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className=\"bg-light-green\">\r\n                                METRIC\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className=\"bg-default text-green\">\r\n                                PRODUCT\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Width</TableCell>\r\n                            <TableCell align=\"center\">Height</TableCell>\r\n                            <TableCell align=\"center\">Depth</TableCell>\r\n                            <TableCell align=\"center\">CBM</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"productWidth\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberWithCM,\r\n                                      min: 0,\r\n                                      style: { textAlign: 'center' }\r\n                                    }}\r\n                                    name=\"productWidth\"\r\n                                    value={productWidth}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"productHeight\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberWithCM,\r\n                                    }}\r\n                                    name=\"productHeight\"\r\n                                    value={productHeight}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"productDepth\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberWithCM,\r\n                                    }}\r\n                                    name=\"productDepth\"\r\n                                    value={productDepth}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                {parseFloat((productWidth * productHeight * productDepth)/1000000).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                                Grams\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                                Kilo\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"productGrams\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"productGrams\"\r\n                                    value={productGrams}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                                {parseFloat(productGrams / 1000).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className='bg-default text-green font-weight-500'>\r\n                                PACKAGED\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Width\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Height\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Depth\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                CBM\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"packagedWidth\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberWithCM,\r\n                                    }}\r\n                                    name=\"packagedWidth\"\r\n                                    value={packagedWidth}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"packagedHeight\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberWithCM,\r\n                                    }}\r\n                                    name=\"packagedHeight\"\r\n                                    value={packagedHeight}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"packagedDepth\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberWithCM,\r\n                                    }}\r\n                                    name=\"packagedDepth\"\r\n                                    value={packagedDepth}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat((packagedWidth * packagedHeight * packagedDepth)/1000000).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                                Grams\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                                Kilo\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangeMetric(e, \"packagedGrams\")}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"packagedGrams\"\r\n                                    value={packagedGrams}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedGrams / 1000).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <Table style={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className=\"bg-light-green\">\r\n                                ENGLISH\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className=\"bg-default text-green\">\r\n                                PRODUCT\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Width</TableCell>\r\n                            <TableCell align=\"center\">Height</TableCell>\r\n                            <TableCell align=\"center\">Depth</TableCell>\r\n                            <TableCell align=\"center\">CBF</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productWidth * 0.393701).toFixed(2)} Inches\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productHeight * 0.393701).toFixed(2)} Inches\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productDepth * 0.393701).toFixed(2)} Inches\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat((productWidth * 0.393701 * productHeight * 0.393701 * productDepth * 0.393701)/1728).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                              Ounzes\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                              Pounds\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productGrams * 0.0353).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(productGrams / 1000 * 2.20462).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={4} align='center' className='bg-default text-green font-weight-500'>\r\n                                PACKAGED\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Width\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Height\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                Depth\r\n                            </TableCell>\r\n                            <TableCell align='center' className='font-weight-500'>\r\n                                CBF\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedWidth * 0.393701).toFixed(2)} Inches\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedHeight * 0.393701).toFixed(2)} Inches\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedDepth * 0.393701).toFixed(2)} Inches\r\n                            </TableCell>\r\n                            <TableCell className=\"px-10\" align=\"center\">\r\n                              {parseFloat((packagedWidth * 0.393701 * packagedHeight * 0.393701 * packagedDepth * 0.393701)/1728).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                              Ounzes\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} align='center' className='font-weight-500'>\r\n                              Pounds\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedGrams * 0.0353).toFixed(2)}\r\n                            </TableCell>\r\n                            <TableCell colSpan={2} className=\"px-10\" align=\"center\">\r\n                              {parseFloat(packagedGrams / 1000 * 2.20462).toFixed(2)}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n              </Grid>\r\n              \r\n        {/* =================== Select Freight Part =================== */}\r\n              <Grid item lg={4} md={4} sm={6} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: 'Freight',\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={freightList}\r\n                  selectedValue={selectedFreight}\r\n                  handleChange={this.handleSelectFreight}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={1} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {\r\n                  selectedFreight && (\r\n                    <TextField \r\n                      label='ID'\r\n                      type=\"text\"\r\n                      name=\"id\"\r\n                      value={selectedFreight.ID}\r\n                      readOnly\r\n                      />\r\n                  )\r\n                }\r\n              </Grid>\r\n              <Grid item lg={2} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {\r\n                  selectedFreight && (\r\n                    <TextField \r\n                      type=\"text\"\r\n                      label='QTY'\r\n                      name=\"freightQty\"\r\n                      value={freightQty}\r\n                      readOnly\r\n                      />\r\n                  )\r\n                }\r\n              </Grid>\r\n              <Grid item lg={1} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {\r\n                  selectedFreight && (\r\n                    <TextField \r\n                      label='Rate'\r\n                      type=\"text\"\r\n                      name=\"rate\"\r\n                      value={`$${selectedFreight.costUSD}`}\r\n                      readOnly\r\n                      />\r\n                  )\r\n                }\r\n              </Grid>\r\n              <Grid item lg={2} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {selectedFreight && (\r\n                  <TextField \r\n                    label='UM'\r\n                    type=\"text\"\r\n                    value={selectedFreight.UM}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={2} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {selectedFreight && (\r\n                  <TextField \r\n                    label='Cost USD'\r\n                    type=\"text\"\r\n                    value={'$ ' + parseFloat(selectedFreight.costUSD * freightQty).toFixed(2)}\r\n                    readOnly />\r\n                )}\r\n              </Grid> \r\n        {/* =================== End Select Freight Part =================== */}\r\n\r\n        {/* =================== Select Storage Part =================== */}\r\n              <Grid item lg={4} md={4} sm={6} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: 'Storage',\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  options={storageList}\r\n                  selectedValue={selectedStorage}\r\n                  handleChange={this.handleSelectStorage}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={1} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {\r\n                  selectedStorage && (\r\n                    <TextField \r\n                      label='ID'\r\n                      type=\"text\"\r\n                      name=\"id\"\r\n                      value={selectedStorage.ID}\r\n                      readOnly\r\n                      />\r\n                  )\r\n                }\r\n              </Grid>\r\n              <Grid item lg={2} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {\r\n                  selectedStorage && (\r\n                    <TextField \r\n                      label='Duration'\r\n                      type=\"number\"\r\n                      name=\"storageDuration\"\r\n                      value={storageDuration}\r\n                      readOnly\r\n                      />\r\n                  )\r\n                }\r\n              </Grid>\r\n              <Grid item lg={1} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {\r\n                  selectedStorage && (\r\n                    <TextField \r\n                      label='Rate'\r\n                      type=\"text\"\r\n                      name=\"rate\"\r\n                      value={`$${selectedStorage.rate}`}\r\n                      readOnly\r\n                      />\r\n                  )\r\n                }\r\n              </Grid>\r\n              <Grid item lg={2} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {selectedStorage && (\r\n                  <TextField \r\n                    label='UM'\r\n                    type=\"text\"\r\n                    value={selectedStorage.UM}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n              <Grid item lg={2} md={4} sm={6} xs={6} className=\"text-center\">\r\n                {selectedStorage && (\r\n                  <TextField \r\n                    label='Cost USD'\r\n                    type=\"text\"\r\n                    value={'$ ' + parseFloat(selectedStorage.rate * storageDuration).toFixed(2)}\r\n                    readOnly />\r\n                )}\r\n              </Grid>\r\n        {/* =================== Ebd Storage Part =================== */}\r\n\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextField\r\n                    label=\"Notes\"\r\n                    fullWidth\r\n                    multiline={true}\r\n                    rows={5}\r\n                    name=\"notes\"\r\n                    onChange={this.handleChange}\r\n                    value={notes}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <div className=\"w-100 overflow-auto\" style={{paddingBottom: '250px'}}>\r\n                  <Table style={{border: '1px solid rgba(224, 224, 224, 1)', whiteSpace: \"pre\"}}>\r\n                      <colgroup>\r\n                          <col style={{width:'100px'}}/>\r\n                          <col style={{width:'300px'}}/>\r\n                          <col style={{width:'100px'}}/>\r\n                          <col style={{width:'100px'}}/>\r\n                          <col style={{width:'100px'}}/>\r\n                          <col style={{width:'50px'}}/>\r\n                          <col style={{width:'50px'}}/>\r\n                          <col style={{width:'100px'}}/>\r\n                      </colgroup>\r\n                      <TableHead>\r\n                          <TableRow>\r\n                              <TableCell colSpan={1} align='center' className=\"bg-light-green\">\r\n                                <Fab color=\"primary\" aria-label=\"Add\" onClick={this.addNewPart}>\r\n                                  <Icon>add</Icon>\r\n                                </Fab>\r\n                              </TableCell>\r\n                              <TableCell colSpan={7} align='center' className=\"bg-light-green\">\r\n                                  PARTS\r\n                              </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                              <TableCell colSpan={7} align='right'>\r\n                                OEM:\r\n                              </TableCell>\r\n                              <TableCell colSpan={1}>\r\n                                {\r\n                                  selectedParts.map((part, index) => {\r\n                                    if (part && part.cost_usd && partsQty[index])\r\n                                      oem += parseFloat(part.cost_usd) * parseFloat(partsQty[index]);\r\n                                  })\r\n                                }\r\n                                $ {oem}\r\n                              </TableCell>\r\n                          </TableRow>\r\n                          <TableRow>\r\n                              <TableCell align=\"center\">ID Code</TableCell>\r\n                              <TableCell align=\"center\">Name</TableCell>\r\n                              <TableCell align=\"center\">Type</TableCell>\r\n                              <TableCell align=\"center\">Supplier Country</TableCell>\r\n                              <TableCell align=\"center\">UM</TableCell>\r\n                              <TableCell align=\"center\">UPrice</TableCell>\r\n                              <TableCell align=\"center\">Qty</TableCell>\r\n                              <TableCell align=\"center\">Total</TableCell>\r\n                          </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {\r\n                          partsIDCode && partsIDCode.map((idCode, index) => {\r\n                            return (\r\n                              <TableRow key={index}>\r\n                                <TableCell className=\"px-10\" align=\"center\">\r\n                                  <TextValidator\r\n                                      onChange={(e) => this.handleSearchParts(e, index)}\r\n                                      type=\"text\"\r\n                                      readOnly\r\n                                      value={idCode}\r\n                                      inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                  />\r\n                                </TableCell>\r\n                                <TableCell align='center' component=\"th\" scope=\"row\" className=\"pr-10\">\r\n                                  <CustomOptionSelect\r\n                                    textFieldProps={{\r\n                                      InputLabelProps: {\r\n                                        htmlFor: \"react-select-single\",\r\n                                        shrink: true,\r\n                                      },\r\n                                      placeholder: \"\",\r\n                                    }}\r\n                                    optionComponent={ CustomOption }\r\n                                    handleChange={(data) => this.handleSelectParts(data, index)}\r\n                                    selectedValue={selectedParts[index] && selectedParts[index]}\r\n                                    options={partsList}\r\n                                  />\r\n                                </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                {selectedParts[index] && selectedParts[index].type.name}\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                {selectedParts[index] && selectedParts[index].supplier_id.country}\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                {selectedParts[index] && selectedParts[index].UM.short_name}\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                $ {selectedParts[index] && selectedParts[index].cost_usd}\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                    onChange={(e) => this.handleChangePartsQty(e, index)}\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                    }}\r\n                                    name=\"productDepth\"\r\n                                    value={partsQty[index]}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                $ {selectedParts[index] && parseFloat(partsQty[index] * selectedParts[index].cost_usd).toFixed(2)}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                            )\r\n                            \r\n                          })\r\n                        }\r\n                          \r\n                      </TableBody>\r\n                  </Table>\r\n                </div>\r\n              </Grid>     \r\n            </Grid>\r\n          </ValidatorForm>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\"\r\n            }}\r\n            open={messageOpen}\r\n            autoHideDuration={2000}\r\n            onClose={this.closeMessage}\r\n          >\r\n            <MySnackbarContentWrapper\r\n              onClose={this.closeMessage}\r\n              variant={messageType}\r\n              message={message}\r\n            />\r\n          </Snackbar>\r\n          { lightboxOpen && productImages && (\r\n            <Lightbox\r\n              mainSrc={productImages[lightboxIndex].preview}\r\n              nextSrc={productImages[(lightboxIndex + 1) % productImages.length].preview}\r\n              prevSrc={productImages[(lightboxIndex + productImages.length - 1) % productImages.length].preview}\r\n              onCloseRequest={() => this.setState({ lightboxOpen: false })}\r\n              onMovePrevRequest={() =>\r\n                this.setState({\r\n                  lightboxIndex: (lightboxIndex + productImages.length - 1) % productImages.length,\r\n                })\r\n              }\r\n              onMoveNextRequest={() =>\r\n                this.setState({\r\n                  lightboxIndex: (lightboxIndex + 1) % productImages.length,\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </SimpleCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewProduct;\r\n"],"sourceRoot":""}