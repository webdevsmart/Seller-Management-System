{"version":3,"sources":["app/views/parts_um/PartsUMService.js","app/views/parts/PartsService.js","app/views/parts_type/PartsTypeService.js","app/views/supplier_type/SupplierTypeService.js","app/views/supplier/SupplierService.js","app/views/supplier/CustomSelect.jsx","app/views/supplier/AddNewSupplier.jsx"],"names":["getAllPartsUM","axios","get","getPartsUMById","id","deletePartsUM","post","addNewPartsUM","NewPartsUM","updatePartsUM","getAllParts","getPartsById","deleteParts","addNewParts","NewParts","updateParts","updatePartsList","PartsList","getAllPartsType","getPartsTypeById","deletePartsType","addNewPartsType","NewPartsType","updatePartsType","getAllSupplierTypes","getSupplierTypeById","deleteSupplierType","addNewSupplierType","NewSupplierType","updateSupplierType","getAllSuppliers","getSupplierById","deleteSupplier","mid","addNewSupplier","NewSupplier","updateSupplier","useStyles","makeStyles","theme","root","flexGrow","height","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","props","ref","components","Control","children","innerProps","innerRef","selectProps","classes","TextFieldProps","fullWidth","InputProps","inputProps","className","Menu","square","MultiValue","tabIndex","label","clsx","isFocused","onDelete","removeProps","onClick","deleteIcon","NoOptionsMessage","color","Option","selected","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","CustomSelect","handleChange","selectedValue","textFieldProps","isMulti","options","useTheme","selectStyles","base","text","primary","font","styles","inputId","value","onChange","countries","map","suggestion","NumberFormatCustom","other","getInputRef","onValueChange","values","target","thousandSeparator","prefix","AddNewSupplier","state","ID","generateRandomId","start_date","Date","country","name","contact","skype","wechat","whatsapp","mobile","office","email","main_products_services","address","notess","loading","supplierTypeList","partsUMList","partsTypeList","supplierList","parts","handleSubmit","event","then","res","length","newParts","part","IDCode","selectedType","cost_usd","UPrice","UM","selectedUM","qty","supplier_id","data","_id","res1","history","push","source","persist","setState","addNewPart","newPart","handleSelectPartsType","index","handleSelectPartsUM","handleChangePartsQty","e","handleChangeUPrice","handleChangePartName","types","item","short_name","this","notes","routeSegments","onSubmit","onError","errors","variant","disabled","container","lg","md","sm","xs","readOnly","validators","errorMessages","utils","DateFnsUtils","inputVariant","autoOk","date","KeyboardButtonProps","InputLabelProps","htmlFor","shrink","multiline","rows","minHeight","paddingBottom","border","whiteSpace","width","colSpan","align","aria-label","key","min","textAlign","parseFloat","toFixed","Component"],"mappings":"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","file":"static/js/25.af6741d6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getAllPartsUM = () => {\r\n  return axios.get(\"/api/parts-um/list\");\r\n};\r\nexport const getPartsUMById = id => {\r\n  return axios.get(`/api/parts-um/get?_id=${id}`);\r\n};\r\nexport const deletePartsUM = id => {\r\n  return axios.post(`/api/parts-um/delete?_id=${id}`);\r\n};\r\nexport const addNewPartsUM = NewPartsUM => {\r\n  return axios.post(\"/api/parts-um/add\", NewPartsUM);\r\n};\r\nexport const updatePartsUM = NewPartsUM => {\r\n  return axios.post(\"/api/parts-um/update\", NewPartsUM);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllParts = () => {\r\n  return axios.get(\"/api/parts/list\");\r\n};\r\nexport const getPartsById = id => {\r\n  return axios.get(`/api/parts/get?_id=${id}`);\r\n};\r\nexport const deleteParts = id => {\r\n  return axios.post(`/api/parts/delete?_id=${id}`);\r\n};\r\nexport const addNewParts = NewParts => {\r\n  return axios.post(\"/api/parts/add\", NewParts);\r\n};\r\nexport const updateParts = NewParts => {\r\n  return axios.post(\"/api/parts/update\", NewParts);\r\n};\r\nexport const updatePartsList = PartsList => {\r\n  return axios.post(\"/api/parts/update-list\", PartsList);\r\n}","import axios from \"axios\";\r\n\r\nexport const getAllPartsType = () => {\r\n  return axios.get(\"/api/parts-type/list\");\r\n};\r\nexport const getPartsTypeById = id => {\r\n  return axios.get(`/api/parts-type/get?_id=${id}`);\r\n};\r\nexport const deletePartsType = id => {\r\n  return axios.post(`/api/parts-type/delete?_id=${id}`);\r\n};\r\nexport const addNewPartsType = NewPartsType => {\r\n  return axios.post(\"/api/parts-type/add\", NewPartsType);\r\n};\r\nexport const updatePartsType = NewPartsType => {\r\n  return axios.post(\"/api/parts-type/update\", NewPartsType);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllSupplierTypes = () => {\r\n  return axios.get(\"/api/supplier-type/list\");\r\n};\r\nexport const getSupplierTypeById = id => {\r\n  return axios.get(`/api/supplier-type/get?uid=${id}`);\r\n};\r\nexport const deleteSupplierType = id => {\r\n  return axios.post(`/api/supplier-type/delete?uid=${id}`);\r\n};\r\nexport const addNewSupplierType = NewSupplierType => {\r\n  return axios.post(\"/api/supplier-type/add\", NewSupplierType);\r\n};\r\nexport const updateSupplierType = NewSupplierType => {\r\n  return axios.post(\"/api/supplier-type/update\", NewSupplierType);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getAllSuppliers = () => {\r\n  return axios.get(\"/api/suppliers/list\");\r\n};\r\nexport const getSupplierById = id => {\r\n  return axios.get(`/api/suppliers/get?uid=${id}`);\r\n};\r\nexport const deleteSupplier = mid => {\r\n  return axios.post(`/api/suppliers/delete?uid=${mid}`);\r\n};\r\nexport const addNewSupplier = NewSupplier => {\r\n  return axios.post(\"/api/suppliers/add\", NewSupplier);\r\n};\r\nexport const updateSupplier = NewSupplier => {\r\n  return axios.post(\"/api/suppliers/update\", NewSupplier);\r\n};\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nexport default function CustomSelect({handleChange, selectedValue, textFieldProps, isMulti, options}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          options={options}\r\n          components={components}\r\n          TextFieldProps={textFieldProps}\r\n          value={selectedValue}\r\n          onChange={handleChange}\r\n          isMulti={isMulti}\r\n        />\r\n      </NoSsr>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  IconButton,\r\n  Fab,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport Select from \"react-select\";\r\nimport { Breadcrumb, SimpleCard } from \"egret\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport { addNewSupplier, getAllSuppliers } from \"./SupplierService\";\r\nimport { getAllSupplierTypes } from \"../supplier_type/SupplierTypeService\";\r\nimport { getAllPartsUM } from \"../parts_um/PartsUMService\";\r\nimport { getAllPartsType, addNewPartsType } from \"../parts_type/PartsTypeService\";\r\nimport { addNewParts } from \"../parts/PartsService\";\r\nimport { generateRandomId } from \"utils\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst countries = [\r\n  { label: \"Afghanistan\" },\r\n  { label: \"Aland Islands\" },\r\n  { label: \"Albania\" },\r\n  { label: \"Algeria\" },\r\n  { label: \"American Samoa\" },\r\n  { label: \"Andorra\" },\r\n  { label: \"Angola\" },\r\n  { label: \"Anguilla\" },\r\n  { label: \"Antarctica\" },\r\n  { label: \"Antigua and Barbuda\" },\r\n  { label: \"Argentina\" },\r\n  { label: \"Armenia\" },\r\n  { label: \"Aruba\" },\r\n  { label: \"Australia\" },\r\n  { label: \"Austria\" },\r\n  { label: \"Azerbaijan\" },\r\n  { label: \"Bahamas\" },\r\n  { label: \"Bahrain\" },\r\n  { label: \"Bangladesh\" },\r\n  { label: \"Barbados\" },\r\n  { label: \"Belarus\" },\r\n  { label: \"Belgium\" },\r\n  { label: \"Belize\" },\r\n  { label: \"Benin\" },\r\n  { label: \"Bermuda\" },\r\n  { label: \"Bhutan\" },\r\n  { label: \"Bolivia, Plurinational State of\" },\r\n  { label: \"Bonaire, Sint Eustatius and Saba\" },\r\n  { label: \"Bosnia and Herzegovina\" },\r\n  { label: \"Botswana\" },\r\n  { label: \"Bouvet Island\" },\r\n  { label: \"Brazil\" },\r\n  { label: \"British Indian Ocean Territory\" },\r\n  { label: \"Brunei Darussalam\" }\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label\r\n}));\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value\r\n          }\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nclass AddNewSupplier extends Component {\r\n  state = {\r\n    ID: 'S' + generateRandomId(),\r\n    start_date: new Date(),\r\n    type: \"\",\r\n    country: \"\",\r\n    name: \"\",\r\n    contact: \"\",\r\n    skype: \"\",\r\n    wechat: \"\",\r\n    whatsapp: \"\",\r\n    mobile: \"\",\r\n    office: \"\",\r\n    email: \"\",\r\n    main_products_services: \"\",\r\n    address: \"\",\r\n    notess: \"\",\r\n    loading: false,\r\n    supplierTypeList: [],\r\n    partsUMList: [],\r\n    partsTypeList: [],\r\n    supplierList: [],\r\n    parts: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    getAllSupplierTypes().then((res) => {\r\n      let types = res.data.map(item => ({\r\n        value: item._id,\r\n        label: item.name,\r\n      }));\r\n      this.setState({ supplierTypeList: types });\r\n    });\r\n    getAllPartsType().then((res) => {\r\n      this.setState({ partsTypeList: res.data.map(item => ({value: item._id, label: item.name})) });\r\n    });\r\n    getAllPartsUM().then((res) => {\r\n      this.setState({ partsUMList: res.data.map(item => ({value: item._id, label: item.short_name})) });\r\n    });\r\n    getAllSuppliers().then((res) => {\r\n      this.setState({ supplierList: res.data.map(item => ({value: item._id, label: item.name, ID: item.ID})) });\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    addNewSupplier(this.state).then((res) => {\r\n      if (this.state.parts.length != 0) {\r\n        let {parts} = this.state;\r\n        let newParts = parts.map((part) => {\r\n          return {\r\n            ID: part.IDCode,\r\n            name: part.name,\r\n            type: part.selectedType.value,\r\n            cost_usd: part.UPrice,\r\n            UM: part.selectedUM.value,\r\n            qty: part.qty,\r\n            supplier_id: res.data._id,\r\n          }\r\n        });\r\n        addNewParts(newParts).then((res1) => {\r\n          this.props.history.push('/supplier/list');\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    this.setState({\r\n    [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  addNewPart = () => {\r\n    let newPart = {\r\n      IDCode: 'P' + generateRandomId(),\r\n      name: \"\",\r\n      selectedType: \"\",\r\n      selectedUM: \"\",\r\n      UPrice: 0,\r\n      qty: 0,\r\n    }\r\n    let {parts} = this.state;\r\n    parts.push(newPart);\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleSelectPartsType = (data, index) => {\r\n    let {parts} = this.state;\r\n    parts[index].selectedType = data;\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleSelectPartsUM = (data, index) => {\r\n    let {parts} = this.state;\r\n    parts[index].selectedUM = data;\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleChangePartsQty = (e, index) => {\r\n    let { parts } = this.state;\r\n    parts[index].qty = e.target.value;\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleChangeUPrice = (e, index) => {\r\n    let { parts } = this.state;\r\n    parts[index].UPrice = e.target.value;\r\n    this.setState({parts});\r\n  }\r\n\r\n  handleChangePartName = (e, index) => {\r\n    let { parts } = this.state;\r\n    parts[index].name = e.target.value;\r\n    this.setState({parts});\r\n  }\r\n  \r\n\r\n  render() {\r\n    let { \r\n      ID,\r\n      start_date,\r\n      type,\r\n      country,\r\n      name,\r\n      contact,\r\n      skype,\r\n      wechat,\r\n      whatsapp,\r\n      mobile,\r\n      office,\r\n      email,\r\n      main_products_services,\r\n      address,\r\n      notes,\r\n      loading,\r\n      supplierTypeList,\r\n      partsTypeList,\r\n      partsUMList,\r\n      supplierList,\r\n      parts } = this.state;\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: \"Add New Supplier\" }]} />\r\n        </div>\r\n        <SimpleCard>\r\n          <ValidatorForm\r\n            ref=\"form\"\r\n            onSubmit={this.handleSubmit}\r\n            onError={(errors) => null}\r\n          >\r\n            <div className=\"viewer_actions px-16 flex flex-end\">\r\n              <div className=\"mb-24\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"py-8\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Grid container spacing={6}>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"ID\"\r\n                  readOnly\r\n                  // onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"ID\"\r\n                  value={ID}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    className=\"mb-16 w-100\"\r\n                    margin=\"none\"\r\n                    id=\"mui-pickers-date\"\r\n                    label=\"Start Date\"\r\n                    inputVariant=\"standard\"\r\n                    type=\"text\"\r\n                    autoOk={true}\r\n                    value={start_date}\r\n                    onChange={(date) => this.setState({start_date: date})}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\"\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: \"Supplier Type\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  handleChange={(data) => this.setState({type: data.value})}\r\n                  options={supplierTypeList}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <CustomSelect\r\n                  textFieldProps={{\r\n                    label: \"Country\",\r\n                    InputLabelProps: {\r\n                      htmlFor: \"react-select-single\",\r\n                      shrink: true,\r\n                    },\r\n                    placeholder: \"\",\r\n                  }}\r\n                  handleChange={(data) => this.setState({country: data.value})}\r\n                  options={countries}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Name\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Contact\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"contact\"\r\n                  value={contact}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Mobile\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"mobile\"\r\n                  value={mobile}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Office\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"office\"\r\n                  value={office}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Email\"\r\n                  onChange={this.handleChange}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                <h5 className=\"text-primary\">CHAT</h5>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Skype\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"skype\"\r\n                  value={skype}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"WeChat\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"wechat\"\r\n                  value={wechat}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"WhatsApp\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"whatsapp\"\r\n                  value={whatsapp}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"mb-16 w-100\"\r\n                  label=\"Main Products/Services\"\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"main_products_services\"\r\n                  value={main_products_services}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextField\r\n                    label=\"Address\"\r\n                    fullWidth\r\n                    multiline={true}\r\n                    rows={5}\r\n                    name=\"address\"\r\n                    value={address}\r\n                    onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <TextField\r\n                    label=\"Notes\"\r\n                    fullWidth\r\n                    multiline={true}\r\n                    rows={5}\r\n                    name=\"notes\"\r\n                    value={notes}\r\n                    onChange={this.handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={12} md={12} sm={12} xs={12} style={{minHeight: '500px'}}>\r\n                <div className=\"w-100 overflow-auto\" style={{paddingBottom: '300px'}}>\r\n                  <Table style={{border: '1px solid rgba(224, 224, 224, 1)', whiteSpace: \"pre\"}}>\r\n                    <colgroup>\r\n                      <col style={{width:'100px'}}/>\r\n                      <col style={{width:'300px'}}/>\r\n                      <col style={{width:'150px'}}/>\r\n                      <col style={{width:'150px'}}/>\r\n                      <col style={{width:'100px'}}/>\r\n                      <col style={{width:'100px'}}/>\r\n                      <col style={{width:'100px'}}/>\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell colSpan={1} align='center' className=\"bg-light-green\">\r\n                              <Fab color=\"primary\" aria-label=\"Add\" onClick={this.addNewPart}>\r\n                                <Icon>add</Icon>\r\n                              </Fab>\r\n                            </TableCell>\r\n                            <TableCell colSpan={6} align='center' className=\"bg-light-green\">\r\n                                PARTS\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">ID Code</TableCell>\r\n                            <TableCell align=\"center\">Name</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">UM</TableCell>\r\n                            <TableCell align=\"center\">UPrice</TableCell>\r\n                            <TableCell align=\"center\">Qty</TableCell>\r\n                            <TableCell align=\"center\">Total</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {\r\n                        parts && parts.map((part, index) => {\r\n                          return (\r\n                            <TableRow key={index}>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                  <TextValidator\r\n                                      type=\"text\"\r\n                                      value={part.IDCode}\r\n                                      readOnly\r\n                                      inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                  />\r\n                              </TableCell>\r\n                              <TableCell align='center' className=\"pr-10\">\r\n                                <TextField name=\"name\" value={part.name} onChange={(e) => this.handleChangePartName(e, index)} fullWidth={true} />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <CustomSelect\r\n                                  textFieldProps={{\r\n                                    InputLabelProps: {\r\n                                      htmlFor: \"react-select-single\",\r\n                                      shrink: true,\r\n                                    },\r\n                                    placeholder: \"\",\r\n                                  }}\r\n                                  \r\n                                  handleChange={(data) => this.handleSelectPartsType(data, index)}\r\n                                  selectedValue={part.selectedType}\r\n                                  options={partsTypeList}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <CustomSelect\r\n                                  textFieldProps={{\r\n                                    InputLabelProps: {\r\n                                      htmlFor: \"react-select-single\",\r\n                                      shrink: true,\r\n                                    },\r\n                                    placeholder: \"\",\r\n                                  }}\r\n                                  handleChange={(data) => this.handleSelectPartsUM(data, index)}\r\n                                  selectedValue={part.selectedUM}\r\n                                  options={partsUMList}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                  <TextField\r\n                                    value={part.UPrice}\r\n                                    onChange={(e) => this.handleChangeUPrice(e, index)}\r\n                                    name=\"UPrice\"\r\n                                    InputProps={{\r\n                                      inputComponent: NumberFormatCustom,\r\n                                      \r\n                                    }}\r\n                                    inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                  />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                  <TextValidator\r\n                                      onChange={(e) => this.handleChangePartsQty(e, index)}\r\n                                      type=\"text\"\r\n                                      name=\"qty\"\r\n                                      value={part.qty}\r\n                                      inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                                  />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                  $ {parseFloat(part.UPrice * part.qty).toFixed(2)}\r\n                              </TableCell>\r\n                          </TableRow>\r\n                          )\r\n                          \r\n                        })\r\n                      }\r\n                        \r\n                    </TableBody>\r\n                  </Table>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </ValidatorForm>\r\n        </SimpleCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewSupplier;\r\n"],"sourceRoot":""}