{"version":3,"sources":["app/components/Snackbar/Snackbar.js","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/Warning.js","../node_modules/@material-ui/icons/Error.js","../node_modules/@material-ui/icons/Info.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/esm/utils/unstable_useId.js","app/components/CustomSelect/CustomSelect.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","app/views/inventory_warehouse_location/LocationService.js","../node_modules/@material-ui/core/esm/colors/amber.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","app/views/inventory_warehouse/InventoryWarehouseService.js","app/views/inventory_warehouse/AddInventory.jsx"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","variant","other","Icon","clsx","aria-describedby","id","action","key","aria-label","color","onClick","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useId","idOverride","_React$useState","React","defaultId","setDefaultId","concat","Math","round","random","useStyles","root","flexGrow","height","input","padding","valueContainer","flexWrap","flex","overflow","chip","margin","chipFocused","emphasize","type","grey","noOptionsMessage","singleValue","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","ref","components","Control","children","innerProps","innerRef","selectProps","TextFieldProps","fullWidth","InputProps","inputProps","Menu","square","MultiValue","tabIndex","label","isFocused","onDelete","removeProps","deleteIcon","NoOptionsMessage","Option","selected","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","CustomSelect","handleChange","selectedValue","textFieldProps","isMulti","options","useTheme","selectStyles","base","text","font","styles","inputId","onChange","createSvgIcon","getAllLocations","axios","get","getLocationById","deleteLocation","post","addNewLocation","NewLocation","updateLocation","getAllWarehouseRegions","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","_objectWithoutProperties","_extends","IconButton","event","disabled","direction","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","_props$component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","selectId","labelId","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","length","Typography","caption","Select","select","selectIcon","InputBase","selectRoot","map","rowsPerPageOption","menuItem","min","actions","title","withStyles","typography","pxToRem","minHeight","paddingRight","flexShrink","marginLeft","paddingLeft","textAlign","textAlignLast","name","getInventoryReport","data","addNewInventoryReport","NumberFormatCustom","getInputRef","onValueChange","values","target","thousandSeparator","LocationList","state","warehouseOptions","selectedWarehouse","selectedLocation","date","reportList","showLoading","submitLoading","messageType","messageOpen","messageContent","submittedInfo","handleSelectWarehouse","setState","closeMessage","validateSelection","showData","searchCondition","warehouse","then","res","tmpList","is_exist","results","item","push","product_id","_id","sku","upc","asin","warehouse_inbound","userName","submitted_user","modifiedAt","modified_at","catch","err","response","setPage","setRowsPerPage","handleChangePage","newPage","handleInputChange","index","handleSubmit","newItem","product","total","parseFloat","postData","items","JSON","parse","localStorage","getItem","ID","short_name","country","this","locationList","Card","elevation","moment","format","Grid","container","marginBottom","sm","xs","InputLabelProps","htmlFor","shrink","utils","DateFnsUtils","inputVariant","autoOk","KeyboardButtonProps","Button","CircularProgress","size","Table","border","whiteSpace","TableHead","TableRow","align","TableBody","slice","TextField","e","readOnly","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration"],"mappings":"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","file":"static/js/18.b03c1eac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon\r\n  };\r\n  \r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600]\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700]\r\n    },\r\n    icon: {\r\n        fontSize: 20\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    message: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n    <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n            </span>\r\n        }\r\n        action={[\r\n            <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            onClick={onClose}\r\n            >\r\n            <CloseIcon className={classes.icon} />\r\n            </IconButton>\r\n        ]}\r\n        {...other}\r\n    />);\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function useId(idOverride) {\n  var _React$useState = React.useState(idOverride),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idOverride || defaultId;\n  React.useEffect(function () {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(\"mui-\".concat(Math.round(Math.random() * 1e5)));\n    }\n  }, [defaultId]);\n  return id;\n}","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Select from \"react-select\";\r\nimport { emphasize, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps }\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps\r\n        }\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography\r\n      className={props.selectProps.classes.singleValue}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer\r\n};\r\n\r\nexport default function CustomSelect({handleChange, selectedValue, textFieldProps, isMulti, options}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      \"& input\": {\r\n        font: \"inherit\"\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          options={options}\r\n          components={components}\r\n          TextFieldProps={textFieldProps}\r\n          value={selectedValue}\r\n          onChange={handleChange}\r\n          isMulti={isMulti}\r\n        />\r\n      </NoSsr>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import axios from \"axios\";\r\n\r\nexport const getAllLocations = () => {\r\n  return axios.get(\"/api/inventory-warehouse-location/list\");\r\n};\r\nexport const getLocationById = id => {\r\n  return axios.get(`/api/inventory-warehouse-location/get?uid=${id}`);\r\n};\r\nexport const deleteLocation = id => {\r\n  return axios.post(`/api/inventory-warehouse-location/delete?uid=${id}`);\r\n};\r\nexport const addNewLocation = NewLocation => {\r\n  return axios.post(\"/api/inventory-warehouse-location/add\", NewLocation);\r\n};\r\nexport const updateLocation = NewLocation => {\r\n  return axios.post(\"/api/inventory-warehouse-location/update\", NewLocation);\r\n};\r\nexport const getLocationNameList = () => {\r\n  return axios.get(\"/api/inventory-warehouse-location/name-list\");\r\n};\r\nexport const getLocationListByName = data => {\r\n  return axios.post(\"/api/inventory-warehouse-location/location-list\", data);\r\n};\r\nexport const getAllWarehouseRegions = () => {\r\n  return axios.get(\"/api/inventory-warehouse-location/region-list\");\r\n}\r\n\r\n","var amber = {\n  50: '#fff8e1',\n  100: '#ffecb3',\n  200: '#ffe082',\n  300: '#ffd54f',\n  400: '#ffca28',\n  500: '#ffc107',\n  600: '#ffb300',\n  700: '#ffa000',\n  800: '#ff8f00',\n  900: '#ff6f00',\n  A100: '#ffe57f',\n  A200: '#ffd740',\n  A400: '#ffc400',\n  A700: '#ffab00'\n};\nexport default amber;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import axios from \"axios\";\r\n\r\nexport const getInventoryReport = (data) => {\r\n  return axios.post(\"/api/inventory-warehouse/report\", data);\r\n};\r\nexport const addNewInventoryReport = (data) => {\r\n  return axios.post(\"/api/inventory-warehouse/add\", data);\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Button,\r\n  Snackbar,\r\n  CircularProgress,\r\n  TablePagination,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { SimpleCard } from \"egret\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport MySnackbarContentWrapper from \"../../components/Snackbar/Snackbar\";\r\nimport CustomSelect from \"../../components/CustomSelect/CustomSelect\";\r\nimport {\r\n  getAllLocations,\r\n} from \"../inventory_warehouse_location/LocationService\";\r\nimport {\r\n  getInventoryReport,\r\n  addNewInventoryReport,\r\n} from \"./InventoryWarehouseService\";\r\nimport moment from \"moment\";\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n    />\r\n  );\r\n}\r\n\r\nclass LocationList extends Component {\r\n  state = {\r\n    warehouseOptions: [],\r\n    selectedWarehouse: null,\r\n    selectedLocation: null,\r\n    date: null,\r\n    reportList: [],\r\n\r\n    showLoading: false,\r\n    submitLoading: false,\r\n    messageType: \"warning\",\r\n    messageOpen: false,\r\n    messageContent: \"\",\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    submittedInfo: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    getAllLocations().then((res) => {\r\n      const data = res.data;\r\n      let tmpList = [];\r\n      data.map((item) => {\r\n        tmpList.push({ ...item, value: item._id, label: item.ID + \" - \" + item.short_name + \" - \" + item.country });\r\n      });\r\n      this.setState({ warehouseOptions: tmpList });\r\n    });\r\n  }\r\n\r\n  handleSelectWarehouse = (data) => {\r\n    this.setState({ selectedWarehouse: data });\r\n  };\r\n\r\n  closeMessage = () => {\r\n    this.setState({ messageOpen: false });\r\n  };\r\n\r\n  validateSelection = () => {\r\n    if (this.state.selectedWarehouse == null) {\r\n      this.setState({\r\n        messageOpen: true,\r\n        messageType: \"warning\",\r\n        messageContent: \"Please select warehouse name!\",\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (this.state.date == null) {\r\n      this.setState({\r\n        messageOpen: true,\r\n        messageType: \"warning\",\r\n        messageContent: \"Please select date!\",\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  showData = () => {\r\n    if (this.validateSelection() == false) return;\r\n    this.setState({ showLoading: true });\r\n    let searchCondition = {\r\n      date: this.state.date,\r\n      warehouse: this.state.selectedWarehouse.value,\r\n    };\r\n    getInventoryReport(searchCondition)\r\n      .then((res) => {\r\n        this.setState({ showLoading: false });\r\n        let tmpList = [];\r\n        if (res.data.is_exist == false) {\r\n          this.setState({ submittedInfo: null });\r\n          res.data.results.map((item) => {\r\n            tmpList.push({\r\n              product_id: item._id,\r\n              sku: item.sku,\r\n              upc: item.upc,\r\n              asin: item.asin,\r\n              name: item.name,\r\n              warehouse: 0,\r\n              warehouse_inbound: 0,\r\n            });\r\n          });\r\n        } else {\r\n          this.setState({\r\n            submittedInfo: {\r\n              userName: res.data.submitted_user,\r\n              modifiedAt: res.data.modified_at,\r\n            },\r\n          });\r\n          res.data.results.map((item) => {\r\n            tmpList.push({\r\n              product_id: item.product_id,\r\n              sku: item.sku,\r\n              upc: item.upc,\r\n              asin: item.asin,\r\n              name: item.name,\r\n              warehouse: item.warehouse,\r\n              warehouse_inbound: item.warehouse_inbound,\r\n            });\r\n          });\r\n        }\r\n        this.setState({ reportList: tmpList });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          showLoading: false,\r\n          messageOpen: true,\r\n          messageType: \"warning\",\r\n          messageContent: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  setPage = (page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  setRowsPerPage = (event) => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleInputChange = (event, name, index) => {\r\n    let { reportList } = this.state;\r\n    reportList[index][name] = event.target.value;\r\n    this.setState({ reportList });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    let { reportList } = this.state;\r\n    this.setState({ submitLoading: true });\r\n    let newItem = [];\r\n    reportList.map((item) => {\r\n      newItem.push({\r\n        product: item.product_id,\r\n        warehouse: item.warehouse,\r\n        warehouse_inbound: item.warehouse_inbound,\r\n        total: parseFloat(item.warehouse) + parseFloat(item.warehouse_inbound),\r\n      });\r\n    });\r\n    let postData = {\r\n      items: newItem,\r\n      warehouse: this.state.selectedWarehouse.value,\r\n      date: this.state.date,\r\n      submitted_user: JSON.parse(localStorage.getItem(\"auth_user\"))._id,\r\n    };\r\n    addNewInventoryReport(postData).then((res) => {\r\n      this.setState({ submittedInfo: {\r\n        userName: JSON.parse(localStorage.getItem(\"auth_user\")).name,\r\n        modifiedAt: res.data.modified_at\r\n      }, submitLoading: false, messageOpen: true, messageType: \"success\", messageContent: \"Submitted successfully!\" });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      reportList,\r\n      warehouseOptions,\r\n      selectedWarehouse,\r\n      locationList,\r\n      selectedLocation,\r\n      date,\r\n      showLoading,\r\n      submitLoading,\r\n      messageType,\r\n      messageOpen,\r\n      messageContent,\r\n      rowsPerPage,\r\n      page,\r\n      submittedInfo,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <SimpleCard title=\"Inventory Warehouse Report\">\r\n          {submittedInfo && (\r\n            <Card\r\n              elevation={6}\r\n              className=\"welcome-card bg-light-primary p-sm-24 mb-24  flex flex-space-between\"\r\n            >\r\n              <div className=\"pr-16\">\r\n                <p className=\"m-0 text-black\">\r\n                  Last Submitted{\" \"}\r\n                  <span className=\"text-error\">{moment(submittedInfo.modifiedAt).format(\"LLLL\")}</span>{\" \"}\r\n                  by{\" \"}\r\n                  <span className=\"font-weight-500 text-primary\">\r\n                    {submittedInfo.userName}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </Card>\r\n          )}\r\n          <Grid container spacing={4} style={{ marginBottom: \"250px\" }}>\r\n            <Grid item sm={12} xs={12}>\r\n              <CustomSelect\r\n                textFieldProps={{\r\n                  label: \"Select Warehouse by Name\",\r\n                  InputLabelProps: {\r\n                    htmlFor: \"react-select-single\",\r\n                    shrink: true,\r\n                  },\r\n                  placeholder: \"\",\r\n                }}\r\n                options={warehouseOptions}\r\n                handleChange={(data) => this.handleSelectWarehouse(data)}\r\n                selectedValue={selectedWarehouse}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={6} xs={12}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  className=\"mb-16 w-100\"\r\n                  margin=\"none\"\r\n                  id=\"mui-pickers-date\"\r\n                  label=\"Select Date\"\r\n                  inputVariant=\"standard\"\r\n                  type=\"text\"\r\n                  autoOk={true}\r\n                  value={date}\r\n                  format={\"MMM, dd yyyy\"}\r\n                  onChange={(date) => this.setState({ date: date })}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item sm={6} xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={this.showData}\r\n                disabled={showLoading}\r\n                className=\"mb-16 mr-32\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Show Data\r\n                {showLoading && (\r\n                  <CircularProgress className=\"ml-10\" size={24} />\r\n                )}\r\n              </Button>\r\n              <Button\r\n                className=\"mb-16\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={submitLoading}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                {submitLoading && (\r\n                  <CircularProgress className=\"ml-10\" size={24} />\r\n                )}\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n            <Grid item sm={12} xs={12}>\r\n              <div className=\"w-100 overflow-auto\">\r\n                <Table\r\n                  style={{\r\n                    border: \"1px solid rgba(224, 224, 224, 1)\",\r\n                    whiteSpace: \"pre\",\r\n                  }}\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        colSpan={4}\r\n                        className=\"bg-light-green\"\r\n                      >\r\n                        Product\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        colSpan={3}\r\n                        className=\"bg-primary\"\r\n                      ></TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">SKU</TableCell>\r\n                      <TableCell align=\"center\">UPC</TableCell>\r\n                      <TableCell align=\"center\">ASIN</TableCell>\r\n                      <TableCell align=\"center\">Name</TableCell>\r\n                      <TableCell align=\"center\">Warehouse</TableCell>\r\n                      <TableCell align=\"center\">Warehouse Inbound</TableCell>\r\n                      <TableCell align=\"center\">Total In Location</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {reportList &&\r\n                      reportList\r\n                        .slice(\r\n                          page * rowsPerPage,\r\n                          page * rowsPerPage + rowsPerPage\r\n                        )\r\n                        .map((item, index) => {\r\n                          return (\r\n                            <TableRow key={index}>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                {item.sku}\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                {item.upc}\r\n                              </TableCell>\r\n                              <TableCell align=\"center\" className=\"px-10\">\r\n                                {item.asin}\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                {item.name}\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                  onChange={(e) =>\r\n                                    this.handleInputChange(\r\n                                      e,\r\n                                      \"warehouse\",\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                  InputProps={{\r\n                                    inputComponent: NumberFormatCustom,\r\n                                  }}\r\n                                  value={item.warehouse}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                  name=\"warehouse_inbound\"\r\n                                  onChange={(e) =>\r\n                                    this.handleInputChange(\r\n                                      e,\r\n                                      \"warehouse_inbound\",\r\n                                      index\r\n                                    )\r\n                                  }\r\n                                  InputProps={{\r\n                                    inputComponent: NumberFormatCustom,\r\n                                  }}\r\n                                  value={item.warehouse_inbound}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell className=\"px-10\" align=\"center\">\r\n                                <TextField\r\n                                  InputProps={{\r\n                                    inputComponent: NumberFormatCustom,\r\n                                  }}\r\n                                  readOnly\r\n                                  value={\r\n                                    parseFloat(item.warehouse) +\r\n                                    parseFloat(item.warehouse_inbound)\r\n                                  }\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                  </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                  className=\"px-16\"\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={reportList.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  backIconButtonProps={{\r\n                    \"aria-label\": \"Previous Page\",\r\n                  }}\r\n                  nextIconButtonProps={{\r\n                    \"aria-label\": \"Next Page\",\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.setRowsPerPage}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          open={messageOpen}\r\n          autoHideDuration={2000}\r\n          onClose={this.closeMessage}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.closeMessage}\r\n            variant={messageType}\r\n            message={messageContent}\r\n          />\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationList;\r\n"],"sourceRoot":""}